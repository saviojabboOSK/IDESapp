{
  "version": 3,
  "sources": ["../../../../node_modules/@kurkle/color/dist/color.esm.js", "../../../../node_modules/chart.js/src/helpers/helpers.core.ts", "../../../../node_modules/chart.js/src/helpers/helpers.math.ts", "../../../../node_modules/chart.js/src/helpers/helpers.collection.ts", "../../../../node_modules/chart.js/src/helpers/helpers.extras.ts", "../../../../node_modules/chart.js/src/helpers/helpers.easing.ts", "../../../../node_modules/chart.js/src/helpers/helpers.color.ts", "../../../../node_modules/chart.js/src/core/core.animations.defaults.js", "../../../../node_modules/chart.js/src/core/core.layouts.defaults.js", "../../../../node_modules/chart.js/src/helpers/helpers.intl.ts", "../../../../node_modules/chart.js/src/core/core.ticks.js", "../../../../node_modules/chart.js/src/core/core.scale.defaults.js", "../../../../node_modules/chart.js/src/core/core.defaults.js", "../../../../node_modules/chart.js/src/helpers/helpers.canvas.ts", "../../../../node_modules/chart.js/src/helpers/helpers.options.ts", "../../../../node_modules/chart.js/src/helpers/helpers.config.ts", "../../../../node_modules/chart.js/src/helpers/helpers.curve.ts", "../../../../node_modules/chart.js/src/helpers/helpers.dom.ts", "../../../../node_modules/chart.js/src/helpers/helpers.interpolation.ts", "../../../../node_modules/chart.js/src/helpers/helpers.rtl.ts", "../../../../node_modules/chart.js/src/helpers/helpers.segment.js", "../../../../node_modules/chart.js/src/helpers/helpers.dataset.ts", "../../../../node_modules/chart.js/src/core/core.animator.js", "../../../../node_modules/chart.js/src/core/core.animation.js", "../../../../node_modules/chart.js/src/core/core.animations.js", "../../../../node_modules/chart.js/src/core/core.datasetController.js", "../../../../node_modules/chart.js/src/controllers/controller.bar.js", "../../../../node_modules/chart.js/src/controllers/controller.bubble.js", "../../../../node_modules/chart.js/src/controllers/controller.doughnut.js", "../../../../node_modules/chart.js/src/controllers/controller.line.js", "../../../../node_modules/chart.js/src/controllers/controller.polarArea.js", "../../../../node_modules/chart.js/src/controllers/controller.pie.js", "../../../../node_modules/chart.js/src/controllers/controller.radar.js", "../../../../node_modules/chart.js/src/controllers/controller.scatter.js", "../../../../node_modules/chart.js/src/core/core.adapters.ts", "../../../../node_modules/chart.js/src/core/core.interaction.js", "../../../../node_modules/chart.js/src/core/core.layouts.js", "../../../../node_modules/chart.js/src/platform/platform.base.js", "../../../../node_modules/chart.js/src/platform/platform.basic.js", "../../../../node_modules/chart.js/src/platform/platform.dom.js", "../../../../node_modules/chart.js/src/platform/index.js", "../../../../node_modules/chart.js/src/core/core.element.ts", "../../../../node_modules/chart.js/src/core/core.scale.autoskip.js", "../../../../node_modules/chart.js/src/core/core.scale.js", "../../../../node_modules/chart.js/src/core/core.typedRegistry.js", "../../../../node_modules/chart.js/src/core/core.registry.js", "../../../../node_modules/chart.js/src/core/core.plugins.js", "../../../../node_modules/chart.js/src/core/core.config.js", "../../../../node_modules/chart.js/src/core/core.controller.js", "../../../../node_modules/chart.js/src/elements/element.arc.ts", "../../../../node_modules/chart.js/src/elements/element.line.js", "../../../../node_modules/chart.js/src/elements/element.point.ts", "../../../../node_modules/chart.js/src/elements/element.bar.js", "../../../../node_modules/chart.js/src/plugins/plugin.colors.ts", "../../../../node_modules/chart.js/src/plugins/plugin.decimation.js", "../../../../node_modules/chart.js/src/plugins/plugin.filler/filler.segment.js", "../../../../node_modules/chart.js/src/plugins/plugin.filler/filler.helper.js", "../../../../node_modules/chart.js/src/plugins/plugin.filler/filler.options.js", "../../../../node_modules/chart.js/src/plugins/plugin.filler/filler.target.stack.js", "../../../../node_modules/chart.js/src/plugins/plugin.filler/simpleArc.js", "../../../../node_modules/chart.js/src/plugins/plugin.filler/filler.target.js", "../../../../node_modules/chart.js/src/plugins/plugin.filler/filler.drawing.js", "../../../../node_modules/chart.js/src/plugins/plugin.filler/index.js", "../../../../node_modules/chart.js/src/plugins/plugin.legend.js", "../../../../node_modules/chart.js/src/plugins/plugin.title.js", "../../../../node_modules/chart.js/src/plugins/plugin.subtitle.js", "../../../../node_modules/chart.js/src/plugins/plugin.tooltip.js", "../../../../node_modules/chart.js/src/scales/scale.category.js", "../../../../node_modules/chart.js/src/scales/scale.linearbase.js", "../../../../node_modules/chart.js/src/scales/scale.linear.js", "../../../../node_modules/chart.js/src/scales/scale.logarithmic.js", "../../../../node_modules/chart.js/src/scales/scale.radialLinear.js", "../../../../node_modules/chart.js/src/scales/scale.time.js", "../../../../node_modules/chart.js/src/scales/scale.timeseries.js", "../../../../node_modules/chart.js/src/index.ts", "../../../../node_modules/date-fns/constants.js", "../../../../node_modules/date-fns/constructFrom.js", "../../../../node_modules/date-fns/toDate.js", "../../../../node_modules/date-fns/addDays.js", "../../../../node_modules/date-fns/addMonths.js", "../../../../node_modules/date-fns/addMilliseconds.js", "../../../../node_modules/date-fns/addHours.js", "../../../../node_modules/date-fns/_lib/defaultOptions.js", "../../../../node_modules/date-fns/startOfWeek.js", "../../../../node_modules/date-fns/startOfISOWeek.js", "../../../../node_modules/date-fns/getISOWeekYear.js", "../../../../node_modules/date-fns/_lib/getTimezoneOffsetInMilliseconds.js", "../../../../node_modules/date-fns/_lib/normalizeDates.js", "../../../../node_modules/date-fns/startOfDay.js", "../../../../node_modules/date-fns/differenceInCalendarDays.js", "../../../../node_modules/date-fns/startOfISOWeekYear.js", "../../../../node_modules/date-fns/addMinutes.js", "../../../../node_modules/date-fns/addQuarters.js", "../../../../node_modules/date-fns/addSeconds.js", "../../../../node_modules/date-fns/addWeeks.js", "../../../../node_modules/date-fns/addYears.js", "../../../../node_modules/date-fns/compareAsc.js", "../../../../node_modules/date-fns/isDate.js", "../../../../node_modules/date-fns/isValid.js", "../../../../node_modules/date-fns/differenceInCalendarMonths.js", "../../../../node_modules/date-fns/differenceInCalendarYears.js", "../../../../node_modules/date-fns/differenceInDays.js", "../../../../node_modules/date-fns/_lib/getRoundingMethod.js", "../../../../node_modules/date-fns/differenceInHours.js", "../../../../node_modules/date-fns/differenceInMilliseconds.js", "../../../../node_modules/date-fns/differenceInMinutes.js", "../../../../node_modules/date-fns/endOfDay.js", "../../../../node_modules/date-fns/endOfMonth.js", "../../../../node_modules/date-fns/isLastDayOfMonth.js", "../../../../node_modules/date-fns/differenceInMonths.js", "../../../../node_modules/date-fns/differenceInQuarters.js", "../../../../node_modules/date-fns/differenceInSeconds.js", "../../../../node_modules/date-fns/differenceInWeeks.js", "../../../../node_modules/date-fns/differenceInYears.js", "../../../../node_modules/date-fns/startOfQuarter.js", "../../../../node_modules/date-fns/startOfMonth.js", "../../../../node_modules/date-fns/endOfYear.js", "../../../../node_modules/date-fns/startOfYear.js", "../../../../node_modules/date-fns/endOfHour.js", "../../../../node_modules/date-fns/endOfWeek.js", "../../../../node_modules/date-fns/endOfMinute.js", "../../../../node_modules/date-fns/endOfQuarter.js", "../../../../node_modules/date-fns/endOfSecond.js", "../../../../node_modules/date-fns/locale/en-US/_lib/formatDistance.js", "../../../../node_modules/date-fns/locale/_lib/buildFormatLongFn.js", "../../../../node_modules/date-fns/locale/en-US/_lib/formatLong.js", "../../../../node_modules/date-fns/locale/en-US/_lib/formatRelative.js", "../../../../node_modules/date-fns/locale/_lib/buildLocalizeFn.js", "../../../../node_modules/date-fns/locale/en-US/_lib/localize.js", "../../../../node_modules/date-fns/locale/_lib/buildMatchFn.js", "../../../../node_modules/date-fns/locale/_lib/buildMatchPatternFn.js", "../../../../node_modules/date-fns/locale/en-US/_lib/match.js", "../../../../node_modules/date-fns/locale/en-US.js", "../../../../node_modules/date-fns/getDayOfYear.js", "../../../../node_modules/date-fns/getISOWeek.js", "../../../../node_modules/date-fns/getWeekYear.js", "../../../../node_modules/date-fns/startOfWeekYear.js", "../../../../node_modules/date-fns/getWeek.js", "../../../../node_modules/date-fns/_lib/addLeadingZeros.js", "../../../../node_modules/date-fns/_lib/format/lightFormatters.js", "../../../../node_modules/date-fns/_lib/format/formatters.js", "../../../../node_modules/date-fns/_lib/format/longFormatters.js", "../../../../node_modules/date-fns/_lib/protectedTokens.js", "../../../../node_modules/date-fns/format.js", "../../../../node_modules/date-fns/getDefaultOptions.js", "../../../../node_modules/date-fns/getISODay.js", "../../../../node_modules/date-fns/transpose.js", "../../../../node_modules/date-fns/parse/_lib/Setter.js", "../../../../node_modules/date-fns/parse/_lib/Parser.js", "../../../../node_modules/date-fns/parse/_lib/parsers/EraParser.js", "../../../../node_modules/date-fns/parse/_lib/constants.js", "../../../../node_modules/date-fns/parse/_lib/utils.js", "../../../../node_modules/date-fns/parse/_lib/parsers/YearParser.js", "../../../../node_modules/date-fns/parse/_lib/parsers/LocalWeekYearParser.js", "../../../../node_modules/date-fns/parse/_lib/parsers/ISOWeekYearParser.js", "../../../../node_modules/date-fns/parse/_lib/parsers/ExtendedYearParser.js", "../../../../node_modules/date-fns/parse/_lib/parsers/QuarterParser.js", "../../../../node_modules/date-fns/parse/_lib/parsers/StandAloneQuarterParser.js", "../../../../node_modules/date-fns/parse/_lib/parsers/MonthParser.js", "../../../../node_modules/date-fns/parse/_lib/parsers/StandAloneMonthParser.js", "../../../../node_modules/date-fns/setWeek.js", "../../../../node_modules/date-fns/parse/_lib/parsers/LocalWeekParser.js", "../../../../node_modules/date-fns/setISOWeek.js", "../../../../node_modules/date-fns/parse/_lib/parsers/ISOWeekParser.js", "../../../../node_modules/date-fns/parse/_lib/parsers/DateParser.js", "../../../../node_modules/date-fns/parse/_lib/parsers/DayOfYearParser.js", "../../../../node_modules/date-fns/setDay.js", "../../../../node_modules/date-fns/parse/_lib/parsers/DayParser.js", "../../../../node_modules/date-fns/parse/_lib/parsers/LocalDayParser.js", "../../../../node_modules/date-fns/parse/_lib/parsers/StandAloneLocalDayParser.js", "../../../../node_modules/date-fns/setISODay.js", "../../../../node_modules/date-fns/parse/_lib/parsers/ISODayParser.js", "../../../../node_modules/date-fns/parse/_lib/parsers/AMPMParser.js", "../../../../node_modules/date-fns/parse/_lib/parsers/AMPMMidnightParser.js", "../../../../node_modules/date-fns/parse/_lib/parsers/DayPeriodParser.js", "../../../../node_modules/date-fns/parse/_lib/parsers/Hour1to12Parser.js", "../../../../node_modules/date-fns/parse/_lib/parsers/Hour0to23Parser.js", "../../../../node_modules/date-fns/parse/_lib/parsers/Hour0To11Parser.js", "../../../../node_modules/date-fns/parse/_lib/parsers/Hour1To24Parser.js", "../../../../node_modules/date-fns/parse/_lib/parsers/MinuteParser.js", "../../../../node_modules/date-fns/parse/_lib/parsers/SecondParser.js", "../../../../node_modules/date-fns/parse/_lib/parsers/FractionOfSecondParser.js", "../../../../node_modules/date-fns/parse/_lib/parsers/ISOTimezoneWithZParser.js", "../../../../node_modules/date-fns/parse/_lib/parsers/ISOTimezoneParser.js", "../../../../node_modules/date-fns/parse/_lib/parsers/TimestampSecondsParser.js", "../../../../node_modules/date-fns/parse/_lib/parsers/TimestampMillisecondsParser.js", "../../../../node_modules/date-fns/parse/_lib/parsers.js", "../../../../node_modules/date-fns/parse.js", "../../../../node_modules/date-fns/startOfHour.js", "../../../../node_modules/date-fns/startOfMinute.js", "../../../../node_modules/date-fns/startOfSecond.js", "../../../../node_modules/date-fns/parseISO.js", "../../../../node_modules/chartjs-adapter-date-fns/dist/chartjs-adapter-date-fns.esm.js"],
  "sourcesContent": ["/*!\n * @kurkle/color v0.3.4\n * https://github.com/kurkle/color#readme\n * (c) 2024 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction b2p(v) {\n  return lim(round(v / 2.55), 0, 100);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\n\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\n\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\n\nconst map = {\n\tx: 'dark',\n\tZ: 'light',\n\tY: 're',\n\tX: 'blu',\n\tW: 'gr',\n\tV: 'medium',\n\tU: 'slate',\n\tA: 'ee',\n\tT: 'ol',\n\tS: 'or',\n\tB: 'ra',\n\tC: 'lateg',\n\tD: 'ights',\n\tR: 'in',\n\tQ: 'turquois',\n\tE: 'hi',\n\tP: 'ro',\n\tO: 'al',\n\tN: 'le',\n\tM: 'de',\n\tL: 'yello',\n\tF: 'en',\n\tK: 'ch',\n\tG: 'arks',\n\tH: 'ea',\n\tI: 'ightg',\n\tJ: 'wh'\n};\nconst names$1 = {\n\tOiceXe: 'f0f8ff',\n\tantiquewEte: 'faebd7',\n\taqua: 'ffff',\n\taquamarRe: '7fffd4',\n\tazuY: 'f0ffff',\n\tbeige: 'f5f5dc',\n\tbisque: 'ffe4c4',\n\tblack: '0',\n\tblanKedOmond: 'ffebcd',\n\tXe: 'ff',\n\tXeviTet: '8a2be2',\n\tbPwn: 'a52a2a',\n\tburlywood: 'deb887',\n\tcaMtXe: '5f9ea0',\n\tKartYuse: '7fff00',\n\tKocTate: 'd2691e',\n\tcSO: 'ff7f50',\n\tcSnflowerXe: '6495ed',\n\tcSnsilk: 'fff8dc',\n\tcrimson: 'dc143c',\n\tcyan: 'ffff',\n\txXe: '8b',\n\txcyan: '8b8b',\n\txgTMnPd: 'b8860b',\n\txWay: 'a9a9a9',\n\txgYF: '6400',\n\txgYy: 'a9a9a9',\n\txkhaki: 'bdb76b',\n\txmagFta: '8b008b',\n\txTivegYF: '556b2f',\n\txSange: 'ff8c00',\n\txScEd: '9932cc',\n\txYd: '8b0000',\n\txsOmon: 'e9967a',\n\txsHgYF: '8fbc8f',\n\txUXe: '483d8b',\n\txUWay: '2f4f4f',\n\txUgYy: '2f4f4f',\n\txQe: 'ced1',\n\txviTet: '9400d3',\n\tdAppRk: 'ff1493',\n\tdApskyXe: 'bfff',\n\tdimWay: '696969',\n\tdimgYy: '696969',\n\tdodgerXe: '1e90ff',\n\tfiYbrick: 'b22222',\n\tflSOwEte: 'fffaf0',\n\tfoYstWAn: '228b22',\n\tfuKsia: 'ff00ff',\n\tgaRsbSo: 'dcdcdc',\n\tghostwEte: 'f8f8ff',\n\tgTd: 'ffd700',\n\tgTMnPd: 'daa520',\n\tWay: '808080',\n\tgYF: '8000',\n\tgYFLw: 'adff2f',\n\tgYy: '808080',\n\thoneyMw: 'f0fff0',\n\thotpRk: 'ff69b4',\n\tRdianYd: 'cd5c5c',\n\tRdigo: '4b0082',\n\tivSy: 'fffff0',\n\tkhaki: 'f0e68c',\n\tlavFMr: 'e6e6fa',\n\tlavFMrXsh: 'fff0f5',\n\tlawngYF: '7cfc00',\n\tNmoncEffon: 'fffacd',\n\tZXe: 'add8e6',\n\tZcSO: 'f08080',\n\tZcyan: 'e0ffff',\n\tZgTMnPdLw: 'fafad2',\n\tZWay: 'd3d3d3',\n\tZgYF: '90ee90',\n\tZgYy: 'd3d3d3',\n\tZpRk: 'ffb6c1',\n\tZsOmon: 'ffa07a',\n\tZsHgYF: '20b2aa',\n\tZskyXe: '87cefa',\n\tZUWay: '778899',\n\tZUgYy: '778899',\n\tZstAlXe: 'b0c4de',\n\tZLw: 'ffffe0',\n\tlime: 'ff00',\n\tlimegYF: '32cd32',\n\tlRF: 'faf0e6',\n\tmagFta: 'ff00ff',\n\tmaPon: '800000',\n\tVaquamarRe: '66cdaa',\n\tVXe: 'cd',\n\tVScEd: 'ba55d3',\n\tVpurpN: '9370db',\n\tVsHgYF: '3cb371',\n\tVUXe: '7b68ee',\n\tVsprRggYF: 'fa9a',\n\tVQe: '48d1cc',\n\tVviTetYd: 'c71585',\n\tmidnightXe: '191970',\n\tmRtcYam: 'f5fffa',\n\tmistyPse: 'ffe4e1',\n\tmoccasR: 'ffe4b5',\n\tnavajowEte: 'ffdead',\n\tnavy: '80',\n\tTdlace: 'fdf5e6',\n\tTive: '808000',\n\tTivedBb: '6b8e23',\n\tSange: 'ffa500',\n\tSangeYd: 'ff4500',\n\tScEd: 'da70d6',\n\tpOegTMnPd: 'eee8aa',\n\tpOegYF: '98fb98',\n\tpOeQe: 'afeeee',\n\tpOeviTetYd: 'db7093',\n\tpapayawEp: 'ffefd5',\n\tpHKpuff: 'ffdab9',\n\tperu: 'cd853f',\n\tpRk: 'ffc0cb',\n\tplum: 'dda0dd',\n\tpowMrXe: 'b0e0e6',\n\tpurpN: '800080',\n\tYbeccapurpN: '663399',\n\tYd: 'ff0000',\n\tPsybrown: 'bc8f8f',\n\tPyOXe: '4169e1',\n\tsaddNbPwn: '8b4513',\n\tsOmon: 'fa8072',\n\tsandybPwn: 'f4a460',\n\tsHgYF: '2e8b57',\n\tsHshell: 'fff5ee',\n\tsiFna: 'a0522d',\n\tsilver: 'c0c0c0',\n\tskyXe: '87ceeb',\n\tUXe: '6a5acd',\n\tUWay: '708090',\n\tUgYy: '708090',\n\tsnow: 'fffafa',\n\tsprRggYF: 'ff7f',\n\tstAlXe: '4682b4',\n\ttan: 'd2b48c',\n\tteO: '8080',\n\ttEstN: 'd8bfd8',\n\ttomato: 'ff6347',\n\tQe: '40e0d0',\n\tviTet: 'ee82ee',\n\tJHt: 'f5deb3',\n\twEte: 'ffffff',\n\twEtesmoke: 'f5f5f5',\n\tLw: 'ffff00',\n\tLwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\n\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\n\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\n\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\n\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\n\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nexport { Color, b2n, b2p, index_esm as default, hexParse, hexString, hsl2rgb, hslString, hsv2rgb, hueParse, hwb2rgb, lim, n2b, n2p, nameParse, p2b, rgb2hsl, rgbParse, rgbString, rotate, round };\n", "/**\n * @namespace Chart.helpers\n */\n\nimport type {AnyObject} from '../types/basic.js';\nimport type {ActiveDataPoint, ChartEvent} from '../types/index.js';\n\n/**\n * An empty function that can be used, for example, for optional callback.\n */\nexport function noop() {\n  /* noop */\n}\n\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */\nexport const uid = (() => {\n  let id = 0;\n  return () => id++;\n})();\n\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */\nexport function isNullOrUndef(value: unknown): value is null | undefined {\n  return value === null || value === undefined;\n}\n\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */\nexport function isArray<T = unknown>(value: unknown): value is T[] {\n  if (Array.isArray && Array.isArray(value)) {\n    return true;\n  }\n  const type = Object.prototype.toString.call(value);\n  if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n    return true;\n  }\n  return false;\n}\n\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */\nexport function isObject(value: unknown): value is AnyObject {\n  return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */\nfunction isNumberFinite(value: unknown): value is number {\n  return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\nexport {\n  isNumberFinite as isFinite,\n};\n\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */\nexport function finiteOrDefault(value: unknown, defaultValue: number) {\n  return isNumberFinite(value) ? value : defaultValue;\n}\n\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */\nexport function valueOrDefault<T>(value: T | undefined, defaultValue: T) {\n  return typeof value === 'undefined' ? defaultValue : value;\n}\n\nexport const toPercentage = (value: number | string, dimension: number) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100\n    : +value / dimension;\n\nexport const toDimension = (value: number | string, dimension: number) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100 * dimension\n    : +value;\n\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */\nexport function callback<T extends (this: TA, ...restArgs: unknown[]) => R, TA, R>(\n  fn: T | undefined,\n  args: unknown[],\n  thisArg?: TA\n): R | undefined {\n  if (fn && typeof fn.call === 'function') {\n    return fn.apply(thisArg, args);\n  }\n}\n\n/**\n * Note(SB) for performance sake, this method should only be used when loopable type\n * is unknown or in none intensive code (not called often and small loopable). Else\n * it's preferable to use a regular for() loop and save extra function calls.\n * @param loopable - The object or array to be iterated.\n * @param fn - The function to call for each item.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n * @param [reverse] - If true, iterates backward on the loopable.\n */\nexport function each<T, TA>(\n  loopable: Record<string, T>,\n  fn: (this: TA, v: T, i: string) => void,\n  thisArg?: TA,\n  reverse?: boolean\n): void;\nexport function each<T, TA>(\n  loopable: T[],\n  fn: (this: TA, v: T, i: number) => void,\n  thisArg?: TA,\n  reverse?: boolean\n): void;\nexport function each<T, TA>(\n  loopable: T[] | Record<string, T>,\n  fn: (this: TA, v: T, i: any) => void,\n  thisArg?: TA,\n  reverse?: boolean\n) {\n  let i: number, len: number, keys: string[];\n  if (isArray(loopable)) {\n    len = loopable.length;\n    if (reverse) {\n      for (i = len - 1; i >= 0; i--) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    } else {\n      for (i = 0; i < len; i++) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    }\n  } else if (isObject(loopable)) {\n    keys = Object.keys(loopable);\n    len = keys.length;\n    for (i = 0; i < len; i++) {\n      fn.call(thisArg, loopable[keys[i]], keys[i]);\n    }\n  }\n}\n\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */\nexport function _elementsEqual(a0: ActiveDataPoint[], a1: ActiveDataPoint[]) {\n  let i: number, ilen: number, v0: ActiveDataPoint, v1: ActiveDataPoint;\n\n  if (!a0 || !a1 || a0.length !== a1.length) {\n    return false;\n  }\n\n  for (i = 0, ilen = a0.length; i < ilen; ++i) {\n    v0 = a0[i];\n    v1 = a1[i];\n\n    if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */\nexport function clone<T>(source: T): T {\n  if (isArray(source)) {\n    return source.map(clone) as unknown as T;\n  }\n\n  if (isObject(source)) {\n    const target = Object.create(null);\n    const keys = Object.keys(source);\n    const klen = keys.length;\n    let k = 0;\n\n    for (; k < klen; ++k) {\n      target[keys[k]] = clone(source[keys[k]]);\n    }\n\n    return target;\n  }\n\n  return source;\n}\n\nfunction isValidKey(key: string) {\n  return ['__proto__', 'prototype', 'constructor'].indexOf(key) === -1;\n}\n\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */\nexport function _merger(key: string, target: AnyObject, source: AnyObject, options: AnyObject) {\n  if (!isValidKey(key)) {\n    return;\n  }\n\n  const tval = target[key];\n  const sval = source[key];\n\n  if (isObject(tval) && isObject(sval)) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    merge(tval, sval, options);\n  } else {\n    target[key] = clone(sval);\n  }\n}\n\nexport interface MergeOptions {\n  merger?: (key: string, target: AnyObject, source: AnyObject, options?: AnyObject) => void;\n}\n\n/**\n * Recursively deep copies `source` properties into `target` with the given `options`.\n * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n * @param target - The target object in which all sources are merged into.\n * @param source - Object(s) to merge into `target`.\n * @param [options] - Merging options:\n * @param [options.merger] - The merge method (key, target, source, options)\n * @returns The `target` object.\n */\nexport function merge<T>(target: T, source: [], options?: MergeOptions): T;\nexport function merge<T, S1>(target: T, source: S1, options?: MergeOptions): T & S1;\nexport function merge<T, S1>(target: T, source: [S1], options?: MergeOptions): T & S1;\nexport function merge<T, S1, S2>(target: T, source: [S1, S2], options?: MergeOptions): T & S1 & S2;\nexport function merge<T, S1, S2, S3>(target: T, source: [S1, S2, S3], options?: MergeOptions): T & S1 & S2 & S3;\nexport function merge<T, S1, S2, S3, S4>(\n  target: T,\n  source: [S1, S2, S3, S4],\n  options?: MergeOptions\n): T & S1 & S2 & S3 & S4;\nexport function merge<T>(target: T, source: AnyObject[], options?: MergeOptions): AnyObject;\nexport function merge<T>(target: T, source: AnyObject[], options?: MergeOptions): AnyObject {\n  const sources = isArray(source) ? source : [source];\n  const ilen = sources.length;\n\n  if (!isObject(target)) {\n    return target as AnyObject;\n  }\n\n  options = options || {};\n  const merger = options.merger || _merger;\n  let current: AnyObject;\n\n  for (let i = 0; i < ilen; ++i) {\n    current = sources[i];\n    if (!isObject(current)) {\n      continue;\n    }\n\n    const keys = Object.keys(current);\n    for (let k = 0, klen = keys.length; k < klen; ++k) {\n      merger(keys[k], target, current, options as AnyObject);\n    }\n  }\n\n  return target;\n}\n\n/**\n * Recursively deep copies `source` properties into `target` *only* if not defined in target.\n * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n * @param target - The target object in which all sources are merged into.\n * @param source - Object(s) to merge into `target`.\n * @returns The `target` object.\n */\nexport function mergeIf<T>(target: T, source: []): T;\nexport function mergeIf<T, S1>(target: T, source: S1): T & S1;\nexport function mergeIf<T, S1>(target: T, source: [S1]): T & S1;\nexport function mergeIf<T, S1, S2>(target: T, source: [S1, S2]): T & S1 & S2;\nexport function mergeIf<T, S1, S2, S3>(target: T, source: [S1, S2, S3]): T & S1 & S2 & S3;\nexport function mergeIf<T, S1, S2, S3, S4>(target: T, source: [S1, S2, S3, S4]): T & S1 & S2 & S3 & S4;\nexport function mergeIf<T>(target: T, source: AnyObject[]): AnyObject;\nexport function mergeIf<T>(target: T, source: AnyObject[]): AnyObject {\n  // eslint-disable-next-line @typescript-eslint/no-use-before-define\n  return merge<T>(target, source, {merger: _mergerIf});\n}\n\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */\nexport function _mergerIf(key: string, target: AnyObject, source: AnyObject) {\n  if (!isValidKey(key)) {\n    return;\n  }\n\n  const tval = target[key];\n  const sval = source[key];\n\n  if (isObject(tval) && isObject(sval)) {\n    mergeIf(tval, sval);\n  } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n    target[key] = clone(sval);\n  }\n}\n\n/**\n * @private\n */\nexport function _deprecated(scope: string, value: unknown, previous: string, current: string) {\n  if (value !== undefined) {\n    console.warn(scope + ': \"' + previous +\n      '\" is deprecated. Please use \"' + current + '\" instead');\n  }\n}\n\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n  // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n  '': v => v,\n  // default resolvers\n  x: o => o.x,\n  y: o => o.y\n};\n\n/**\n * @private\n */\nexport function _splitKey(key: string) {\n  const parts = key.split('.');\n  const keys: string[] = [];\n  let tmp = '';\n  for (const part of parts) {\n    tmp += part;\n    if (tmp.endsWith('\\\\')) {\n      tmp = tmp.slice(0, -1) + '.';\n    } else {\n      keys.push(tmp);\n      tmp = '';\n    }\n  }\n  return keys;\n}\n\nfunction _getKeyResolver(key: string) {\n  const keys = _splitKey(key);\n  return obj => {\n    for (const k of keys) {\n      if (k === '') {\n        // For backward compatibility:\n        // Chart.helpers.core resolveObjectKey should break at empty key\n        break;\n      }\n      obj = obj && obj[k];\n    }\n    return obj;\n  };\n}\n\nexport function resolveObjectKey(obj: AnyObject, key: string): any {\n  const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n  return resolver(obj);\n}\n\n/**\n * @private\n */\nexport function _capitalize(str: string) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\n\nexport const defined = (value: unknown) => typeof value !== 'undefined';\n\nexport const isFunction = (value: unknown): value is (...args: any[]) => any => typeof value === 'function';\n\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nexport const setsEqual = <T>(a: Set<T>, b: Set<T>) => {\n  if (a.size !== b.size) {\n    return false;\n  }\n\n  for (const item of a) {\n    if (!b.has(item)) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\n/**\n * @param e - The event\n * @private\n */\nexport function _isClickEvent(e: ChartEvent) {\n  return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n", "import type {Point} from '../types/geometric.js';\nimport {isFinite as isFiniteNumber} from './helpers.core.js';\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */\n\nexport const PI = Math.PI;\nexport const TAU = 2 * PI;\nexport const PITAU = TAU + PI;\nexport const INFINITY = Number.POSITIVE_INFINITY;\nexport const RAD_PER_DEG = PI / 180;\nexport const HALF_PI = PI / 2;\nexport const QUARTER_PI = PI / 4;\nexport const TWO_THIRDS_PI = PI * 2 / 3;\n\nexport const log10 = Math.log10;\nexport const sign = Math.sign;\n\nexport function almostEquals(x: number, y: number, epsilon: number) {\n  return Math.abs(x - y) < epsilon;\n}\n\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */\nexport function niceNum(range: number) {\n  const roundedRange = Math.round(range);\n  range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n  const niceRange = Math.pow(10, Math.floor(log10(range)));\n  const fraction = range / niceRange;\n  const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n  return niceFraction * niceRange;\n}\n\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */\nexport function _factorize(value: number) {\n  const result: number[] = [];\n  const sqrt = Math.sqrt(value);\n  let i: number;\n\n  for (i = 1; i < sqrt; i++) {\n    if (value % i === 0) {\n      result.push(i);\n      result.push(value / i);\n    }\n  }\n  if (sqrt === (sqrt | 0)) { // if value is a square number\n    result.push(sqrt);\n  }\n\n  result.sort((a, b) => a - b).pop();\n  return result;\n}\n\n/**\n * Verifies that attempting to coerce n to string or number won't throw a TypeError.\n */\nfunction isNonPrimitive(n: unknown) {\n  return typeof n === 'symbol' || (typeof n === 'object' && n !== null && !(Symbol.toPrimitive in n || 'toString' in n || 'valueOf' in n));\n}\n\nexport function isNumber(n: unknown): n is number {\n  return !isNonPrimitive(n) && !isNaN(parseFloat(n as string)) && isFinite(n as number);\n}\n\nexport function almostWhole(x: number, epsilon: number) {\n  const rounded = Math.round(x);\n  return ((rounded - epsilon) <= x) && ((rounded + epsilon) >= x);\n}\n\n/**\n * @private\n */\nexport function _setMinAndMaxByKey(\n  array: Record<string, number>[],\n  target: { min: number, max: number },\n  property: string\n) {\n  let i: number, ilen: number, value: number;\n\n  for (i = 0, ilen = array.length; i < ilen; i++) {\n    value = array[i][property];\n    if (!isNaN(value)) {\n      target.min = Math.min(target.min, value);\n      target.max = Math.max(target.max, value);\n    }\n  }\n}\n\nexport function toRadians(degrees: number) {\n  return degrees * (PI / 180);\n}\n\nexport function toDegrees(radians: number) {\n  return radians * (180 / PI);\n}\n\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */\nexport function _decimalPlaces(x: number) {\n  if (!isFiniteNumber(x)) {\n    return;\n  }\n  let e = 1;\n  let p = 0;\n  while (Math.round(x * e) / e !== x) {\n    e *= 10;\n    p++;\n  }\n  return p;\n}\n\n// Gets the angle from vertical upright to the point about a centre.\nexport function getAngleFromPoint(\n  centrePoint: Point,\n  anglePoint: Point\n) {\n  const distanceFromXCenter = anglePoint.x - centrePoint.x;\n  const distanceFromYCenter = anglePoint.y - centrePoint.y;\n  const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n\n  let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n  if (angle < (-0.5 * PI)) {\n    angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n  }\n\n  return {\n    angle,\n    distance: radialDistanceFromCenter\n  };\n}\n\nexport function distanceBetweenPoints(pt1: Point, pt2: Point) {\n  return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */\nexport function _angleDiff(a: number, b: number) {\n  return (a - b + PITAU) % TAU - PI;\n}\n\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */\nexport function _normalizeAngle(a: number) {\n  return (a % TAU + TAU) % TAU;\n}\n\n/**\n * @private\n */\nexport function _angleBetween(angle: number, start: number, end: number, sameAngleIsFullCircle?: boolean) {\n  const a = _normalizeAngle(angle);\n  const s = _normalizeAngle(start);\n  const e = _normalizeAngle(end);\n  const angleToStart = _normalizeAngle(s - a);\n  const angleToEnd = _normalizeAngle(e - a);\n  const startToAngle = _normalizeAngle(a - s);\n  const endToAngle = _normalizeAngle(a - e);\n  return a === s || a === e || (sameAngleIsFullCircle && s === e)\n    || (angleToStart > angleToEnd && startToAngle < endToAngle);\n}\n\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */\nexport function _limitValue(value: number, min: number, max: number) {\n  return Math.max(min, Math.min(max, value));\n}\n\n/**\n * @param {number} value\n * @private\n */\nexport function _int16Range(value: number) {\n  return _limitValue(value, -32768, 32767);\n}\n\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */\nexport function _isBetween(value: number, start: number, end: number, epsilon = 1e-6) {\n  return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n", "import {_capitalize} from './helpers.core.js';\n\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param value - value to find\n * @param cmp\n * @private\n */\nexport function _lookup(\n  table: number[],\n  value: number,\n  cmp?: (value: number) => boolean\n): {lo: number, hi: number};\nexport function _lookup<T>(\n  table: T[],\n  value: number,\n  cmp: (value: number) => boolean\n): {lo: number, hi: number};\nexport function _lookup(\n  table: unknown[],\n  value: number,\n  cmp?: (value: number) => boolean\n) {\n  cmp = cmp || ((index) => table[index] < value);\n  let hi = table.length - 1;\n  let lo = 0;\n  let mid: number;\n\n  while (hi - lo > 1) {\n    mid = (lo + hi) >> 1;\n    if (cmp(mid)) {\n      lo = mid;\n    } else {\n      hi = mid;\n    }\n  }\n\n  return {lo, hi};\n}\n\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */\nexport const _lookupByKey = (\n  table: Record<string, number>[],\n  key: string,\n  value: number,\n  last?: boolean\n) =>\n  _lookup(table, value, last\n    ? index => {\n      const ti = table[index][key];\n      return ti < value || ti === value && table[index + 1][key] === value;\n    }\n    : index => table[index][key] < value);\n\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */\nexport const _rlookupByKey = (\n  table: Record<string, number>[],\n  key: string,\n  value: number\n) =>\n  _lookup(table, value, index => table[index][key] >= value);\n\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */\nexport function _filterBetween(values: number[], min: number, max: number) {\n  let start = 0;\n  let end = values.length;\n\n  while (start < end && values[start] < min) {\n    start++;\n  }\n  while (end > start && values[end - 1] > max) {\n    end--;\n  }\n\n  return start > 0 || end < values.length\n    ? values.slice(start, end)\n    : values;\n}\n\nconst arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'] as const;\n\nexport interface ArrayListener<T> {\n  _onDataPush?(...item: T[]): void;\n  _onDataPop?(): void;\n  _onDataShift?(): void;\n  _onDataSplice?(index: number, deleteCount: number, ...items: T[]): void;\n  _onDataUnshift?(...item: T[]): void;\n}\n\n/**\n * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\n * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\n * called on the '_onData*' callbacks (e.g. _onDataPush, etc.) with same arguments.\n */\nexport function listenArrayEvents<T>(array: T[], listener: ArrayListener<T>): void;\nexport function listenArrayEvents(array, listener) {\n  if (array._chartjs) {\n    array._chartjs.listeners.push(listener);\n    return;\n  }\n\n  Object.defineProperty(array, '_chartjs', {\n    configurable: true,\n    enumerable: false,\n    value: {\n      listeners: [listener]\n    }\n  });\n\n  arrayEvents.forEach((key) => {\n    const method = '_onData' + _capitalize(key);\n    const base = array[key];\n\n    Object.defineProperty(array, key, {\n      configurable: true,\n      enumerable: false,\n      value(...args) {\n        const res = base.apply(this, args);\n\n        array._chartjs.listeners.forEach((object) => {\n          if (typeof object[method] === 'function') {\n            object[method](...args);\n          }\n        });\n\n        return res;\n      }\n    });\n  });\n}\n\n\n/**\n * Removes the given array event listener and cleanup extra attached properties (such as\n * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\n */\nexport function unlistenArrayEvents<T>(array: T[], listener: ArrayListener<T>): void;\nexport function unlistenArrayEvents(array, listener) {\n  const stub = array._chartjs;\n  if (!stub) {\n    return;\n  }\n\n  const listeners = stub.listeners;\n  const index = listeners.indexOf(listener);\n  if (index !== -1) {\n    listeners.splice(index, 1);\n  }\n\n  if (listeners.length > 0) {\n    return;\n  }\n\n  arrayEvents.forEach((key) => {\n    delete array[key];\n  });\n\n  delete array._chartjs;\n}\n\n/**\n * @param items\n */\nexport function _arrayUnique<T>(items: T[]) {\n  const set = new Set<T>(items);\n\n  if (set.size === items.length) {\n    return items;\n  }\n\n  return Array.from(set);\n}\n", "import type {ChartMeta, PointElement} from '../types/index.js';\n\nimport {_limitValue} from './helpers.math.js';\nimport {_lookupByKey} from './helpers.collection.js';\nimport {isNullOrUndef} from './helpers.core.js';\n\nexport function fontString(pixelSize: number, fontStyle: string, fontFamily: string) {\n  return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n\n/**\n* Request animation polyfill\n*/\nexport const requestAnimFrame = (function() {\n  if (typeof window === 'undefined') {\n    return function(callback) {\n      return callback();\n    };\n  }\n  return window.requestAnimationFrame;\n}());\n\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */\nexport function throttled<TArgs extends Array<any>>(\n  fn: (...args: TArgs) => void,\n  thisArg: any,\n) {\n  let argsToUse = [] as TArgs;\n  let ticking = false;\n\n  return function(...args: TArgs) {\n    // Save the args for use later\n    argsToUse = args;\n    if (!ticking) {\n      ticking = true;\n      requestAnimFrame.call(window, () => {\n        ticking = false;\n        fn.apply(thisArg, argsToUse);\n      });\n    }\n  };\n}\n\n/**\n * Debounces calling `fn` for `delay` ms\n */\nexport function debounce<TArgs extends Array<any>>(fn: (...args: TArgs) => void, delay: number) {\n  let timeout;\n  return function(...args: TArgs) {\n    if (delay) {\n      clearTimeout(timeout);\n      timeout = setTimeout(fn, delay, args);\n    } else {\n      fn.apply(this, args);\n    }\n    return delay;\n  };\n}\n\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */\nexport const _toLeftRightCenter = (align: 'start' | 'end' | 'center') => align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */\nexport const _alignStartEnd = (align: 'start' | 'end' | 'center', start: number, end: number) => align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */\nexport const _textX = (align: 'left' | 'right' | 'center', left: number, right: number, rtl: boolean) => {\n  const check = rtl ? 'left' : 'right';\n  return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n\n/**\n * Return start and count of visible points.\n * @private\n */\nexport function _getStartAndCountOfVisiblePoints(meta: ChartMeta<'line' | 'scatter'>, points: PointElement[], animationsDisabled: boolean) {\n  const pointCount = points.length;\n\n  let start = 0;\n  let count = pointCount;\n\n  if (meta._sorted) {\n    const {iScale, vScale, _parsed} = meta;\n    const spanGaps = meta.dataset ? meta.dataset.options ? meta.dataset.options.spanGaps : null : null;\n    const axis = iScale.axis;\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n\n    if (minDefined) {\n      start = Math.min(\n        // @ts-expect-error Need to type _parsed\n        _lookupByKey(_parsed, axis, min).lo,\n        // @ts-expect-error Need to fix types on _lookupByKey\n        animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo);\n      if (spanGaps) {\n        const distanceToDefinedLo = (_parsed\n          .slice(0, start + 1)\n          .reverse()\n          .findIndex(\n            point => !isNullOrUndef(point[vScale.axis])));\n        start -= Math.max(0, distanceToDefinedLo);\n      }\n      start = _limitValue(start, 0, pointCount - 1);\n    }\n    if (maxDefined) {\n      let end = Math.max(\n        // @ts-expect-error Need to type _parsed\n        _lookupByKey(_parsed, iScale.axis, max, true).hi + 1,\n        // @ts-expect-error Need to fix types on _lookupByKey\n        animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1);\n      if (spanGaps) {\n        const distanceToDefinedHi = (_parsed\n          .slice(end - 1)\n          .findIndex(\n            point => !isNullOrUndef(point[vScale.axis])));\n        end += Math.max(0, distanceToDefinedHi);\n      }\n      count = _limitValue(end, start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n\n  return {start, count};\n}\n\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */\nexport function _scaleRangesChanged(meta) {\n  const {xScale, yScale, _scaleRanges} = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min\n\t\t|| _scaleRanges.xmax !== xScale.max\n\t\t|| _scaleRanges.ymin !== yScale.min\n\t\t|| _scaleRanges.ymax !== yScale.max;\n\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n", "import {PI, TAU, HALF_PI} from './helpers.math.js';\n\nconst atEdge = (t: number) => t === 0 || t === 1;\nconst elasticIn = (t: number, s: number, p: number) => -(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t: number, s: number, p: number) => Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */\nconst effects = {\n  linear: (t: number) => t,\n\n  easeInQuad: (t: number) => t * t,\n\n  easeOutQuad: (t: number) => -t * (t - 2),\n\n  easeInOutQuad: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t\n    : -0.5 * ((--t) * (t - 2) - 1),\n\n  easeInCubic: (t: number) => t * t * t,\n\n  easeOutCubic: (t: number) => (t -= 1) * t * t + 1,\n\n  easeInOutCubic: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t\n    : 0.5 * ((t -= 2) * t * t + 2),\n\n  easeInQuart: (t: number) => t * t * t * t,\n\n  easeOutQuart: (t: number) => -((t -= 1) * t * t * t - 1),\n\n  easeInOutQuart: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t\n    : -0.5 * ((t -= 2) * t * t * t - 2),\n\n  easeInQuint: (t: number) => t * t * t * t * t,\n\n  easeOutQuint: (t: number) => (t -= 1) * t * t * t * t + 1,\n\n  easeInOutQuint: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t * t\n    : 0.5 * ((t -= 2) * t * t * t * t + 2),\n\n  easeInSine: (t: number) => -Math.cos(t * HALF_PI) + 1,\n\n  easeOutSine: (t: number) => Math.sin(t * HALF_PI),\n\n  easeInOutSine: (t: number) => -0.5 * (Math.cos(PI * t) - 1),\n\n  easeInExpo: (t: number) => (t === 0) ? 0 : Math.pow(2, 10 * (t - 1)),\n\n  easeOutExpo: (t: number) => (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1,\n\n  easeInOutExpo: (t: number) => atEdge(t) ? t : t < 0.5\n    ? 0.5 * Math.pow(2, 10 * (t * 2 - 1))\n    : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n\n  easeInCirc: (t: number) => (t >= 1) ? t : -(Math.sqrt(1 - t * t) - 1),\n\n  easeOutCirc: (t: number) => Math.sqrt(1 - (t -= 1) * t),\n\n  easeInOutCirc: (t: number) => ((t /= 0.5) < 1)\n    ? -0.5 * (Math.sqrt(1 - t * t) - 1)\n    : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n\n  easeInElastic: (t: number) => atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n\n  easeOutElastic: (t: number) => atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n\n  easeInOutElastic(t: number) {\n    const s = 0.1125;\n    const p = 0.45;\n    return atEdge(t) ? t :\n      t < 0.5\n        ? 0.5 * elasticIn(t * 2, s, p)\n        : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n  },\n\n  easeInBack(t: number) {\n    const s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n  },\n\n  easeOutBack(t: number) {\n    const s = 1.70158;\n    return (t -= 1) * t * ((s + 1) * t + s) + 1;\n  },\n\n  easeInOutBack(t: number) {\n    let s = 1.70158;\n    if ((t /= 0.5) < 1) {\n      return 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\n    }\n    return 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n  },\n\n  easeInBounce: (t: number) => 1 - effects.easeOutBounce(1 - t),\n\n  easeOutBounce(t: number) {\n    const m = 7.5625;\n    const d = 2.75;\n    if (t < (1 / d)) {\n      return m * t * t;\n    }\n    if (t < (2 / d)) {\n      return m * (t -= (1.5 / d)) * t + 0.75;\n    }\n    if (t < (2.5 / d)) {\n      return m * (t -= (2.25 / d)) * t + 0.9375;\n    }\n    return m * (t -= (2.625 / d)) * t + 0.984375;\n  },\n\n  easeInOutBounce: (t: number) => (t < 0.5)\n    ? effects.easeInBounce(t * 2) * 0.5\n    : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5,\n} as const;\n\nexport type EasingFunction = keyof typeof effects\n\nexport default effects;\n", "import {Color} from '@kurkle/color';\n\nexport function isPatternOrGradient(value: unknown): value is CanvasPattern | CanvasGradient {\n  if (value && typeof value === 'object') {\n    const type = value.toString();\n    return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n  }\n\n  return false;\n}\n\nexport function color(value: CanvasGradient): CanvasGradient;\nexport function color(value: CanvasPattern): CanvasPattern;\nexport function color(\n  value:\n  | string\n  | { r: number; g: number; b: number; a: number }\n  | [number, number, number]\n  | [number, number, number, number]\n): Color;\nexport function color(value) {\n  return isPatternOrGradient(value) ? value : new Color(value);\n}\n\nexport function getHoverColor(value: CanvasGradient): CanvasGradient;\nexport function getHoverColor(value: CanvasPattern): CanvasPattern;\nexport function getHoverColor(value: string): string;\nexport function getHoverColor(value) {\n  return isPatternOrGradient(value)\n    ? value\n    : new Color(value).saturate(0.5).darken(0.1).hexString();\n}\n", "const numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\n\nexport function applyAnimationsDefaults(defaults) {\n  defaults.set('animation', {\n    delay: undefined,\n    duration: 1000,\n    easing: 'easeOutQuart',\n    fn: undefined,\n    from: undefined,\n    loop: undefined,\n    to: undefined,\n    type: undefined,\n  });\n\n  defaults.describe('animation', {\n    _fallback: false,\n    _indexable: false,\n    _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\n  });\n\n  defaults.set('animations', {\n    colors: {\n      type: 'color',\n      properties: colors\n    },\n    numbers: {\n      type: 'number',\n      properties: numbers\n    },\n  });\n\n  defaults.describe('animations', {\n    _fallback: 'animation',\n  });\n\n  defaults.set('transitions', {\n    active: {\n      animation: {\n        duration: 400\n      }\n    },\n    resize: {\n      animation: {\n        duration: 0\n      }\n    },\n    show: {\n      animations: {\n        colors: {\n          from: 'transparent'\n        },\n        visible: {\n          type: 'boolean',\n          duration: 0 // show immediately\n        },\n      }\n    },\n    hide: {\n      animations: {\n        colors: {\n          to: 'transparent'\n        },\n        visible: {\n          type: 'boolean',\n          easing: 'linear',\n          fn: v => v | 0 // for keeping the dataset visible all the way through the animation\n        },\n      }\n    }\n  });\n}\n", "export function applyLayoutsDefaults(defaults) {\n  defaults.set('layout', {\n    autoPadding: true,\n    padding: {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    }\n  });\n}\n", "\nconst intlCache = new Map<string, Intl.NumberFormat>();\n\nfunction getNumberFormat(locale: string, options?: Intl.NumberFormatOptions) {\n  options = options || {};\n  const cacheKey = locale + JSON.stringify(options);\n  let formatter = intlCache.get(cacheKey);\n  if (!formatter) {\n    formatter = new Intl.NumberFormat(locale, options);\n    intlCache.set(cacheKey, formatter);\n  }\n  return formatter;\n}\n\nexport function formatNumber(num: number, locale: string, options?: Intl.NumberFormatOptions) {\n  return getNumberFormat(locale, options).format(num);\n}\n", "import {isArray} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {log10} from '../helpers/helpers.math.js';\n\n/**\n * Namespace to hold formatters for different types of ticks\n * @namespace Chart.Ticks.formatters\n */\nconst formatters = {\n  /**\n   * Formatter for value labels\n   * @method Chart.Ticks.formatters.values\n   * @param value the value to display\n   * @return {string|string[]} the label to display\n   */\n  values(value) {\n    return isArray(value) ? /** @type {string[]} */ (value) : '' + value;\n  },\n\n  /**\n   * Formatter for numeric ticks\n   * @method Chart.Ticks.formatters.numeric\n   * @param tickValue {number} the value to be formatted\n   * @param index {number} the position of the tickValue parameter in the ticks array\n   * @param ticks {object[]} the list of ticks being converted\n   * @return {string} string representation of the tickValue parameter\n   */\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0'; // never show decimal places for 0\n    }\n\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue; // This is used when there are less than 2 ticks as the tick interval.\n\n    if (ticks.length > 1) {\n      // all ticks are small or there huge numbers; use scientific notation\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n\n      delta = calculateDelta(tickValue, ticks);\n    }\n\n    const logDelta = log10(Math.abs(delta));\n\n    // When datasets have values approaching Number.MAX_VALUE, the tick calculations might result in\n    // infinity and eventually NaN. Passing NaN for minimumFractionDigits or maximumFractionDigits\n    // will make the number formatter throw. So instead we check for isNaN and use a fallback value.\n    //\n    // toFixed has a max of 20 decimal places\n    const numDecimal = isNaN(logDelta) ? 1 : Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\n    Object.assign(options, this.options.ticks.format);\n\n    return formatNumber(tickValue, locale, options);\n  },\n\n\n  /**\n   * Formatter for logarithmic ticks\n   * @method Chart.Ticks.formatters.logarithmic\n   * @param tickValue {number} the value to be formatted\n   * @param index {number} the position of the tickValue parameter in the ticks array\n   * @param ticks {object[]} the list of ticks being converted\n   * @return {string} string representation of the tickValue parameter\n   */\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = ticks[index].significand || (tickValue / (Math.pow(10, Math.floor(log10(tickValue)))));\n    if ([1, 2, 3, 5, 10, 15].includes(remain) || index > 0.8 * ticks.length) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n\n};\n\n\nfunction calculateDelta(tickValue, ticks) {\n  // Figure out how many digits to show\n  // The space between the first two ticks might be smaller than normal spacing\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n\n  // If we have a number like 2.5 as the delta, figure out how many decimal places we need\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    // not an integer\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\n\n/**\n * Namespace to hold static tick generation functions\n * @namespace Chart.Ticks\n */\nexport default {formatters};\n", "import Ticks from './core.ticks.js';\n\nexport function applyScaleDefaults(defaults) {\n  defaults.set('scale', {\n    display: true,\n    offset: false,\n    reverse: false,\n    beginAtZero: false,\n\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 3.0.0\n     */\n    bounds: 'ticks',\n\n    clip: true,\n\n    /**\n     * Addition grace added to max and reduced from min data value.\n     * @since 3.0.0\n     */\n    grace: 0,\n\n    // grid line settings\n    grid: {\n      display: true,\n      lineWidth: 1,\n      drawOnChartArea: true,\n      drawTicks: true,\n      tickLength: 8,\n      tickWidth: (_ctx, options) => options.lineWidth,\n      tickColor: (_ctx, options) => options.color,\n      offset: false,\n    },\n\n    border: {\n      display: true,\n      dash: [],\n      dashOffset: 0.0,\n      width: 1\n    },\n\n    // scale title\n    title: {\n      // display property\n      display: false,\n\n      // actual label\n      text: '',\n\n      // top/bottom padding\n      padding: {\n        top: 4,\n        bottom: 4\n      }\n    },\n\n    // label settings\n    ticks: {\n      minRotation: 0,\n      maxRotation: 50,\n      mirror: false,\n      textStrokeWidth: 0,\n      textStrokeColor: '',\n      padding: 3,\n      display: true,\n      autoSkip: true,\n      autoSkipPadding: 3,\n      labelOffset: 0,\n      // We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\n      callback: Ticks.formatters.values,\n      minor: {},\n      major: {},\n      align: 'center',\n      crossAlign: 'near',\n\n      showLabelBackdrop: false,\n      backdropColor: 'rgba(255, 255, 255, 0.75)',\n      backdropPadding: 2,\n    }\n  });\n\n  defaults.route('scale.ticks', 'color', '', 'color');\n  defaults.route('scale.grid', 'color', '', 'borderColor');\n  defaults.route('scale.border', 'color', '', 'borderColor');\n  defaults.route('scale.title', 'color', '', 'color');\n\n  defaults.describe('scale', {\n    _fallback: false,\n    _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n    _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash',\n  });\n\n  defaults.describe('scales', {\n    _fallback: 'scale',\n  });\n\n  defaults.describe('scale.ticks', {\n    _scriptable: (name) => name !== 'backdropPadding' && name !== 'callback',\n    _indexable: (name) => name !== 'backdropPadding',\n  });\n}\n", "import {getHoverColor} from '../helpers/helpers.color.js';\nimport {isObject, merge, valueOrDefault} from '../helpers/helpers.core.js';\nimport {applyAnimationsDefaults} from './core.animations.defaults.js';\nimport {applyLayoutsDefaults} from './core.layouts.defaults.js';\nimport {applyScaleDefaults} from './core.scale.defaults.js';\n\nexport const overrides = Object.create(null);\nexport const descriptors = Object.create(null);\n\n/**\n * @param {object} node\n * @param {string} key\n * @return {object}\n */\nfunction getScope(node, key) {\n  if (!key) {\n    return node;\n  }\n  const keys = key.split('.');\n  for (let i = 0, n = keys.length; i < n; ++i) {\n    const k = keys[i];\n    node = node[k] || (node[k] = Object.create(null));\n  }\n  return node;\n}\n\nfunction set(root, scope, values) {\n  if (typeof scope === 'string') {\n    return merge(getScope(root, scope), values);\n  }\n  return merge(getScope(root, ''), scope);\n}\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is exported for typedoc\n */\nexport class Defaults {\n  constructor(_descriptors, _appliers) {\n    this.animation = undefined;\n    this.backgroundColor = 'rgba(0,0,0,0.1)';\n    this.borderColor = 'rgba(0,0,0,0.1)';\n    this.color = '#666';\n    this.datasets = {};\n    this.devicePixelRatio = (context) => context.chart.platform.getDevicePixelRatio();\n    this.elements = {};\n    this.events = [\n      'mousemove',\n      'mouseout',\n      'click',\n      'touchstart',\n      'touchmove'\n    ];\n    this.font = {\n      family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n      size: 12,\n      style: 'normal',\n      lineHeight: 1.2,\n      weight: null\n    };\n    this.hover = {};\n    this.hoverBackgroundColor = (ctx, options) => getHoverColor(options.backgroundColor);\n    this.hoverBorderColor = (ctx, options) => getHoverColor(options.borderColor);\n    this.hoverColor = (ctx, options) => getHoverColor(options.color);\n    this.indexAxis = 'x';\n    this.interaction = {\n      mode: 'nearest',\n      intersect: true,\n      includeInvisible: false\n    };\n    this.maintainAspectRatio = true;\n    this.onHover = null;\n    this.onClick = null;\n    this.parsing = true;\n    this.plugins = {};\n    this.responsive = true;\n    this.scale = undefined;\n    this.scales = {};\n    this.showLine = true;\n    this.drawActiveElementsOnTop = true;\n\n    this.describe(_descriptors);\n    this.apply(_appliers);\n  }\n\n  /**\n\t * @param {string|object} scope\n\t * @param {object} [values]\n\t */\n  set(scope, values) {\n    return set(this, scope, values);\n  }\n\n  /**\n\t * @param {string} scope\n\t */\n  get(scope) {\n    return getScope(this, scope);\n  }\n\n  /**\n\t * @param {string|object} scope\n\t * @param {object} [values]\n\t */\n  describe(scope, values) {\n    return set(descriptors, scope, values);\n  }\n\n  override(scope, values) {\n    return set(overrides, scope, values);\n  }\n\n  /**\n\t * Routes the named defaults to fallback to another scope/name.\n\t * This routing is useful when those target values, like defaults.color, are changed runtime.\n\t * If the values would be copied, the runtime change would not take effect. By routing, the\n\t * fallback is evaluated at each access, so its always up to date.\n\t *\n\t * Example:\n\t *\n\t * \tdefaults.route('elements.arc', 'backgroundColor', '', 'color')\n\t *   - reads the backgroundColor from defaults.color when undefined locally\n\t *\n\t * @param {string} scope Scope this route applies to.\n\t * @param {string} name Property name that should be routed to different namespace when not defined here.\n\t * @param {string} targetScope The namespace where those properties should be routed to.\n\t * Empty string ('') is the root of defaults.\n\t * @param {string} targetName The target name in the target scope the property should be routed to.\n\t */\n  route(scope, name, targetScope, targetName) {\n    const scopeObject = getScope(this, scope);\n    const targetScopeObject = getScope(this, targetScope);\n    const privateName = '_' + name;\n\n    Object.defineProperties(scopeObject, {\n      // A private property is defined to hold the actual value, when this property is set in its scope (set in the setter)\n      [privateName]: {\n        value: scopeObject[name],\n        writable: true\n      },\n      // The actual property is defined as getter/setter so we can do the routing when value is not locally set.\n      [name]: {\n        enumerable: true,\n        get() {\n          const local = this[privateName];\n          const target = targetScopeObject[targetName];\n          if (isObject(local)) {\n            return Object.assign({}, target, local);\n          }\n          return valueOrDefault(local, target);\n        },\n        set(value) {\n          this[privateName] = value;\n        }\n      }\n    });\n  }\n\n  apply(appliers) {\n    appliers.forEach((apply) => apply(this));\n  }\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Defaults({\n  _scriptable: (name) => !name.startsWith('on'),\n  _indexable: (name) => name !== 'events',\n  hover: {\n    _fallback: 'interaction'\n  },\n  interaction: {\n    _scriptable: false,\n    _indexable: false,\n  }\n}, [applyAnimationsDefaults, applyLayoutsDefaults, applyScaleDefaults]);\n", "import type {\n  Chart,\n  Point,\n  FontSpec,\n  CanvasFontSpec,\n  PointStyle,\n  RenderTextOpts,\n  BackdropOptions\n} from '../types/index.js';\nimport type {\n  TRBL,\n  SplinePoint,\n  RoundedRect,\n  TRBLCorners\n} from '../types/geometric.js';\nimport {isArray, isNullOrUndef} from './helpers.core.js';\nimport {PI, TAU, HALF_PI, QUARTER_PI, TWO_THIRDS_PI, RAD_PER_DEG} from './helpers.math.js';\n\n/**\n * Converts the given font object into a CSS font string.\n * @param font - A font object.\n * @return The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n * @private\n */\nexport function toFontString(font: FontSpec) {\n  if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n    return null;\n  }\n\n  return (font.style ? font.style + ' ' : '')\n\t\t+ (font.weight ? font.weight + ' ' : '')\n\t\t+ font.size + 'px '\n\t\t+ font.family;\n}\n\n/**\n * @private\n */\nexport function _measureText(\n  ctx: CanvasRenderingContext2D,\n  data: Record<string, number>,\n  gc: string[],\n  longest: number,\n  string: string\n) {\n  let textWidth = data[string];\n  if (!textWidth) {\n    textWidth = data[string] = ctx.measureText(string).width;\n    gc.push(string);\n  }\n  if (textWidth > longest) {\n    longest = textWidth;\n  }\n  return longest;\n}\n\ntype Thing = string | undefined | null\ntype Things = (Thing | Thing[])[]\n\n/**\n * @private\n */\n// eslint-disable-next-line complexity\nexport function _longestText(\n  ctx: CanvasRenderingContext2D,\n  font: string,\n  arrayOfThings: Things,\n  cache?: {data?: Record<string, number>, garbageCollect?: string[], font?: string}\n) {\n  cache = cache || {};\n  let data = cache.data = cache.data || {};\n  let gc = cache.garbageCollect = cache.garbageCollect || [];\n\n  if (cache.font !== font) {\n    data = cache.data = {};\n    gc = cache.garbageCollect = [];\n    cache.font = font;\n  }\n\n  ctx.save();\n\n  ctx.font = font;\n  let longest = 0;\n  const ilen = arrayOfThings.length;\n  let i: number, j: number, jlen: number, thing: Thing | Thing[], nestedThing: Thing | Thing[];\n  for (i = 0; i < ilen; i++) {\n    thing = arrayOfThings[i];\n\n    // Undefined strings and arrays should not be measured\n    if (thing !== undefined && thing !== null && !isArray(thing)) {\n      longest = _measureText(ctx, data, gc, longest, thing);\n    } else if (isArray(thing)) {\n      // if it is an array lets measure each element\n      // to do maybe simplify this function a bit so we can do this more recursively?\n      for (j = 0, jlen = thing.length; j < jlen; j++) {\n        nestedThing = thing[j];\n        // Undefined strings and arrays should not be measured\n        if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n          longest = _measureText(ctx, data, gc, longest, nestedThing);\n        }\n      }\n    }\n  }\n\n  ctx.restore();\n\n  const gcLen = gc.length / 2;\n  if (gcLen > arrayOfThings.length) {\n    for (i = 0; i < gcLen; i++) {\n      delete data[gc[i]];\n    }\n    gc.splice(0, gcLen);\n  }\n  return longest;\n}\n\n/**\n * Returns the aligned pixel value to avoid anti-aliasing blur\n * @param chart - The chart instance.\n * @param pixel - A pixel value.\n * @param width - The width of the element.\n * @returns The aligned pixel value.\n * @private\n */\nexport function _alignPixel(chart: Chart, pixel: number, width: number) {\n  const devicePixelRatio = chart.currentDevicePixelRatio;\n  const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n  return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n\n/**\n * Clears the entire canvas.\n */\nexport function clearCanvas(canvas?: HTMLCanvasElement, ctx?: CanvasRenderingContext2D) {\n  if (!ctx && !canvas) {\n    return;\n  }\n\n  ctx = ctx || canvas.getContext('2d');\n\n  ctx.save();\n  // canvas.width and canvas.height do not consider the canvas transform,\n  // while clearRect does\n  ctx.resetTransform();\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n  ctx.restore();\n}\n\nexport interface DrawPointOptions {\n  pointStyle: PointStyle;\n  rotation?: number;\n  radius: number;\n  borderWidth: number;\n}\n\nexport function drawPoint(\n  ctx: CanvasRenderingContext2D,\n  options: DrawPointOptions,\n  x: number,\n  y: number\n) {\n  // eslint-disable-next-line @typescript-eslint/no-use-before-define\n  drawPointLegend(ctx, options, x, y, null);\n}\n\n// eslint-disable-next-line complexity\nexport function drawPointLegend(\n  ctx: CanvasRenderingContext2D,\n  options: DrawPointOptions,\n  x: number,\n  y: number,\n  w: number\n) {\n  let type: string, xOffset: number, yOffset: number, size: number, cornerRadius: number, width: number, xOffsetW: number, yOffsetW: number;\n  const style = options.pointStyle;\n  const rotation = options.rotation;\n  const radius = options.radius;\n  let rad = (rotation || 0) * RAD_PER_DEG;\n\n  if (style && typeof style === 'object') {\n    type = style.toString();\n    if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.rotate(rad);\n      ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n      ctx.restore();\n      return;\n    }\n  }\n\n  if (isNaN(radius) || radius <= 0) {\n    return;\n  }\n\n  ctx.beginPath();\n\n  switch (style) {\n  // Default includes circle\n    default:\n      if (w) {\n        ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n      } else {\n        ctx.arc(x, y, radius, 0, TAU);\n      }\n      ctx.closePath();\n      break;\n    case 'triangle':\n      width = w ? w / 2 : radius;\n      ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n      rad += TWO_THIRDS_PI;\n      ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n      rad += TWO_THIRDS_PI;\n      ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n      ctx.closePath();\n      break;\n    case 'rectRounded':\n    // NOTE: the rounded rect implementation changed to use `arc` instead of\n    // `quadraticCurveTo` since it generates better results when rect is\n    // almost a circle. 0.516 (instead of 0.5) produces results with visually\n    // closer proportion to the previous impl and it is inscribed in the\n    // circle with `radius`. For more details, see the following PRs:\n    // https://github.com/chartjs/Chart.js/issues/5597\n    // https://github.com/chartjs/Chart.js/issues/5858\n      cornerRadius = radius * 0.516;\n      size = radius - cornerRadius;\n      xOffset = Math.cos(rad + QUARTER_PI) * size;\n      xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n      yOffset = Math.sin(rad + QUARTER_PI) * size;\n      yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n      ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n      ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n      ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n      ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n      ctx.closePath();\n      break;\n    case 'rect':\n      if (!rotation) {\n        size = Math.SQRT1_2 * radius;\n        width = w ? w / 2 : size;\n        ctx.rect(x - width, y - size, 2 * width, 2 * size);\n        break;\n      }\n      rad += QUARTER_PI;\n    /* falls through */\n    case 'rectRot':\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      ctx.closePath();\n      break;\n    case 'crossRot':\n      rad += QUARTER_PI;\n    /* falls through */\n    case 'cross':\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.moveTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      break;\n    case 'star':\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.moveTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      rad += QUARTER_PI;\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.moveTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      break;\n    case 'line':\n      xOffset = w ? w / 2 : Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      ctx.moveTo(x - xOffset, y - yOffset);\n      ctx.lineTo(x + xOffset, y + yOffset);\n      break;\n    case 'dash':\n      ctx.moveTo(x, y);\n      ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n      break;\n    case false:\n      ctx.closePath();\n      break;\n  }\n\n  ctx.fill();\n  if (options.borderWidth > 0) {\n    ctx.stroke();\n  }\n}\n\n/**\n * Returns true if the point is inside the rectangle\n * @param point - The point to test\n * @param area - The rectangle\n * @param margin - allowed margin\n * @private\n */\nexport function _isPointInArea(\n  point: Point,\n  area: TRBL,\n  margin?: number\n) {\n  margin = margin || 0.5; // margin - default is to match rounded decimals\n\n  return !area || (point && point.x > area.left - margin && point.x < area.right + margin &&\n\t\tpoint.y > area.top - margin && point.y < area.bottom + margin);\n}\n\nexport function clipArea(ctx: CanvasRenderingContext2D, area: TRBL) {\n  ctx.save();\n  ctx.beginPath();\n  ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n  ctx.clip();\n}\n\nexport function unclipArea(ctx: CanvasRenderingContext2D) {\n  ctx.restore();\n}\n\n/**\n * @private\n */\nexport function _steppedLineTo(\n  ctx: CanvasRenderingContext2D,\n  previous: Point,\n  target: Point,\n  flip?: boolean,\n  mode?: string\n) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  if (mode === 'middle') {\n    const midpoint = (previous.x + target.x) / 2.0;\n    ctx.lineTo(midpoint, previous.y);\n    ctx.lineTo(midpoint, target.y);\n  } else if (mode === 'after' !== !!flip) {\n    ctx.lineTo(previous.x, target.y);\n  } else {\n    ctx.lineTo(target.x, previous.y);\n  }\n  ctx.lineTo(target.x, target.y);\n}\n\n/**\n * @private\n */\nexport function _bezierCurveTo(\n  ctx: CanvasRenderingContext2D,\n  previous: SplinePoint,\n  target: SplinePoint,\n  flip?: boolean\n) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  ctx.bezierCurveTo(\n    flip ? previous.cp1x : previous.cp2x,\n    flip ? previous.cp1y : previous.cp2y,\n    flip ? target.cp2x : target.cp1x,\n    flip ? target.cp2y : target.cp1y,\n    target.x,\n    target.y);\n}\n\nfunction setRenderOpts(ctx: CanvasRenderingContext2D, opts: RenderTextOpts) {\n  if (opts.translation) {\n    ctx.translate(opts.translation[0], opts.translation[1]);\n  }\n\n  if (!isNullOrUndef(opts.rotation)) {\n    ctx.rotate(opts.rotation);\n  }\n\n  if (opts.color) {\n    ctx.fillStyle = opts.color;\n  }\n\n  if (opts.textAlign) {\n    ctx.textAlign = opts.textAlign;\n  }\n\n  if (opts.textBaseline) {\n    ctx.textBaseline = opts.textBaseline;\n  }\n}\n\nfunction decorateText(\n  ctx: CanvasRenderingContext2D,\n  x: number,\n  y: number,\n  line: string,\n  opts: RenderTextOpts\n) {\n  if (opts.strikethrough || opts.underline) {\n    /**\n     * Now that IE11 support has been dropped, we can use more\n     * of the TextMetrics object. The actual bounding boxes\n     * are unflagged in Chrome, Firefox, Edge, and Safari so they\n     * can be safely used.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics#Browser_compatibility\n     */\n    const metrics = ctx.measureText(line);\n    const left = x - metrics.actualBoundingBoxLeft;\n    const right = x + metrics.actualBoundingBoxRight;\n    const top = y - metrics.actualBoundingBoxAscent;\n    const bottom = y + metrics.actualBoundingBoxDescent;\n    const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n\n    ctx.strokeStyle = ctx.fillStyle;\n    ctx.beginPath();\n    ctx.lineWidth = opts.decorationWidth || 2;\n    ctx.moveTo(left, yDecoration);\n    ctx.lineTo(right, yDecoration);\n    ctx.stroke();\n  }\n}\n\nfunction drawBackdrop(ctx: CanvasRenderingContext2D, opts: BackdropOptions) {\n  const oldColor = ctx.fillStyle;\n\n  ctx.fillStyle = opts.color as string;\n  ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n  ctx.fillStyle = oldColor;\n}\n\n/**\n * Render text onto the canvas\n */\nexport function renderText(\n  ctx: CanvasRenderingContext2D,\n  text: string | string[],\n  x: number,\n  y: number,\n  font: CanvasFontSpec,\n  opts: RenderTextOpts = {}\n) {\n  const lines = isArray(text) ? text : [text];\n  const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n  let i: number, line: string;\n\n  ctx.save();\n  ctx.font = font.string;\n  setRenderOpts(ctx, opts);\n\n  for (i = 0; i < lines.length; ++i) {\n    line = lines[i];\n\n    if (opts.backdrop) {\n      drawBackdrop(ctx, opts.backdrop);\n    }\n\n    if (stroke) {\n      if (opts.strokeColor) {\n        ctx.strokeStyle = opts.strokeColor;\n      }\n\n      if (!isNullOrUndef(opts.strokeWidth)) {\n        ctx.lineWidth = opts.strokeWidth;\n      }\n\n      ctx.strokeText(line, x, y, opts.maxWidth);\n    }\n\n    ctx.fillText(line, x, y, opts.maxWidth);\n    decorateText(ctx, x, y, line, opts);\n\n    y += Number(font.lineHeight);\n  }\n\n  ctx.restore();\n}\n\n/**\n * Add a path of a rectangle with rounded corners to the current sub-path\n * @param ctx - Context\n * @param rect - Bounding rect\n */\nexport function addRoundedRectPath(\n  ctx: CanvasRenderingContext2D,\n  rect: RoundedRect & { radius: TRBLCorners }\n) {\n  const {x, y, w, h, radius} = rect;\n\n  // top left arc\n  ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, 1.5 * PI, PI, true);\n\n  // line from top left to bottom left\n  ctx.lineTo(x, y + h - radius.bottomLeft);\n\n  // bottom left arc\n  ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n\n  // line from bottom left to bottom right\n  ctx.lineTo(x + w - radius.bottomRight, y + h);\n\n  // bottom right arc\n  ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n\n  // line from bottom right to top right\n  ctx.lineTo(x + w, y + radius.topRight);\n\n  // top right arc\n  ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n\n  // line from top right to top left\n  ctx.lineTo(x + radius.topLeft, y);\n}\n", "import defaults from '../core/core.defaults.js';\nimport {isArray, isObject, toDimension, valueOrDefault} from './helpers.core.js';\nimport {toFontString} from './helpers.canvas.js';\nimport type {ChartArea, FontSpec, Point} from '../types/index.js';\nimport type {TRBL, TRBLCorners} from '../types/geometric.js';\n\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\n\n/**\n * @alias Chart.helpers.options\n * @namespace\n */\n/**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param size - The font size (in pixels) used to resolve relative `value`.\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */\nexport function toLineHeight(value: number | string, size: number): number {\n  const matches = ('' + value).match(LINE_HEIGHT);\n  if (!matches || matches[1] === 'normal') {\n    return size * 1.2;\n  }\n\n  value = +matches[2];\n\n  switch (matches[3]) {\n    case 'px':\n      return value;\n    case '%':\n      value /= 100;\n      break;\n    default:\n      break;\n  }\n\n  return size * value;\n}\n\nconst numberOrZero = (v: unknown) => +v || 0;\n\n/**\n * @param value\n * @param props\n */\nexport function _readValueToProps<K extends string>(value: number | Record<K, number>, props: K[]): Record<K, number>;\nexport function _readValueToProps<K extends string, T extends string>(value: number | Record<K & T, number>, props: Record<T, K>): Record<T, number>;\nexport function _readValueToProps(value: number | Record<string, number>, props: string[] | Record<string, string>) {\n  const ret = {};\n  const objProps = isObject(props);\n  const keys = objProps ? Object.keys(props) : props;\n  const read = isObject(value)\n    ? objProps\n      ? prop => valueOrDefault(value[prop], value[props[prop]])\n      : prop => value[prop]\n    : () => value;\n\n  for (const prop of keys) {\n    ret[prop] = numberOrZero(read(prop));\n  }\n  return ret;\n}\n\n/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left)\n * @since 3.0.0\n */\nexport function toTRBL(value: number | TRBL | Point) {\n  return _readValueToProps(value, {top: 'y', right: 'x', bottom: 'y', left: 'x'});\n}\n\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */\nexport function toTRBLCorners(value: number | TRBLCorners) {\n  return _readValueToProps(value, ['topLeft', 'topRight', 'bottomLeft', 'bottomRight']);\n}\n\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */\nexport function toPadding(value?: number | TRBL): ChartArea {\n  const obj = toTRBL(value) as ChartArea;\n\n  obj.width = obj.left + obj.right;\n  obj.height = obj.top + obj.bottom;\n\n  return obj;\n}\n\n/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A object that contains fallback font options.\n * @return The font object.\n * @private\n */\n\nexport function toFont(options: Partial<FontSpec>, fallback?: Partial<FontSpec>) {\n  options = options || {};\n  fallback = fallback || defaults.font as FontSpec;\n\n  let size = valueOrDefault(options.size, fallback.size);\n\n  if (typeof size === 'string') {\n    size = parseInt(size, 10);\n  }\n  let style = valueOrDefault(options.style, fallback.style);\n  if (style && !('' + style).match(FONT_STYLE)) {\n    console.warn('Invalid font style specified: \"' + style + '\"');\n    style = undefined;\n  }\n\n  const font = {\n    family: valueOrDefault(options.family, fallback.family),\n    lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n    size,\n    style,\n    weight: valueOrDefault(options.weight, fallback.weight),\n    string: ''\n  };\n\n  font.string = toFontString(font);\n  return font;\n}\n\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last value.\n * @param context - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param index - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param info - object to return information about resolution in\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */\nexport function resolve(inputs: Array<unknown>, context?: object, index?: number, info?: { cacheable: boolean }) {\n  let cacheable = true;\n  let i: number, ilen: number, value: unknown;\n\n  for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n    value = inputs[i];\n    if (value === undefined) {\n      continue;\n    }\n    if (context !== undefined && typeof value === 'function') {\n      value = value(context);\n      cacheable = false;\n    }\n    if (index !== undefined && isArray(value)) {\n      value = value[index % value.length];\n      cacheable = false;\n    }\n    if (value !== undefined) {\n      if (info && !cacheable) {\n        info.cacheable = false;\n      }\n      return value;\n    }\n  }\n}\n\n/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */\nexport function _addGrace(minmax: { min: number; max: number; }, grace: number | string, beginAtZero: boolean) {\n  const {min, max} = minmax;\n  const change = toDimension(grace, (max - min) / 2);\n  const keepZero = (value: number, add: number) => beginAtZero && value === 0 ? 0 : value + add;\n  return {\n    min: keepZero(min, -Math.abs(change)),\n    max: keepZero(max, change)\n  };\n}\n\n/**\n * Create a context inheriting parentContext\n * @param parentContext\n * @param context\n * @returns\n */\nexport function createContext<T extends object>(parentContext: null, context: T): T;\nexport function createContext<T extends object, P extends T>(parentContext: P, context: T): P & T;\nexport function createContext(parentContext: object, context: object) {\n  return Object.assign(Object.create(parentContext), context);\n}\n", "/* eslint-disable @typescript-eslint/no-use-before-define */\nimport type {AnyObject} from '../types/basic.js';\nimport type {ChartMeta} from '../types/index.js';\nimport type {\n  ResolverObjectKey,\n  ResolverCache,\n  ResolverProxy,\n  DescriptorDefaults,\n  Descriptor,\n  ContextCache,\n  ContextProxy\n} from './helpers.config.types.js';\nimport {isArray, isFunction, isObject, resolveObjectKey, _capitalize} from './helpers.core.js';\n\nexport * from './helpers.config.types.js';\n\n/**\n * Creates a Proxy for resolving raw values for options.\n * @param scopes - The option scopes to look for values, in resolution order\n * @param prefixes - The prefixes for values, in resolution order.\n * @param rootScopes - The root option scopes\n * @param fallback - Parent scopes fallback\n * @param getTarget - callback for getting the target for changed values\n * @returns Proxy\n * @private\n */\nexport function _createResolver<\n  T extends AnyObject[] = AnyObject[],\n  R extends AnyObject[] = T\n>(\n  scopes: T,\n  prefixes = [''],\n  rootScopes?: R,\n  fallback?: ResolverObjectKey,\n  getTarget = () => scopes[0]\n) {\n  const finalRootScopes = rootScopes || scopes;\n  if (typeof fallback === 'undefined') {\n    fallback = _resolve('_fallback', scopes);\n  }\n  const cache: ResolverCache<T, R> = {\n    [Symbol.toStringTag]: 'Object',\n    _cacheable: true,\n    _scopes: scopes,\n    _rootScopes: finalRootScopes,\n    _fallback: fallback,\n    _getTarget: getTarget,\n    override: (scope: AnyObject) => _createResolver([scope, ...scopes], prefixes, finalRootScopes, fallback),\n  };\n  return new Proxy(cache, {\n    /**\n     * A trap for the delete operator.\n     */\n    deleteProperty(target, prop: string) {\n      delete target[prop]; // remove from cache\n      delete target._keys; // remove cached keys\n      delete scopes[0][prop]; // remove from top level scope\n      return true;\n    },\n\n    /**\n     * A trap for getting property values.\n     */\n    get(target, prop: string) {\n      return _cached(target, prop,\n        () => _resolveWithPrefixes(prop, prefixes, scopes, target));\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */\n    getOwnPropertyDescriptor(target, prop) {\n      return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n    },\n\n    /**\n     * A trap for Object.getPrototypeOf.\n     */\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(scopes[0]);\n    },\n\n    /**\n     * A trap for the in operator.\n     */\n    has(target, prop: string) {\n      return getKeysFromAllScopes(target).includes(prop);\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */\n    ownKeys(target) {\n      return getKeysFromAllScopes(target);\n    },\n\n    /**\n     * A trap for setting property values.\n     */\n    set(target, prop: string, value) {\n      const storage = target._storage || (target._storage = getTarget());\n      target[prop] = storage[prop] = value; // set to top level scope + cache\n      delete target._keys; // remove cached keys\n      return true;\n    }\n  }) as ResolverProxy<T, R>;\n}\n\n/**\n * Returns an Proxy for resolving option values with context.\n * @param proxy - The Proxy returned by `_createResolver`\n * @param context - Context object for scriptable/indexable options\n * @param subProxy - The proxy provided for scriptable options\n * @param descriptorDefaults - Defaults for descriptors\n * @private\n */\nexport function _attachContext<\n  T extends AnyObject[] = AnyObject[],\n  R extends AnyObject[] = T\n>(\n  proxy: ResolverProxy<T, R>,\n  context: AnyObject,\n  subProxy?: ResolverProxy<T, R>,\n  descriptorDefaults?: DescriptorDefaults\n) {\n  const cache: ContextCache<T, R> = {\n    _cacheable: false,\n    _proxy: proxy,\n    _context: context,\n    _subProxy: subProxy,\n    _stack: new Set(),\n    _descriptors: _descriptors(proxy, descriptorDefaults),\n    setContext: (ctx: AnyObject) => _attachContext(proxy, ctx, subProxy, descriptorDefaults),\n    override: (scope: AnyObject) => _attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n  };\n  return new Proxy(cache, {\n    /**\n     * A trap for the delete operator.\n     */\n    deleteProperty(target, prop) {\n      delete target[prop]; // remove from cache\n      delete proxy[prop]; // remove from proxy\n      return true;\n    },\n\n    /**\n     * A trap for getting property values.\n     */\n    get(target, prop: string, receiver) {\n      return _cached(target, prop,\n        () => _resolveWithContext(target, prop, receiver));\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */\n    getOwnPropertyDescriptor(target, prop) {\n      return target._descriptors.allKeys\n        ? Reflect.has(proxy, prop) ? {enumerable: true, configurable: true} : undefined\n        : Reflect.getOwnPropertyDescriptor(proxy, prop);\n    },\n\n    /**\n     * A trap for Object.getPrototypeOf.\n     */\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(proxy);\n    },\n\n    /**\n     * A trap for the in operator.\n     */\n    has(target, prop) {\n      return Reflect.has(proxy, prop);\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */\n    ownKeys() {\n      return Reflect.ownKeys(proxy);\n    },\n\n    /**\n     * A trap for setting property values.\n     */\n    set(target, prop, value) {\n      proxy[prop] = value; // set to proxy\n      delete target[prop]; // remove from cache\n      return true;\n    }\n  }) as ContextProxy<T, R>;\n}\n\n/**\n * @private\n */\nexport function _descriptors(\n  proxy: ResolverCache,\n  defaults: DescriptorDefaults = {scriptable: true, indexable: true}\n): Descriptor {\n  const {_scriptable = defaults.scriptable, _indexable = defaults.indexable, _allKeys = defaults.allKeys} = proxy;\n  return {\n    allKeys: _allKeys,\n    scriptable: _scriptable,\n    indexable: _indexable,\n    isScriptable: isFunction(_scriptable) ? _scriptable : () => _scriptable,\n    isIndexable: isFunction(_indexable) ? _indexable : () => _indexable\n  };\n}\n\nconst readKey = (prefix: string, name: string) => prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop: string, value: unknown) => isObject(value) && prop !== 'adapters' &&\n  (Object.getPrototypeOf(value) === null || value.constructor === Object);\n\nfunction _cached(\n  target: AnyObject,\n  prop: string,\n  resolve: () => unknown\n) {\n  if (Object.prototype.hasOwnProperty.call(target, prop) || prop === 'constructor') {\n    return target[prop];\n  }\n\n  const value = resolve();\n  // cache the resolved value\n  target[prop] = value;\n  return value;\n}\n\nfunction _resolveWithContext(\n  target: ContextCache,\n  prop: string,\n  receiver: AnyObject\n) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  let value = _proxy[prop]; // resolve from proxy\n\n  // resolve with context\n  if (isFunction(value) && descriptors.isScriptable(prop)) {\n    value = _resolveScriptable(prop, value, target, receiver);\n  }\n  if (isArray(value) && value.length) {\n    value = _resolveArray(prop, value, target, descriptors.isIndexable);\n  }\n  if (needsSubResolver(prop, value)) {\n    // if the resolved value is an object, create a sub resolver for it\n    value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n  }\n  return value;\n}\n\nfunction _resolveScriptable(\n  prop: string,\n  getValue: (ctx: AnyObject, sub: AnyObject) => unknown,\n  target: ContextCache,\n  receiver: AnyObject\n) {\n  const {_proxy, _context, _subProxy, _stack} = target;\n  if (_stack.has(prop)) {\n    throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n  }\n  _stack.add(prop);\n  let value = getValue(_context, _subProxy || receiver);\n  _stack.delete(prop);\n  if (needsSubResolver(prop, value)) {\n    // When scriptable option returns an object, create a resolver on that.\n    value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n  }\n  return value;\n}\n\nfunction _resolveArray(\n  prop: string,\n  value: unknown[],\n  target: ContextCache,\n  isIndexable: (key: string) => boolean\n) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n\n  if (typeof _context.index !== 'undefined' && isIndexable(prop)) {\n    return value[_context.index % value.length];\n  } else if (isObject(value[0])) {\n    // Array of objects, return array or resolvers\n    const arr = value;\n    const scopes = _proxy._scopes.filter(s => s !== arr);\n    value = [];\n    for (const item of arr) {\n      const resolver = createSubResolver(scopes, _proxy, prop, item);\n      value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n    }\n  }\n  return value;\n}\n\nfunction resolveFallback(\n  fallback: ResolverObjectKey | ((prop: ResolverObjectKey, value: unknown) => ResolverObjectKey),\n  prop: ResolverObjectKey,\n  value: unknown\n) {\n  return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\n\nconst getScope = (key: ResolverObjectKey, parent: AnyObject) => key === true ? parent\n  : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\n\nfunction addScopes(\n  set: Set<AnyObject>,\n  parentScopes: AnyObject[],\n  key: ResolverObjectKey,\n  parentFallback: ResolverObjectKey,\n  value: unknown\n) {\n  for (const parent of parentScopes) {\n    const scope = getScope(key, parent);\n    if (scope) {\n      set.add(scope);\n      const fallback = resolveFallback(scope._fallback, key, value);\n      if (typeof fallback !== 'undefined' && fallback !== key && fallback !== parentFallback) {\n        // When we reach the descriptor that defines a new _fallback, return that.\n        // The fallback will resume to that new scope.\n        return fallback;\n      }\n    } else if (scope === false && typeof parentFallback !== 'undefined' && key !== parentFallback) {\n      // Fallback to `false` results to `false`, when falling back to different key.\n      // For example `interaction` from `hover` or `plugins.tooltip` and `animation` from `animations`\n      return null;\n    }\n  }\n  return false;\n}\n\nfunction createSubResolver(\n  parentScopes: AnyObject[],\n  resolver: ResolverCache,\n  prop: ResolverObjectKey,\n  value: unknown\n) {\n  const rootScopes = resolver._rootScopes;\n  const fallback = resolveFallback(resolver._fallback, prop, value);\n  const allScopes = [...parentScopes, ...rootScopes];\n  const set = new Set<AnyObject>();\n  set.add(value);\n  let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n  if (key === null) {\n    return false;\n  }\n  if (typeof fallback !== 'undefined' && fallback !== prop) {\n    key = addScopesFromKey(set, allScopes, fallback, key, value);\n    if (key === null) {\n      return false;\n    }\n  }\n  return _createResolver(Array.from(set), [''], rootScopes, fallback,\n    () => subGetTarget(resolver, prop as string, value));\n}\n\nfunction addScopesFromKey(\n  set: Set<AnyObject>,\n  allScopes: AnyObject[],\n  key: ResolverObjectKey,\n  fallback: ResolverObjectKey,\n  item: unknown\n) {\n  while (key) {\n    key = addScopes(set, allScopes, key, fallback, item);\n  }\n  return key;\n}\n\nfunction subGetTarget(\n  resolver: ResolverCache,\n  prop: string,\n  value: unknown\n) {\n  const parent = resolver._getTarget();\n  if (!(prop in parent)) {\n    parent[prop] = {};\n  }\n  const target = parent[prop];\n  if (isArray(target) && isObject(value)) {\n    // For array of objects, the object is used to store updated values\n    return value;\n  }\n  return target || {};\n}\n\nfunction _resolveWithPrefixes(\n  prop: string,\n  prefixes: string[],\n  scopes: AnyObject[],\n  proxy: ResolverProxy\n) {\n  let value: unknown;\n  for (const prefix of prefixes) {\n    value = _resolve(readKey(prefix, prop), scopes);\n    if (typeof value !== 'undefined') {\n      return needsSubResolver(prop, value)\n        ? createSubResolver(scopes, proxy, prop, value)\n        : value;\n    }\n  }\n}\n\nfunction _resolve(key: string, scopes: AnyObject[]) {\n  for (const scope of scopes) {\n    if (!scope) {\n      continue;\n    }\n    const value = scope[key];\n    if (typeof value !== 'undefined') {\n      return value;\n    }\n  }\n}\n\nfunction getKeysFromAllScopes(target: ResolverCache) {\n  let keys = target._keys;\n  if (!keys) {\n    keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n  }\n  return keys;\n}\n\nfunction resolveKeysFromAllScopes(scopes: AnyObject[]) {\n  const set = new Set<string>();\n  for (const scope of scopes) {\n    for (const key of Object.keys(scope).filter(k => !k.startsWith('_'))) {\n      set.add(key);\n    }\n  }\n  return Array.from(set);\n}\n\nexport function _parseObjectDataRadialScale(\n  meta: ChartMeta<'line' | 'scatter'>,\n  data: AnyObject[],\n  start: number,\n  count: number\n) {\n  const {iScale} = meta;\n  const {key = 'r'} = this._parsing;\n  const parsed = new Array<{r: unknown}>(count);\n  let i: number, ilen: number, index: number, item: AnyObject;\n\n  for (i = 0, ilen = count; i < ilen; ++i) {\n    index = i + start;\n    item = data[index];\n    parsed[i] = {\n      r: iScale.parse(resolveObjectKey(item, key), index)\n    };\n  }\n  return parsed;\n}\n", "import {almostEquals, distanceBetweenPoints, sign} from './helpers.math.js';\nimport {_isPointInArea} from './helpers.canvas.js';\nimport type {ChartArea} from '../types/index.js';\nimport type {SplinePoint} from '../types/geometric.js';\n\nconst EPSILON = Number.EPSILON || 1e-14;\n\ntype OptionalSplinePoint = SplinePoint | false\nconst getPoint = (points: SplinePoint[], i: number): OptionalSplinePoint => i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis: 'x' | 'y') => indexAxis === 'x' ? 'y' : 'x';\n\nexport function splineCurve(\n  firstPoint: SplinePoint,\n  middlePoint: SplinePoint,\n  afterPoint: SplinePoint,\n  t: number\n): {\n    previous: SplinePoint\n    next: SplinePoint\n  } {\n  // Props to Rob Spencer at scaled innovation for his post on splining between points\n  // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n\n  // This function must also respect \"skipped\" points\n\n  const previous = firstPoint.skip ? middlePoint : firstPoint;\n  const current = middlePoint;\n  const next = afterPoint.skip ? middlePoint : afterPoint;\n  const d01 = distanceBetweenPoints(current, previous);\n  const d12 = distanceBetweenPoints(next, current);\n\n  let s01 = d01 / (d01 + d12);\n  let s12 = d12 / (d01 + d12);\n\n  // If all points are the same, s01 & s02 will be inf\n  s01 = isNaN(s01) ? 0 : s01;\n  s12 = isNaN(s12) ? 0 : s12;\n\n  const fa = t * s01; // scaling factor for triangle Ta\n  const fb = t * s12;\n\n  return {\n    previous: {\n      x: current.x - fa * (next.x - previous.x),\n      y: current.y - fa * (next.y - previous.y)\n    },\n    next: {\n      x: current.x + fb * (next.x - previous.x),\n      y: current.y + fb * (next.y - previous.y)\n    }\n  };\n}\n\n/**\n * Adjust tangents to ensure monotonic properties\n */\nfunction monotoneAdjust(points: SplinePoint[], deltaK: number[], mK: number[]) {\n  const pointsLen = points.length;\n\n  let alphaK: number, betaK: number, tauK: number, squaredMagnitude: number, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen - 1; ++i) {\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent || !pointAfter) {\n      continue;\n    }\n\n    if (almostEquals(deltaK[i], 0, EPSILON)) {\n      mK[i] = mK[i + 1] = 0;\n      continue;\n    }\n\n    alphaK = mK[i] / deltaK[i];\n    betaK = mK[i + 1] / deltaK[i];\n    squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n    if (squaredMagnitude <= 9) {\n      continue;\n    }\n\n    tauK = 3 / Math.sqrt(squaredMagnitude);\n    mK[i] = alphaK * tauK * deltaK[i];\n    mK[i + 1] = betaK * tauK * deltaK[i];\n  }\n}\n\nfunction monotoneCompute(points: SplinePoint[], mK: number[], indexAxis: 'x' | 'y' = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  let delta: number, pointBefore: OptionalSplinePoint, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n\n  for (let i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n\n    const iPixel = pointCurrent[indexAxis];\n    const vPixel = pointCurrent[valueAxis];\n    if (pointBefore) {\n      delta = (iPixel - pointBefore[indexAxis]) / 3;\n      pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n      pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n    }\n    if (pointAfter) {\n      delta = (pointAfter[indexAxis] - iPixel) / 3;\n      pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n      pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n    }\n  }\n}\n\n/**\n * This function calculates Bézier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n */\nexport function splineCurveMonotone(points: SplinePoint[], indexAxis: 'x' | 'y' = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  const deltaK: number[] = Array(pointsLen).fill(0);\n  const mK: number[] = Array(pointsLen);\n\n  // Calculate slopes (deltaK) and initialize tangents (mK)\n  let i, pointBefore: OptionalSplinePoint, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n\n  for (i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n\n    if (pointAfter) {\n      const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n\n      // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n      deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n    }\n    mK[i] = !pointBefore ? deltaK[i]\n      : !pointAfter ? deltaK[i - 1]\n        : (sign(deltaK[i - 1]) !== sign(deltaK[i])) ? 0\n          : (deltaK[i - 1] + deltaK[i]) / 2;\n  }\n\n  monotoneAdjust(points, deltaK, mK);\n\n  monotoneCompute(points, mK, indexAxis);\n}\n\nfunction capControlPoint(pt: number, min: number, max: number) {\n  return Math.max(Math.min(pt, max), min);\n}\n\nfunction capBezierPoints(points: SplinePoint[], area: ChartArea) {\n  let i, ilen, point, inArea, inAreaPrev;\n  let inAreaNext = _isPointInArea(points[0], area);\n  for (i = 0, ilen = points.length; i < ilen; ++i) {\n    inAreaPrev = inArea;\n    inArea = inAreaNext;\n    inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n    if (!inArea) {\n      continue;\n    }\n    point = points[i];\n    if (inAreaPrev) {\n      point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n      point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n    }\n    if (inAreaNext) {\n      point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n      point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n    }\n  }\n}\n\n/**\n * @private\n */\nexport function _updateBezierControlPoints(\n  points: SplinePoint[],\n  options,\n  area: ChartArea,\n  loop: boolean,\n  indexAxis: 'x' | 'y'\n) {\n  let i: number, ilen: number, point: SplinePoint, controlPoints: ReturnType<typeof splineCurve>;\n\n  // Only consider points that are drawn in case the spanGaps option is used\n  if (options.spanGaps) {\n    points = points.filter((pt) => !pt.skip);\n  }\n\n  if (options.cubicInterpolationMode === 'monotone') {\n    splineCurveMonotone(points, indexAxis);\n  } else {\n    let prev = loop ? points[points.length - 1] : points[0];\n    for (i = 0, ilen = points.length; i < ilen; ++i) {\n      point = points[i];\n      controlPoints = splineCurve(\n        prev,\n        point,\n        points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen],\n        options.tension\n      );\n      point.cp1x = controlPoints.previous.x;\n      point.cp1y = controlPoints.previous.y;\n      point.cp2x = controlPoints.next.x;\n      point.cp2y = controlPoints.next.y;\n      prev = point;\n    }\n  }\n\n  if (options.capBezierPoints) {\n    capBezierPoints(points, area);\n  }\n}\n", "import type {ChartArea, Scale} from '../types/index.js';\nimport type PrivateChart from '../core/core.controller.js';\nimport type {Chart, ChartEvent} from '../types.js';\nimport {INFINITY} from './helpers.math.js';\n\n/**\n * @private\n */\nexport function _isDomSupported(): boolean {\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n\n/**\n * @private\n */\nexport function _getParentNode(domNode: HTMLCanvasElement): HTMLCanvasElement {\n  let parent = domNode.parentNode;\n  if (parent && parent.toString() === '[object ShadowRoot]') {\n    parent = (parent as ShadowRoot).host;\n  }\n  return parent as HTMLCanvasElement;\n}\n\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */\n\nfunction parseMaxStyle(styleValue: string | number, node: HTMLElement, parentProperty: string) {\n  let valueInPixels: number;\n  if (typeof styleValue === 'string') {\n    valueInPixels = parseInt(styleValue, 10);\n\n    if (styleValue.indexOf('%') !== -1) {\n      // percentage * size in dimension\n      valueInPixels = (valueInPixels / 100) * node.parentNode[parentProperty];\n    }\n  } else {\n    valueInPixels = styleValue;\n  }\n\n  return valueInPixels;\n}\n\nconst getComputedStyle = (element: HTMLElement): CSSStyleDeclaration =>\n  element.ownerDocument.defaultView.getComputedStyle(element, null);\n\nexport function getStyle(el: HTMLElement, property: string): string {\n  return getComputedStyle(el).getPropertyValue(property);\n}\n\nconst positions = ['top', 'right', 'bottom', 'left'];\nfunction getPositionedStyle(styles: CSSStyleDeclaration, style: string, suffix?: string): ChartArea {\n  const result = {} as ChartArea;\n  suffix = suffix ? '-' + suffix : '';\n  for (let i = 0; i < 4; i++) {\n    const pos = positions[i];\n    result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n  }\n  result.width = result.left + result.right;\n  result.height = result.top + result.bottom;\n  return result;\n}\n\nconst useOffsetPos = (x: number, y: number, target: HTMLElement | EventTarget) =>\n  (x > 0 || y > 0) && (!target || !(target as HTMLElement).shadowRoot);\n\n/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */\nfunction getCanvasPosition(\n  e: Event | TouchEvent | MouseEvent,\n  canvas: HTMLCanvasElement\n): {\n    x: number;\n    y: number;\n    box: boolean;\n  } {\n  const touches = (e as TouchEvent).touches;\n  const source = (touches && touches.length ? touches[0] : e) as MouseEvent;\n  const {offsetX, offsetY} = source as MouseEvent;\n  let box = false;\n  let x, y;\n  if (useOffsetPos(offsetX, offsetY, e.target)) {\n    x = offsetX;\n    y = offsetY;\n  } else {\n    const rect = canvas.getBoundingClientRect();\n    x = source.clientX - rect.left;\n    y = source.clientY - rect.top;\n    box = true;\n  }\n  return {x, y, box};\n}\n\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */\n\nexport function getRelativePosition(\n  event: Event | ChartEvent | TouchEvent | MouseEvent,\n  chart: Chart | PrivateChart\n): { x: number; y: number } {\n  if ('native' in event) {\n    return event;\n  }\n\n  const {canvas, currentDevicePixelRatio} = chart;\n  const style = getComputedStyle(canvas);\n  const borderBox = style.boxSizing === 'border-box';\n  const paddings = getPositionedStyle(style, 'padding');\n  const borders = getPositionedStyle(style, 'border', 'width');\n  const {x, y, box} = getCanvasPosition(event, canvas);\n  const xOffset = paddings.left + (box && borders.left);\n  const yOffset = paddings.top + (box && borders.top);\n\n  let {width, height} = chart;\n  if (borderBox) {\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  return {\n    x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n    y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n  };\n}\n\nfunction getContainerSize(canvas: HTMLCanvasElement, width: number, height: number): Partial<Scale> {\n  let maxWidth: number, maxHeight: number;\n\n  if (width === undefined || height === undefined) {\n    const container = canvas && _getParentNode(canvas);\n    if (!container) {\n      width = canvas.clientWidth;\n      height = canvas.clientHeight;\n    } else {\n      const rect = container.getBoundingClientRect(); // this is the border box of the container\n      const containerStyle = getComputedStyle(container);\n      const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n      const containerPadding = getPositionedStyle(containerStyle, 'padding');\n      width = rect.width - containerPadding.width - containerBorder.width;\n      height = rect.height - containerPadding.height - containerBorder.height;\n      maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n      maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n    }\n  }\n  return {\n    width,\n    height,\n    maxWidth: maxWidth || INFINITY,\n    maxHeight: maxHeight || INFINITY\n  };\n}\n\nconst round1 = (v: number) => Math.round(v * 10) / 10;\n\n// eslint-disable-next-line complexity\nexport function getMaximumSize(\n  canvas: HTMLCanvasElement,\n  bbWidth?: number,\n  bbHeight?: number,\n  aspectRatio?: number\n): { width: number; height: number } {\n  const style = getComputedStyle(canvas);\n  const margins = getPositionedStyle(style, 'margin');\n  const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n  const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n  const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n  let {width, height} = containerSize;\n\n  if (style.boxSizing === 'content-box') {\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const paddings = getPositionedStyle(style, 'padding');\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  width = Math.max(0, width - margins.width);\n  height = Math.max(0, aspectRatio ? width / aspectRatio : height - margins.height);\n  width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n  height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n  if (width && !height) {\n    // https://github.com/chartjs/Chart.js/issues/4659\n    // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n    height = round1(width / 2);\n  }\n\n  const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n\n  if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n    height = containerSize.height;\n    width = round1(Math.floor(height * aspectRatio));\n  }\n\n  return {width, height};\n}\n\n/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */\nexport function retinaScale(\n  chart: Chart | PrivateChart,\n  forceRatio: number,\n  forceStyle?: boolean\n): boolean | void {\n  const pixelRatio = forceRatio || 1;\n  const deviceHeight = Math.floor(chart.height * pixelRatio);\n  const deviceWidth = Math.floor(chart.width * pixelRatio);\n\n  (chart as PrivateChart).height = Math.floor(chart.height);\n  (chart as PrivateChart).width = Math.floor(chart.width);\n\n  const canvas = chart.canvas;\n\n  // If no style has been set on the canvas, the render size is used as display size,\n  // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n  // See https://github.com/chartjs/Chart.js/issues/3575\n  if (canvas.style && (forceStyle || (!canvas.style.height && !canvas.style.width))) {\n    canvas.style.height = `${chart.height}px`;\n    canvas.style.width = `${chart.width}px`;\n  }\n\n  if (chart.currentDevicePixelRatio !== pixelRatio\n      || canvas.height !== deviceHeight\n      || canvas.width !== deviceWidth) {\n    (chart as PrivateChart).currentDevicePixelRatio = pixelRatio;\n    canvas.height = deviceHeight;\n    canvas.width = deviceWidth;\n    chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n    return true;\n  }\n  return false;\n}\n\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */\nexport const supportsEventListenerOptions = (function() {\n  let passiveSupported = false;\n  try {\n    const options = {\n      get passive() { // This function will be called when the browser attempts to access the passive property.\n        passiveSupported = true;\n        return false;\n      }\n    } as EventListenerOptions;\n\n    if (_isDomSupported()) {\n      window.addEventListener('test', null, options);\n      window.removeEventListener('test', null, options);\n    }\n  } catch (e) {\n    // continue regardless of error\n  }\n  return passiveSupported;\n}());\n\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns Size in pixels or undefined if unknown.\n */\n\nexport function readUsedSize(\n  element: HTMLElement,\n  property: 'width' | 'height'\n): number | undefined {\n  const value = getStyle(element, property);\n  const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n  return matches ? +matches[1] : undefined;\n}\n", "import type {Point, SplinePoint} from '../types/geometric.js';\n\n/**\n * @private\n */\nexport function _pointInLine(p1: Point, p2: Point, t: number, mode?) { // eslint-disable-line @typescript-eslint/no-unused-vars\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: p1.y + t * (p2.y - p1.y)\n  };\n}\n\n/**\n * @private\n */\nexport function _steppedInterpolation(\n  p1: Point,\n  p2: Point,\n  t: number, mode: 'middle' | 'after' | unknown\n) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y\n      : mode === 'after' ? t < 1 ? p1.y : p2.y\n        : t > 0 ? p2.y : p1.y\n  };\n}\n\n/**\n * @private\n */\nexport function _bezierInterpolation(p1: SplinePoint, p2: SplinePoint, t: number, mode?) { // eslint-disable-line @typescript-eslint/no-unused-vars\n  const cp1 = {x: p1.cp2x, y: p1.cp2y};\n  const cp2 = {x: p2.cp1x, y: p2.cp1y};\n  const a = _pointInLine(p1, cp1, t);\n  const b = _pointInLine(cp1, cp2, t);\n  const c = _pointInLine(cp2, p2, t);\n  const d = _pointInLine(a, b, t);\n  const e = _pointInLine(b, c, t);\n  return _pointInLine(d, e, t);\n}\n", "export interface RTLAdapter {\n  x(x: number): number;\n  setWidth(w: number): void;\n  textAlign(align: 'center' | 'left' | 'right'): 'center' | 'left' | 'right';\n  xPlus(x: number, value: number): number;\n  leftForLtr(x: number, itemWidth: number): number;\n}\n\nconst getRightToLeftAdapter = function(rectX: number, width: number): RTLAdapter {\n  return {\n    x(x) {\n      return rectX + rectX + width - x;\n    },\n    setWidth(w) {\n      width = w;\n    },\n    textAlign(align) {\n      if (align === 'center') {\n        return align;\n      }\n      return align === 'right' ? 'left' : 'right';\n    },\n    xPlus(x, value) {\n      return x - value;\n    },\n    leftForLtr(x, itemWidth) {\n      return x - itemWidth;\n    },\n  };\n};\n\nconst getLeftToRightAdapter = function(): RTLAdapter {\n  return {\n    x(x) {\n      return x;\n    },\n    setWidth(w) { // eslint-disable-line no-unused-vars\n    },\n    textAlign(align) {\n      return align;\n    },\n    xPlus(x, value) {\n      return x + value;\n    },\n    leftForLtr(x, _itemWidth) { // eslint-disable-line @typescript-eslint/no-unused-vars\n      return x;\n    },\n  };\n};\n\nexport function getRtlAdapter(rtl: boolean, rectX: number, width: number) {\n  return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\n\nexport function overrideTextDirection(ctx: CanvasRenderingContext2D, direction: 'ltr' | 'rtl') {\n  let style: CSSStyleDeclaration, original: [string, string];\n  if (direction === 'ltr' || direction === 'rtl') {\n    style = ctx.canvas.style;\n    original = [\n      style.getPropertyValue('direction'),\n      style.getPropertyPriority('direction'),\n    ];\n\n    style.setProperty('direction', direction, 'important');\n    (ctx as { prevTextDirection?: [string, string] }).prevTextDirection = original;\n  }\n}\n\nexport function restoreTextDirection(ctx: CanvasRenderingContext2D, original?: [string, string]) {\n  if (original !== undefined) {\n    delete (ctx as { prevTextDirection?: [string, string] }).prevTextDirection;\n    ctx.canvas.style.setProperty('direction', original[0], original[1]);\n  }\n}\n", "import {_angleBetween, _angleDiff, _isBetween, _normalizeAngle} from './helpers.math.js';\nimport {createContext} from './helpers.options.js';\nimport {isPatternOrGradient} from './helpers.color.js';\n\n/**\n * @typedef { import('../elements/element.line.js').default } LineElement\n * @typedef { import('../elements/element.point.js').default } PointElement\n * @typedef {{start: number, end: number, loop: boolean, style?: any}} Segment\n */\n\nfunction propertyFn(property) {\n  if (property === 'angle') {\n    return {\n      between: _angleBetween,\n      compare: _angleDiff,\n      normalize: _normalizeAngle,\n    };\n  }\n  return {\n    between: _isBetween,\n    compare: (a, b) => a - b,\n    normalize: x => x\n  };\n}\n\nfunction normalizeSegment({start, end, count, loop, style}) {\n  return {\n    start: start % count,\n    end: end % count,\n    loop: loop && (end - start + 1) % count === 0,\n    style\n  };\n}\n\nfunction getSegment(segment, points, bounds) {\n  const {property, start: startBound, end: endBound} = bounds;\n  const {between, normalize} = propertyFn(property);\n  const count = points.length;\n  // eslint-disable-next-line prefer-const\n  let {start, end, loop} = segment;\n  let i, ilen;\n\n  if (loop) {\n    start += count;\n    end += count;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n        break;\n      }\n      start--;\n      end--;\n    }\n    start %= count;\n    end %= count;\n  }\n\n  if (end < start) {\n    end += count;\n  }\n  return {start, end, loop, style: segment.style};\n}\n\n/**\n * Returns the sub-segment(s) of a line segment that fall in the given bounds\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} [segment.style] - segment style\n * @param {PointElement[]} points - the points that this segment refers to\n * @param {object} [bounds]\n * @param {string} bounds.property - the property of a `PointElement` we are bounding. `x`, `y` or `angle`.\n * @param {number} bounds.start - start value of the property\n * @param {number} bounds.end - end value of the property\n * @private\n **/\nexport function _boundSegment(segment, points, bounds) {\n  if (!bounds) {\n    return [segment];\n  }\n\n  const {property, start: startBound, end: endBound} = bounds;\n  const count = points.length;\n  const {compare, between, normalize} = propertyFn(property);\n  const {start, end, loop, style} = getSegment(segment, points, bounds);\n\n  const result = [];\n  let inside = false;\n  let subStart = null;\n  let value, point, prevValue;\n\n  const startIsBefore = () => between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n  const endIsBefore = () => compare(endBound, value) === 0 || between(endBound, prevValue, value);\n  const shouldStart = () => inside || startIsBefore();\n  const shouldStop = () => !inside || endIsBefore();\n\n  for (let i = start, prev = start; i <= end; ++i) {\n    point = points[i % count];\n\n    if (point.skip) {\n      continue;\n    }\n\n    value = normalize(point[property]);\n\n    if (value === prevValue) {\n      continue;\n    }\n\n    inside = between(value, startBound, endBound);\n\n    if (subStart === null && shouldStart()) {\n      subStart = compare(value, startBound) === 0 ? i : prev;\n    }\n\n    if (subStart !== null && shouldStop()) {\n      result.push(normalizeSegment({start: subStart, end: i, loop, count, style}));\n      subStart = null;\n    }\n    prev = i;\n    prevValue = value;\n  }\n\n  if (subStart !== null) {\n    result.push(normalizeSegment({start: subStart, end, loop, count, style}));\n  }\n\n  return result;\n}\n\n\n/**\n * Returns the segments of the line that are inside given bounds\n * @param {LineElement} line\n * @param {object} [bounds]\n * @param {string} bounds.property - the property we are bounding with. `x`, `y` or `angle`.\n * @param {number} bounds.start - start value of the `property`\n * @param {number} bounds.end - end value of the `property`\n * @private\n */\nexport function _boundSegments(line, bounds) {\n  const result = [];\n  const segments = line.segments;\n\n  for (let i = 0; i < segments.length; i++) {\n    const sub = _boundSegment(segments[i], line.points, bounds);\n    if (sub.length) {\n      result.push(...sub);\n    }\n  }\n  return result;\n}\n\n/**\n * Find start and end index of a line.\n */\nfunction findStartAndEnd(points, count, loop, spanGaps) {\n  let start = 0;\n  let end = count - 1;\n\n  if (loop && !spanGaps) {\n    // loop and not spanning gaps, first find a gap to start from\n    while (start < count && !points[start].skip) {\n      start++;\n    }\n  }\n\n  // find first non skipped point (after the first gap possibly)\n  while (start < count && points[start].skip) {\n    start++;\n  }\n\n  // if we looped to count, start needs to be 0\n  start %= count;\n\n  if (loop) {\n    // loop will go past count, if start > 0\n    end += start;\n  }\n\n  while (end > start && points[end % count].skip) {\n    end--;\n  }\n\n  // end could be more than count, normalize\n  end %= count;\n\n  return {start, end};\n}\n\n/**\n * Compute solid segments from Points, when spanGaps === false\n * @param {PointElement[]} points - the points\n * @param {number} start - start index\n * @param {number} max - max index (can go past count on a loop)\n * @param {boolean} loop - boolean indicating that this would be a loop if no gaps are found\n */\nfunction solidSegments(points, start, max, loop) {\n  const count = points.length;\n  const result = [];\n  let last = start;\n  let prev = points[start];\n  let end;\n\n  for (end = start + 1; end <= max; ++end) {\n    const cur = points[end % count];\n    if (cur.skip || cur.stop) {\n      if (!prev.skip) {\n        loop = false;\n        result.push({start: start % count, end: (end - 1) % count, loop});\n        // @ts-ignore\n        start = last = cur.stop ? end : null;\n      }\n    } else {\n      last = end;\n      if (prev.skip) {\n        start = end;\n      }\n    }\n    prev = cur;\n  }\n\n  if (last !== null) {\n    result.push({start: start % count, end: last % count, loop});\n  }\n\n  return result;\n}\n\n/**\n * Compute the continuous segments that define the whole line\n * There can be skipped points within a segment, if spanGaps is true.\n * @param {LineElement} line\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n * @private\n */\nexport function _computeSegments(line, segmentOptions) {\n  const points = line.points;\n  const spanGaps = line.options.spanGaps;\n  const count = points.length;\n\n  if (!count) {\n    return [];\n  }\n\n  const loop = !!line._loop;\n  const {start, end} = findStartAndEnd(points, count, loop, spanGaps);\n\n  if (spanGaps === true) {\n    return splitByStyles(line, [{start, end, loop}], points, segmentOptions);\n  }\n\n  const max = end < start ? end + count : end;\n  const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n  return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\n\n/**\n * @param {Segment[]} segments\n * @param {PointElement[]} points\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n */\nfunction splitByStyles(line, segments, points, segmentOptions) {\n  if (!segmentOptions || !segmentOptions.setContext || !points) {\n    return segments;\n  }\n  return doSplitByStyles(line, segments, points, segmentOptions);\n}\n\n/**\n * @param {LineElement} line\n * @param {Segment[]} segments\n * @param {PointElement[]} points\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n */\nfunction doSplitByStyles(line, segments, points, segmentOptions) {\n  const chartContext = line._chart.getContext();\n  const baseStyle = readStyle(line.options);\n  const {_datasetIndex: datasetIndex, options: {spanGaps}} = line;\n  const count = points.length;\n  const result = [];\n  let prevStyle = baseStyle;\n  let start = segments[0].start;\n  let i = start;\n\n  function addStyle(s, e, l, st) {\n    const dir = spanGaps ? -1 : 1;\n    if (s === e) {\n      return;\n    }\n    // Style can not start/end on a skipped point, adjust indices accordingly\n    s += count;\n    while (points[s % count].skip) {\n      s -= dir;\n    }\n    while (points[e % count].skip) {\n      e += dir;\n    }\n    if (s % count !== e % count) {\n      result.push({start: s % count, end: e % count, loop: l, style: st});\n      prevStyle = st;\n      start = e % count;\n    }\n  }\n\n  for (const segment of segments) {\n    start = spanGaps ? start : segment.start;\n    let prev = points[start % count];\n    let style;\n    for (i = start + 1; i <= segment.end; i++) {\n      const pt = points[i % count];\n      style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n        type: 'segment',\n        p0: prev,\n        p1: pt,\n        p0DataIndex: (i - 1) % count,\n        p1DataIndex: i % count,\n        datasetIndex\n      })));\n      if (styleChanged(style, prevStyle)) {\n        addStyle(start, i - 1, segment.loop, prevStyle);\n      }\n      prev = pt;\n      prevStyle = style;\n    }\n    if (start < i - 1) {\n      addStyle(start, i - 1, segment.loop, prevStyle);\n    }\n  }\n\n  return result;\n}\n\nfunction readStyle(options) {\n  return {\n    backgroundColor: options.backgroundColor,\n    borderCapStyle: options.borderCapStyle,\n    borderDash: options.borderDash,\n    borderDashOffset: options.borderDashOffset,\n    borderJoinStyle: options.borderJoinStyle,\n    borderWidth: options.borderWidth,\n    borderColor: options.borderColor\n  };\n}\n\nfunction styleChanged(style, prevStyle) {\n  if (!prevStyle) {\n    return false;\n  }\n  const cache = [];\n  const replacer = function(key, value) {\n    if (!isPatternOrGradient(value)) {\n      return value;\n    }\n    if (!cache.includes(value)) {\n      cache.push(value);\n    }\n    return cache.indexOf(value);\n  };\n  return JSON.stringify(style, replacer) !== JSON.stringify(prevStyle, replacer);\n}\n", "import type {Chart, ChartArea, ChartMeta, Scale, TRBL} from '../types/index.js';\n\nfunction getSizeForArea(scale: Scale, chartArea: ChartArea, field: keyof ChartArea) {\n  return scale.options.clip ? scale[field] : chartArea[field];\n}\n\nfunction getDatasetArea(meta: ChartMeta, chartArea: ChartArea): TRBL {\n  const {xScale, yScale} = meta;\n  if (xScale && yScale) {\n    return {\n      left: getSizeForArea(xScale, chartArea, 'left'),\n      right: getSizeForArea(xScale, chartArea, 'right'),\n      top: getSizeForArea(yScale, chartArea, 'top'),\n      bottom: getSizeForArea(yScale, chartArea, 'bottom')\n    };\n  }\n  return chartArea;\n}\n\nexport function getDatasetClipArea(chart: Chart, meta: ChartMeta): TRBL | false {\n  const clip = meta._clip;\n  if (clip.disabled) {\n    return false;\n  }\n  const area = getDatasetArea(meta, chart.chartArea);\n\n  return {\n    left: clip.left === false ? 0 : area.left - (clip.left === true ? 0 : clip.left),\n    right: clip.right === false ? chart.width : area.right + (clip.right === true ? 0 : clip.right),\n    top: clip.top === false ? 0 : area.top - (clip.top === true ? 0 : clip.top),\n    bottom: clip.bottom === false ? chart.height : area.bottom + (clip.bottom === true ? 0 : clip.bottom)\n  };\n}\n", "import {requestAnimFrame} from '../helpers/helpers.extras.js';\n\n/**\n * @typedef { import('./core.animation.js').default } Animation\n * @typedef { import('./core.controller.js').default } Chart\n */\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is export for typedoc\n */\nexport class Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n\n  /**\n\t * @private\n\t */\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n\n  /**\n\t * @private\n\t */\n  _refresh() {\n    if (this._request) {\n      return;\n    }\n    this._running = true;\n\n    this._request = requestAnimFrame.call(window, () => {\n      this._update();\n      this._request = null;\n\n      if (this._running) {\n        this._refresh();\n      }\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _update(date = Date.now()) {\n    let remaining = 0;\n\n    this._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n\n      for (; i >= 0; --i) {\n        item = items[i];\n\n        if (item._active) {\n          if (item._total > anims.duration) {\n            // if the animation has been updated and its duration prolonged,\n            // update to total duration of current animations run (for progress event)\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          // Remove the item by replacing it with last item and removing the last\n          // A lot faster than splice.\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n\n      if (draw) {\n        chart.draw();\n        this._notify(chart, anims, date, 'progress');\n      }\n\n      if (!items.length) {\n        anims.running = false;\n        this._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n\n      remaining += items.length;\n    });\n\n    this._lastDate = date;\n\n    if (remaining === 0) {\n      this._running = false;\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @param {string} event - event name\n\t * @param {Function} cb - callback\n\t */\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n\n  /**\n\t * Add animations\n\t * @param {Chart} chart\n\t * @param {Animation[]} items - animations\n\t */\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n\n  /**\n\t * Counts number of active animations for the chart\n\t * @param {Chart} chart\n\t */\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n\n  /**\n\t * Start animating (all charts)\n\t * @param {Chart} chart\n\t */\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n\n  /**\n\t * Stop all animations for the chart\n\t * @param {Chart} chart\n\t */\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n\n  /**\n\t * Remove chart from Animator\n\t * @param {Chart} chart\n\t */\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Animator();\n", "import effects from '../helpers/helpers.easing.js';\nimport {resolve} from '../helpers/helpers.options.js';\nimport {color as helpersColor} from '../helpers/helpers.color.js';\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  /**\n   * @param {string} from\n   * @param {string} to\n   * @param {number} factor\n   */\n  color(from, to, factor) {\n    const c0 = helpersColor(from || transparent);\n    const c1 = c0.valid && helpersColor(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\n\nexport default class Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n\n  active() {\n    return this._active;\n  }\n\n  update(cfg, to, date) {\n    if (this._active) {\n      this._notify(false);\n\n      const currentValue = this._target[this._prop];\n      const elapsed = date - this._start;\n      const remain = this._duration - elapsed;\n      this._start = date;\n      this._duration = Math.floor(Math.max(remain, cfg.duration));\n      this._total += elapsed;\n      this._loop = !!cfg.loop;\n      this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      this._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n\n  cancel() {\n    if (this._active) {\n      // update current evaluated value, for smoother animations\n      this.tick(Date.now());\n      this._active = false;\n      this._notify(false);\n    }\n  }\n\n  tick(date) {\n    const elapsed = date - this._start;\n    const duration = this._duration;\n    const prop = this._prop;\n    const from = this._from;\n    const loop = this._loop;\n    const to = this._to;\n    let factor;\n\n    this._active = from !== to && (loop || (elapsed < duration));\n\n    if (!this._active) {\n      this._target[prop] = to;\n      this._notify(true);\n      return;\n    }\n\n    if (elapsed < 0) {\n      this._target[prop] = from;\n      return;\n    }\n\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = this._easing(Math.min(1, Math.max(0, factor)));\n\n    this._target[prop] = this._fn(from, to, factor);\n  }\n\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n", "import animator from './core.animator.js';\nimport Animation from './core.animation.js';\nimport defaults from './core.defaults.js';\nimport {isArray, isObject} from '../helpers/helpers.core.js';\n\nexport default class Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n\n    const animationOptions = Object.keys(defaults.animation);\n    const animatedProps = this._properties;\n\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n\n  /**\n\t * Utility to handle animation of `options`.\n\t * @private\n\t */\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      // Going to shared options:\n      // After all animations are done, assign the shared options object to the element\n      // So any new updates to the shared options are observed\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n        // rejected, noop\n      });\n    }\n\n    return animations;\n  }\n\n  /**\n\t * @private\n\t */\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n\n      if (animation) {\n        if (cfg && animation.active()) {\n          // There is an existing active animation, let's update that\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        // not animated, set directly to new value\n        target[prop] = value;\n        continue;\n      }\n\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n\n\n  /**\n\t * Update `target` properties to new values, using configured animations\n\t * @param {object} target - object to update\n\t * @param {object} values - new target properties\n\t * @returns {boolean|undefined} - `true` if animations were started\n\t **/\n  update(target, values) {\n    if (this._properties.size === 0) {\n      // Nothing is animated, just apply the new values.\n      Object.assign(target, values);\n      return;\n    }\n\n    const animations = this._createAnimations(target, values);\n\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\n\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  // @ts-ignore\n  return Promise.all(running);\n}\n\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    // Going from shared options to distinct one:\n    // Create new options object containing the old shared values and start updating that.\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n", "import Animations from './core.animations.js';\nimport defaults from './core.defaults.js';\nimport {isArray, isFinite, isObject, valueOrDefault, resolveObjectKey, defined} from '../helpers/helpers.core.js';\nimport {listenArrayEvents, unlistenArrayEvents} from '../helpers/helpers.collection.js';\nimport {createContext, sign} from '../helpers/index.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('./core.scale.js').default } Scale\n */\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\n\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\n\nfunction toClip(value) {\n  let t, r, b, l;\n\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\n\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\n\nfunction applyStack(stack, value, dsIndex, options = {}) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n\n  if (value === null) {\n    return;\n  }\n\n  let found = false;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      found = true;\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n\n  if (!found && !options.all) {\n    return 0;\n  }\n\n  return value;\n}\n\nfunction convertObjectDataToArray(data, meta) {\n  const {iScale, vScale} = meta;\n  const iAxisKey = iScale.axis === 'x' ? 'x' : 'y';\n  const vAxisKey = vScale.axis === 'x' ? 'x' : 'y';\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      [iAxisKey]: key,\n      [vAxisKey]: data[key]\n    };\n  }\n  return adata;\n}\n\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\n\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\n\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\n\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\n\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n  for (const meta of vScale.getMatchingVisibleMetas(type).reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n\n  return null;\n}\n\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {}); // map structure is {stackKey: {datasetIndex: value}}\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n\n    const visualValues = stack._visualValues || (stack._visualValues = {});\n    visualValues[datasetIndex] = value;\n  }\n}\n\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\n\nfunction createDatasetContext(parent, index) {\n  return createContext(parent,\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\n\nfunction createDataContext(parent, index, element) {\n  return createContext(parent, {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\n\nfunction clearStacks(meta, items) {\n  // Not using meta.index here, because it might be already updated if the dataset changed location\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n    delete stacks[axis][datasetIndex];\n    if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n      delete stacks[axis]._visualValues[datasetIndex];\n    }\n  }\n}\n\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart) => canStack && !meta.hidden && meta._stacked\n  && {keys: getSortedDatasetIndices(chart, true), values: null};\n\nexport default class DatasetController {\n\n  /**\n   * @type {any}\n   */\n  static defaults = {};\n\n  /**\n   * Element type used to generate a meta dataset (e.g. Chart.element.LineElement).\n   */\n  static datasetElementType = null;\n\n  /**\n   * Element type used to generate a meta data (e.g. Chart.element.PointElement).\n   */\n  static dataElementType = null;\n\n  /**\n\t * @param {Chart} chart\n\t * @param {number} datasetIndex\n\t */\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    /** @type {boolean | object} */\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.supportsDecimation = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.datasetElementType = new.target.datasetElementType;\n    this.dataElementType = new.target.dataElementType;\n\n    this.initialize();\n  }\n\n  initialize() {\n    const meta = this._cachedMeta;\n    this.configure();\n    this.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    this.addElements();\n\n    if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n      console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n    }\n  }\n\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n\n  linkScales() {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = this.getScaleForId(xid);\n    meta.yScale = this.getScaleForId(yid);\n    meta.rScale = this.getScaleForId(rid);\n    meta.iScale = this.getScaleForId(iid);\n    meta.vScale = this.getScaleForId(vid);\n  }\n\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n\n  /**\n\t * @param {string} scaleID\n\t * @return {Scale}\n\t */\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n\n  /**\n\t * @private\n\t */\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n\n  reset() {\n    this._update('reset');\n  }\n\n  /**\n\t * @private\n\t */\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _dataCheck() {\n    const dataset = this.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = this._data;\n\n    // In order to correctly handle data addition/deletion animation (and thus simulate\n    // real-time charts), we need to monitor these data modifications and synchronize\n    // the internal metadata accordingly.\n\n    if (isObject(data)) {\n      const meta = this._cachedMeta;\n      this._data = convertObjectDataToArray(data, meta);\n    } else if (_data !== data) {\n      if (_data) {\n        // This case happens when the user replaced the data array instance.\n        unlistenArrayEvents(_data, this);\n        // Discard old parsed data and stacks\n        const meta = this._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, this);\n      }\n      this._syncList = [];\n      this._data = data;\n    }\n  }\n\n  addElements() {\n    const meta = this._cachedMeta;\n\n    this._dataCheck();\n\n    if (this.datasetElementType) {\n      meta.dataset = new this.datasetElementType();\n    }\n  }\n\n  buildOrUpdateElements(resetNewElements) {\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    let stackChanged = false;\n\n    this._dataCheck();\n\n    // make sure cached _stacked status is current\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n\n    // detect change in stack option\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      // remove values from old stack\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n\n    // Re-sync meta data in case the user replaced the data array or if we missed\n    // any updates and so make sure that we handle number of datapoints changing.\n    this._resyncElements(resetNewElements);\n\n    // if stack changed, update stack values for the whole dataset\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(this, meta._parsed);\n      meta._stacked = isStacked(meta.vScale, meta);\n    }\n  }\n\n  /**\n\t * Merges user-supplied and default dataset-level options\n\t * @private\n\t */\n  configure() {\n    const config = this.chart.config;\n    const scopeKeys = config.datasetScopeKeys(this._type);\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n    this.options = config.createResolver(scopes, this.getContext());\n    this._parsing = this.options.parsing;\n    this._cachedDataOpts = {};\n  }\n\n  /**\n\t * @param {number} start\n\t * @param {number} count\n\t */\n  parse(start, count) {\n    const {_cachedMeta: meta, _data: data} = this;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = this.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = this.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = this.parsePrimitiveData(meta, data, start, count);\n      }\n\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n\n    if (_stacked) {\n      updateStacks(this, parsed);\n    }\n  }\n\n  /**\n\t * Parse array of primitive values\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [1,3,4]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id.\n\t * Example: {xScale0: 0, yScale0: 1}\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of arrays\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [[1,2],[3,4]]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id.\n\t * Example: {x: 0, y: 1}\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of objects\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [{x:1, y:5}, {x:2, y:10}]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id. _custom is optional\n\t * Example: {xScale0: 0, yScale0: 1, _custom: {r: 10, foo: 'bar'}}\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n\n  /**\n\t * @protected\n\t */\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n\n  /**\n\t * @protected\n\t */\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]._visualValues\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n\n  /**\n\t * @protected\n\t */\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      value = applyStack(stack, parsedValue, this._cachedMeta.index);\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n\n  /**\n\t * @protected\n\t */\n  getMinMax(scale, canStack) {\n    const meta = this._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = this._getOtherScale(scale);\n    const stack = createStack(canStack, meta, this.chart);\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, parsed;\n\n    function _skip() {\n      parsed = _parsed[i];\n      const otherValue = parsed[otherScale.axis];\n      return !isFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n    }\n\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      this.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        // if the data is sorted, we don't need to check further from this end of array\n        break;\n      }\n    }\n    if (sorted) {\n      // in the sorted case, find first non-skipped value from other end of array\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n\n  /**\n\t * @return {number|boolean}\n\t * @protected\n\t */\n  getMaxOverflow() {\n    return false;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n\n  /**\n\t * @private\n\t */\n  _update(mode) {\n    const meta = this._cachedMeta;\n    this.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n  }\n\n  /**\n\t * @param {string} mode\n\t */\n  update(mode) {} // eslint-disable-line no-unused-vars\n\n  draw() {\n    const ctx = this._ctx;\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = this._drawStart || 0;\n    const count = this._drawCount || (elements.length - start);\n    const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n    let i;\n\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.hidden) {\n        continue;\n      }\n      if (element.active && drawActiveElementsOnTop) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n\n  /**\n\t * Returns a set of predefined style properties that should be used to represent the dataset\n\t * or the data if the index is specified\n\t * @param {number} index - data index\n\t * @param {boolean} [active] - true if hover\n\t * @return {object} style object\n\t */\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext(index, active, mode) {\n    const dataset = this.getDataset();\n    let context;\n    if (index >= 0 && index < this._cachedMeta.data.length) {\n      const element = this._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(this.getContext(), index, element));\n      context.parsed = this.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = this.$context ||\n        (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = this.index;\n    }\n\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n\n  /**\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n\n  /**\n\t * @param {number} index\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n\n  /**\n\t * @private\n\t */\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const active = mode === 'active';\n    const cache = this._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = this.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = this.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    // context is provided as a function, and is called only if needed,\n    // so we don't create a context for each element if not needed.\n    const context = () => this.getContext(index, active, mode);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n\n    if (values.$shared) {\n      // `$shared` indicates this set of options can be shared between multiple elements.\n      // Sharing is used to reduce number of properties to change during animation.\n      values.$shared = sharing;\n\n      // We cache options by `mode`, which can be 'active' for example. This enables us\n      // to have the 'active' element options and 'default' options to switch between\n      // when interacting.\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n\n    return values;\n  }\n\n\n  /**\n\t * @private\n\t */\n  _resolveAnimations(index, transition, active) {\n    const chart = this.chart;\n    const cache = this._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = this.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, this.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n\n  /**\n\t * Utility for getting the options object shared between elements\n\t * @protected\n\t */\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n\n  /**\n\t * Utility for determining if `options` should be included in the updated properties\n\t * @protected\n\t */\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n\n  /**\n   * @todo v4, rename to getSharedOptions and remove excess functions\n   */\n  _getSharedOptions(start, mode) {\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const previouslySharedOptions = this._sharedOptions;\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions) || (sharedOptions !== previouslySharedOptions);\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    return {sharedOptions, includeOptions};\n  }\n\n  /**\n\t * Utility for updating an element with new properties, using animations when appropriate.\n\t * @protected\n\t */\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n\n  /**\n\t * Utility to animate the shared options, that are potentially affecting multiple elements.\n\t * @protected\n\t */\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      // When going from active to inactive, we need to update to the shared options.\n      // This way the once hovered element will end up with the same original shared options instance, after animation.\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n\n  /**\n\t * @private\n\t */\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _resyncElements(resetNewElements) {\n    const data = this._data;\n    const elements = this._cachedMeta.data;\n\n    // Apply changes detected through array listeners\n    for (const [method, arg1, arg2] of this._syncList) {\n      this[method](arg1, arg2);\n    }\n    this._syncList = [];\n\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n\n    if (count) {\n      // TODO: It is not optimal to always parse the old data\n      // This is done because we are not detecting direct assignments:\n      // chart.data.datasets[0].data[5] = 10;\n      // chart.data.datasets[0].data[5].y = 10;\n      this.parse(0, count);\n    }\n\n    if (numData > numMeta) {\n      this._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      this._removeElements(numData, numMeta - numData);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _insertElements(start, count, resetNewElements = true) {\n    const meta = this._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n\n    for (i = start; i < end; ++i) {\n      data[i] = new this.dataElementType();\n    }\n\n    if (this._parsing) {\n      move(meta._parsed);\n    }\n    this.parse(start, count);\n\n    if (resetNewElements) {\n      this.updateElements(data, start, count, 'reset');\n    }\n  }\n\n  updateElements(element, start, count, mode) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * @private\n\t */\n  _removeElements(start, count) {\n    const meta = this._cachedMeta;\n    if (this._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n\n  /**\n\t * @private\n   */\n  _sync(args) {\n    if (this._parsing) {\n      this._syncList.push(args);\n    } else {\n      const [method, arg1, arg2] = args;\n      this[method](arg1, arg2);\n    }\n    this.chart._dataChanges.push([this.index, ...args]);\n  }\n\n  _onDataPush() {\n    const count = arguments.length;\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n\n  _onDataPop() {\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n\n  _onDataShift() {\n    this._sync(['_removeElements', 0, 1]);\n  }\n\n  _onDataSplice(start, count) {\n    if (count) {\n      this._sync(['_removeElements', start, count]);\n    }\n    const newCount = arguments.length - 2;\n    if (newCount) {\n      this._sync(['_insertElements', start, newCount]);\n    }\n  }\n\n  _onDataUnshift() {\n    this._sync(['_insertElements', 0, arguments.length]);\n  }\n}\n", "import DatasetController from '../core/core.datasetController.js';\nimport {\n  _arrayUnique, isArray, isNullOrUndef,\n  valueOrDefault, resolveObjectKey, sign, defined\n} from '../helpers/index.js';\n\nfunction getAllScaleValues(scale, type) {\n  if (!scale._cache.$bar) {\n    const visibleMetas = scale.getMatchingVisibleMetas(type);\n    let values = [];\n\n    for (let i = 0, ilen = visibleMetas.length; i < ilen; i++) {\n      values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\n\n/**\n * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\n * @private\n */\nfunction computeMinSampleSize(meta) {\n  const scale = meta.iScale;\n  const values = getAllScaleValues(scale, meta.type);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      // Ignore truncated pixels\n      return;\n    }\n    if (defined(prev)) {\n      // curr - prev === 0 is ignored\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n\n  return min;\n}\n\n/**\n * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\n * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\n * mode currently always generates bars equally sized (until we introduce scriptable options?).\n * @private\n */\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    // When bar thickness is enforced, category and bar percentages are ignored.\n    // Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\n    // and deprecate barPercentage since this value is ignored when thickness is absolute.\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\n\n/**\n * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\n * percentage options are 1), based on the previous and following categories. This mode\n * generates bars with different widths when data are not evenly spaced.\n * @private\n */\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n\n  if (prev === null) {\n    // first data: its size is double based on the next point or,\n    // if it's also the last data, we use the scale size.\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n\n  if (next === null) {\n    // last data: its size is also double based on the previous point.\n    next = curr + curr - prev;\n  }\n\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\n\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n\n  // Store `barEnd` (furthest away from origin) as parsed value,\n  // to make stacking straight forward\n  item[vScale.axis] = barEnd;\n\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\n\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\n\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\n\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\n\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\n\nfunction borderProps(properties) {\n  let reverse, start, end, top, bottom;\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n  return {start, end, reverse, top, bottom};\n}\n\nfunction setBorderSkipped(properties, options, stack, index) {\n  let edge = options.borderSkipped;\n  const res = {};\n\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n\n  if (edge === true) {\n    properties.borderSkipped = {top: true, right: true, bottom: true, left: true};\n    return;\n  }\n\n  const {start, end, reverse, top, bottom} = borderProps(properties);\n\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\n\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\n\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\n\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\n\nfunction setInflateAmount(properties, {inflateAmount}, ratio) {\n  properties.inflateAmount = inflateAmount === 'auto'\n    ? ratio === 1 ? 0.33 : 0\n    : inflateAmount;\n}\n\nexport default class BarController extends DatasetController {\n\n  static id = 'bar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'bar',\n\n    categoryPercentage: 0.8,\n    barPercentage: 0.9,\n    grouped: true,\n\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'base', 'width', 'height']\n      }\n    }\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      _index_: {\n        type: 'category',\n        offset: true,\n        grid: {\n          offset: true\n        }\n      },\n      _value_: {\n        type: 'linear',\n        beginAtZero: true,\n      }\n    }\n  };\n\n\n  /**\n\t * Overriding primitive data parsing since we support mixed primitive/array\n\t * data for float bars\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  /**\n\t * Overriding array data parsing since we support mixed primitive/array\n\t * data for float bars\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  /**\n\t * Overriding object data parsing since we support mixed primitive/array\n\t * value-scale data for float bars\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      // float bar: only one end of the bar is considered by `super`\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n\n  /**\n\t * @return {number|boolean}\n\t * @protected\n\t */\n  getMaxOverflow() {\n    return 0;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n\n  initialize() {\n    this.enableOptionSharing = true;\n\n    super.initialize();\n\n    const meta = this._cachedMeta;\n    meta.stack = this.getDataset().stack;\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    this.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n\n  updateElements(bars, start, count, mode) {\n    const reset = mode === 'reset';\n    const {index, _cachedMeta: {vScale}} = this;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = this._getRuler();\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n\n    for (let i = start; i < start + count; i++) {\n      const parsed = this.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : this._calculateBarValuePixels(i);\n      const ipixels = this._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (index === stack._top || index === stack._bottom),\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n      const options = properties.options || bars[i].options;\n      setBorderSkipped(properties, options, stack, index);\n      setInflateAmount(properties, options, ruler.ratio);\n      this.updateElement(bars[i], i, properties, mode);\n    }\n  }\n\n  /**\n\t * Returns the stacks based on groups and bar visibility.\n\t * @param {number} [last] - The dataset index\n\t * @param {number} [dataIndex] - The data index of the ruler\n\t * @returns {string[]} The list of stack IDs\n\t * @private\n\t */\n  _getStacks(last, dataIndex) {\n    const {iScale} = this._cachedMeta;\n    const metasets = iScale.getMatchingVisibleMetas(this._type)\n      .filter(meta => meta.controller.options.grouped);\n    const stacked = iScale.options.stacked;\n    const stacks = [];\n    const currentParsed = this._cachedMeta.controller.getParsed(dataIndex);\n    const iScaleValue = currentParsed && currentParsed[iScale.axis];\n\n    const skipNull = (meta) => {\n      const parsed = meta._parsed.find(item => item[iScale.axis] === iScaleValue);\n      const val = parsed && parsed[meta.vScale.axis];\n\n      if (isNullOrUndef(val) || isNaN(val)) {\n        return true;\n      }\n    };\n\n    for (const meta of metasets) {\n      if (dataIndex !== undefined && skipNull(meta)) {\n        continue;\n      }\n\n      // stacked   | meta.stack\n      //           | found | not found | undefined\n      // false     |   x   |     x     |     x\n      // true      |       |     x     |\n      // undefined |       |     x     |     x\n      if (stacked === false || stacks.indexOf(meta.stack) === -1 ||\n\t\t\t\t(stacked === undefined && meta.stack === undefined)) {\n        stacks.push(meta.stack);\n      }\n      if (meta.index === last) {\n        break;\n      }\n    }\n\n    // No stacks? that means there is no visible data. Let's still initialize an `undefined`\n    // stack where possible invisible bars will be located.\n    // https://github.com/chartjs/Chart.js/issues/6368\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n\n    return stacks;\n  }\n\n  /**\n\t * Returns the effective number of stacks based on groups and bar visibility.\n\t * @private\n\t */\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n\n  _getAxisCount() {\n    return this._getAxis().length;\n  }\n\n  getFirstScaleIdForIndexAxis() {\n    const scales = this.chart.scales;\n    const indexScaleId = this.chart.options.indexAxis;\n    return Object.keys(scales).filter(key => scales[key].axis === indexScaleId).shift();\n  }\n\n  _getAxis() {\n    const axis = {};\n    const firstScaleAxisId = this.getFirstScaleIdForIndexAxis();\n    for (const dataset of this.chart.data.datasets) {\n      axis[valueOrDefault(\n        this.chart.options.indexAxis === 'x' ? dataset.xAxisID : dataset.yAxisID, firstScaleAxisId\n      )] = true;\n    }\n    return Object.keys(axis);\n  }\n\n  /**\n\t * Returns the stack index for the given dataset based on groups and bar visibility.\n\t * @param {number} [datasetIndex] - The dataset index\n\t * @param {string} [name] - The stack name to find\n   * @param {number} [dataIndex]\n\t * @returns {number} The stack index\n\t * @private\n\t */\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1; // indexOf returns -1 if element is not present\n\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n\n  /**\n\t * @private\n\t */\n  _getRuler() {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n    }\n\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(meta);\n\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: this._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      // bar thickness ratio used for non-grouped bars\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n\n  /**\n\t * Note: pixel values are not clamped to the scale area.\n\t * @private\n\t */\n  _calculateBarValuePixels(index) {\n    const {_cachedMeta: {vScale, _stacked, index: datasetIndex}, options: {base: baseValue, minBarLength}} = this;\n    const actualBase = baseValue || 0;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      // bars crossing origin are not stacked\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      // When not visible, no height\n      head = base;\n    }\n\n    size = head - base;\n\n    if (Math.abs(size) < minBarLength) {\n      size = barSign(size, vScale, actualBase) * minBarLength;\n      if (value === actualBase) {\n        base -= size / 2;\n      }\n      const startPixel = vScale.getPixelForDecimal(0);\n      const endPixel = vScale.getPixelForDecimal(1);\n      const min = Math.min(startPixel, endPixel);\n      const max = Math.max(startPixel, endPixel);\n      base = Math.max(Math.min(base, max), min);\n      head = base + size;\n\n      if (_stacked && !floating) {\n        // visual data coordinates after applying minBarLength\n        parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\n      }\n    }\n\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n      base += halfGrid;\n      size -= halfGrid;\n    }\n\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n\n  /**\n\t * @private\n\t */\n  _calculateBarIndexPixels(index, ruler) {\n    const scale = ruler.scale;\n    const options = this.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    const axisCount = this._getAxisCount();\n    if (ruler.grouped) {\n      const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount * axisCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount * axisCount);\n      const axisID = this.chart.options.indexAxis === 'x' ? this.getDataset().xAxisID : this.getDataset().yAxisID;\n      const axisNumber = this._getAxis().indexOf(valueOrDefault(axisID, this.getFirstScaleIdForIndexAxis()));\n      const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined) + axisNumber;\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      // For non-grouped bar charts, exact pixel values are used\n      center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n\n\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n\n    for (; i < ilen; ++i) {\n      if (this.getParsed(i)[vScale.axis] !== null && !rects[i].hidden) {\n        rects[i].draw(this._ctx);\n      }\n    }\n  }\n\n}\n", "import DatasetController from '../core/core.datasetController.js';\nimport {valueOrDefault} from '../helpers/helpers.core.js';\n\nexport default class BubbleController extends DatasetController {\n\n  static id = 'bubble';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'point',\n\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'borderWidth', 'radius']\n      }\n    }\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      x: {\n        type: 'linear'\n      },\n      y: {\n        type: 'linear'\n      }\n    }\n  };\n\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n\n  /**\n\t * Parse array of primitive values\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    const parsed = super.parsePrimitiveData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of arrays\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    const parsed = super.parseArrayData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of objects\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const parsed = super.parseObjectData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const data = this._cachedMeta.data;\n\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n    }\n    return max > 0 && max;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const labels = this.chart.data.labels || [];\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n\n    return {\n      label: labels[index] || '',\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n\n  update(mode) {\n    const points = this._cachedMeta.data;\n\n    // Update Points\n    this.updateElements(points, 0, points.length, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && this.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n\n  /**\n\t * @param {number} index\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n\n    // In case values were cached (and thus frozen), we need to clone the values\n    if (values.$shared) {\n      values = Object.assign({}, values, {$shared: false});\n    }\n\n    // Custom radius resolution\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n\n    return values;\n  }\n}\n", "import DatasetController from '../core/core.datasetController.js';\nimport {isObject, resolveObjectKey, toPercentage, toDimension, valueOrDefault} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {toRadians, PI, TAU, HALF_PI, _angleBetween} from '../helpers/helpers.math.js';\n\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  // If the chart's circumference isn't a full circle, calculate size as a ratio of the width/height of the arc\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\n\nexport default class DoughnutController extends DatasetController {\n\n  static id = 'doughnut';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'arc',\n    animation: {\n      // Boolean - Whether we animate the rotation of the Doughnut\n      animateRotate: true,\n      // Boolean - Whether we animate scaling the Doughnut from the centre\n      animateScale: false\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n      },\n    },\n    // The percentage of the chart that we cut out of the middle.\n    cutout: '50%',\n\n    // The rotation of the chart, where the first data arc begins.\n    rotation: 0,\n\n    // The total circumference of the chart.\n    circumference: 360,\n\n    // The outer radius of the chart\n    radius: '100%',\n\n    // Spacing between arcs\n    spacing: 0,\n\n    indexAxis: 'r',\n  };\n\n  static descriptors = {\n    _scriptable: (name) => name !== 'spacing',\n    _indexable: (name) => name !== 'spacing' && !name.startsWith('borderDash') && !name.startsWith('hoverBorderDash'),\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    // Need to override these to give a nice default\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n            if (data.labels.length && data.datasets.length) {\n              const {labels: {pointStyle, color}} = chart.legend.options;\n\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  fontColor: color,\n                  lineWidth: style.borderWidth,\n                  pointStyle: pointStyle,\n                  hidden: !chart.getDataVisibility(i),\n\n                  // Extra data used for toggling the correct item\n                  index: i\n                };\n              });\n            }\n            return [];\n          }\n        },\n\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n      }\n    }\n  };\n\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n\n  linkScales() {}\n\n  /**\n\t * Override data parsing, since we are not using scales\n\t */\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n    } else {\n      let getter = (i) => +data[i];\n\n      if (isObject(data[start])) {\n        const {key = 'value'} = this._parsing;\n        getter = (i) => +resolveObjectKey(data[i], key);\n      }\n\n      let i, ilen;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        meta._parsed[i] = getter(i);\n      }\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n\n  /**\n\t * @private\n\t */\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n\n  /**\n\t * Get the maximal rotation & circumference extents\n\t * across all visible datasets.\n\t */\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n\n    for (let i = 0; i < this.chart.data.datasets.length; ++i) {\n      if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n        const controller = this.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n\n  /**\n\t * @param {string} mode\n\t */\n  update(mode) {\n    const chart = this.chart;\n    const {chartArea} = chart;\n    const meta = this._cachedMeta;\n    const arcs = meta.data;\n    const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n    const chartWeight = this._getRingWeight(this.index);\n\n    // Compute the maximal rotation & circumference limits.\n    // If we only consider our dataset, this can cause problems when two datasets\n    // are both less than a circle with different rotations (starting angles)\n    const {circumference, rotation} = this._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(this.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n    this.offsetX = offsetX * outerRadius;\n    this.offsetY = offsetY * outerRadius;\n\n    meta.total = this.calculateTotal();\n\n    this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n    this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  /**\n   * @private\n   */\n  _circumference(i, reset) {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const circumference = this._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n      return 0;\n    }\n    return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : this.innerRadius;\n    const outerRadius = animateScale ? 0 : this.outerRadius;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    let startAngle = this._getRotation();\n    let i;\n\n    for (i = 0; i < start; ++i) {\n      startAngle += this._circumference(i, reset);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const circumference = this._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + this.offsetX,\n        y: centerY + this.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n      startAngle += circumference;\n\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n        total += Math.abs(value);\n      }\n    }\n\n    return total;\n  }\n\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n\n  getMaxBorderWidth(arcs) {\n    let max = 0;\n    const chart = this.chart;\n    let i, ilen, meta, controller, options;\n\n    if (!arcs) {\n      // Find the outmost visible dataset\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          break;\n        }\n      }\n    }\n\n    if (!arcs) {\n      return 0;\n    }\n\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n\n  getMaxOffset(arcs) {\n    let max = 0;\n\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n\n  /**\n\t * Get radius length offset of the dataset in relation to the visible datasets weights. This allows determining the inner and outer radius correctly\n\t * @private\n\t */\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n\n    return ringWeightOffset;\n  }\n\n  /**\n\t * @private\n\t */\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n\n  /**\n\t * Returns the sum of all visible data set weights.\n\t * @private\n\t */\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\n", "import DatasetController from '../core/core.datasetController.js';\nimport {isNullOrUndef} from '../helpers/index.js';\nimport {isNumber} from '../helpers/helpers.math.js';\nimport {_getStartAndCountOfVisiblePoints, _scaleRangesChanged} from '../helpers/helpers.extras.js';\n\nexport default class LineController extends DatasetController {\n\n  static id = 'line';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: 'line',\n    dataElementType: 'point',\n\n    showLine: true,\n    spanGaps: false,\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      _index_: {\n        type: 'category',\n      },\n      _value_: {\n        type: 'linear',\n      },\n    }\n  };\n\n  initialize() {\n    this.enableOptionSharing = true;\n    this.supportsDecimation = true;\n    super.initialize();\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    // @ts-ignore\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n\n    this._drawStart = start;\n    this._drawCount = count;\n\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n\n    // Update Line\n    line._chart = this.chart;\n    line._datasetIndex = this.index;\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n\n    const options = this.resolveDatasetElementOptions(mode);\n    if (!this.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = this.options.segment;\n    this.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n\n    // Update Points\n    this.updateElements(points, start, count, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    const end = start + count;\n    const pointsCount = points.length;\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n\n    for (let i = 0; i < pointsCount; ++i) {\n      const point = points[i];\n      const properties = directUpdate ? point : {};\n\n      if (i < start || i >= end) {\n        properties.skip = true;\n        continue;\n      }\n\n      const parsed = this.getParsed(i);\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n\n      prevParsed = parsed;\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n}\n", "import DatasetController from '../core/core.datasetController.js';\nimport {toRadians, PI, formatNumber, _parseObjectDataRadialScale} from '../helpers/index.js';\n\nexport default class PolarAreaController extends DatasetController {\n\n  static id = 'polarArea';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    dataElementType: 'arc',\n    animation: {\n      animateRotate: true,\n      animateScale: true\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n      },\n    },\n    indexAxis: 'r',\n    startAngle: 0,\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n            if (data.labels.length && data.datasets.length) {\n              const {labels: {pointStyle, color}} = chart.legend.options;\n\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  fontColor: color,\n                  lineWidth: style.borderWidth,\n                  pointStyle: pointStyle,\n                  hidden: !chart.getDataVisibility(i),\n\n                  // Extra data used for toggling the correct item\n                  index: i\n                };\n              });\n            }\n            return [];\n          }\n        },\n\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n      }\n    },\n\n    scales: {\n      r: {\n        type: 'radialLinear',\n        angleLines: {\n          display: false\n        },\n        beginAtZero: true,\n        grid: {\n          circular: true\n        },\n        pointLabels: {\n          display: false\n        },\n        startAngle: 0\n      }\n    }\n  };\n\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  /**\n   * @protected\n   */\n  getMinMax() {\n    const meta = this._cachedMeta;\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n\n    meta.data.forEach((element, index) => {\n      const parsed = this.getParsed(index).r;\n\n      if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n        if (parsed < range.min) {\n          range.min = parsed;\n        }\n\n        if (parsed > range.max) {\n          range.max = parsed;\n        }\n      }\n    });\n\n    return range;\n  }\n\n  /**\n\t * @private\n\t */\n  _updateRadius() {\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n\n    this.outerRadius = outerRadius - (radiusLength * this.index);\n    this.innerRadius = this.outerRadius - radiusLength;\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = this._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n\n    const defaultAngle = 360 / this.countVisibleElements();\n\n    for (i = 0; i < start; ++i) {\n      angle += this._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n      angle = endAngle;\n\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n      };\n\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  countVisibleElements() {\n    const meta = this._cachedMeta;\n    let count = 0;\n\n    meta.data.forEach((element, index) => {\n      if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n\n    return count;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index)\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\n      : 0;\n  }\n}\n", "import DoughnutController from './controller.doughnut.js';\n\n// Pie charts are Doughnut chart with different defaults\nexport default class PieController extends DoughnutController {\n\n  static id = 'pie';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    // The percentage of the chart that we cut out of the middle.\n    cutout: 0,\n\n    // The rotation of the chart, where the first data arc begins.\n    rotation: 0,\n\n    // The total circumference of the chart.\n    circumference: 360,\n\n    // The outer radius of the chart\n    radius: '100%'\n  };\n}\n", "import DatasetController from '../core/core.datasetController.js';\nimport {_parseObjectDataRadialScale} from '../helpers/index.js';\n\nexport default class RadarController extends DatasetController {\n\n  static id = 'radar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: 'line',\n    dataElementType: 'point',\n    indexAxis: 'r',\n    showLine: true,\n    elements: {\n      line: {\n        fill: 'start'\n      }\n    },\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    scales: {\n      r: {\n        type: 'radialLinear',\n      }\n    }\n  };\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const vScale = this._cachedMeta.vScale;\n    const parsed = this.getParsed(index);\n\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n\n    // Update Line\n    line.points = points;\n    // In resize mode only point locations change, so no need to set the points or options.\n    if (mode !== 'resize') {\n      const options = this.resolveDatasetElementOptions(mode);\n      if (!this.options.showLine) {\n        options.borderWidth = 0;\n      }\n\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n\n      this.updateElement(line, undefined, properties, mode);\n    }\n\n    // Update Points\n    this.updateElements(points, 0, points.length, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const scale = this._cachedMeta.rScale;\n    const reset = mode === 'reset';\n\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n}\n", "import DatasetController from '../core/core.datasetController.js';\nimport {isNullOrUndef} from '../helpers/index.js';\nimport {isNumber} from '../helpers/helpers.math.js';\nimport {_getStartAndCountOfVisiblePoints, _scaleRangesChanged} from '../helpers/helpers.extras.js';\n\nexport default class ScatterController extends DatasetController {\n\n  static id = 'scatter';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'point',\n    showLine: false,\n    fill: false\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n\n    interaction: {\n      mode: 'point'\n    },\n\n    scales: {\n      x: {\n        type: 'linear'\n      },\n      y: {\n        type: 'linear'\n      }\n    }\n  };\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const labels = this.chart.data.labels || [];\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n\n    return {\n      label: labels[index] || '',\n      value: '(' + x + ', ' + y + ')'\n    };\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {data: points = []} = meta;\n    // @ts-ignore\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n\n    this._drawStart = start;\n    this._drawCount = count;\n\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n\n    if (this.options.showLine) {\n\n      // https://github.com/chartjs/Chart.js/issues/11333\n      if (!this.datasetElementType) {\n        this.addElements();\n      }\n      const {dataset: line, _dataset} = meta;\n\n      // Update Line\n      line._chart = this.chart;\n      line._datasetIndex = this.index;\n      line._decimated = !!_dataset._decimated;\n      line.points = points;\n\n      const options = this.resolveDatasetElementOptions(mode);\n      options.segment = this.options.segment;\n      this.updateElement(line, undefined, {\n        animated: !animationsDisabled,\n        options\n      }, mode);\n    } else if (this.datasetElementType) {\n      // https://github.com/chartjs/Chart.js/issues/11333\n      delete meta.dataset;\n      this.datasetElementType = false;\n    }\n\n    // Update Points\n    this.updateElements(points, start, count, mode);\n  }\n\n  addElements() {\n    const {showLine} = this.options;\n\n    if (!this.datasetElementType && showLine) {\n      this.datasetElementType = this.chart.registry.getElement('line');\n    }\n\n    super.addElements();\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n\n      prevParsed = parsed;\n    }\n\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const data = meta.data || [];\n\n    if (!this.options.showLine) {\n      let max = 0;\n      for (let i = data.length - 1; i >= 0; --i) {\n        max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n      }\n      return max > 0 && max;\n    }\n\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n\n    if (!data.length) {\n      return border;\n    }\n\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n}\n", "/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */\n\nimport type {AnyObject} from '../types/basic.js';\nimport type {ChartOptions} from '../types/index.js';\n\nexport type TimeUnit = 'millisecond' | 'second' | 'minute' | 'hour' | 'day' | 'week' | 'month' | 'quarter' | 'year';\n\nexport interface DateAdapter<T extends AnyObject = AnyObject> {\n  readonly options: T;\n  /**\n   * Will called with chart options after adapter creation.\n   */\n  init(this: DateAdapter<T>, chartOptions: ChartOptions): void;\n  /**\n   * Returns a map of time formats for the supported formatting units defined\n   * in Unit as well as 'datetime' representing a detailed date/time string.\n   */\n  formats(this: DateAdapter<T>): Record<TimeUnit | 'datetime', string>;\n  /**\n   * Parses the given `value` and return the associated timestamp.\n   * @param value - the value to parse (usually comes from the data)\n   * @param [format] - the expected data format\n   */\n  parse(this: DateAdapter<T>, value: unknown, format?: string): number | null;\n  /**\n   * Returns the formatted date in the specified `format` for a given `timestamp`.\n   * @param timestamp - the timestamp to format\n   * @param format - the date/time token\n   */\n  format(this: DateAdapter<T>, timestamp: number, format: string): string;\n  /**\n   * Adds the specified `amount` of `unit` to the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param amount - the amount to add\n   * @param unit - the unit as string\n   */\n  add(this: DateAdapter<T>, timestamp: number, amount: number, unit: TimeUnit): number;\n  /**\n   * Returns the number of `unit` between the given timestamps.\n   * @param a - the input timestamp (reference)\n   * @param b - the timestamp to subtract\n   * @param unit - the unit as string\n   */\n  diff(this: DateAdapter<T>, a: number, b: number, unit: TimeUnit): number;\n  /**\n   * Returns start of `unit` for the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param unit - the unit as string\n   * @param [weekday] - the ISO day of the week with 1 being Monday\n   * and 7 being Sunday (only needed if param *unit* is `isoWeek`).\n   */\n  startOf(this: DateAdapter<T>, timestamp: number, unit: TimeUnit | 'isoWeek', weekday?: number | boolean): number;\n  /**\n   * Returns end of `unit` for the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param unit - the unit as string\n   */\n  endOf(this: DateAdapter<T>, timestamp: number, unit: TimeUnit): number;\n}\n\nfunction abstract<T = void>(): T {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */\nclass DateAdapterBase implements DateAdapter {\n\n  /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */\n  static override<T extends AnyObject = AnyObject>(\n    members: Partial<Omit<DateAdapter<T>, 'options'>>\n  ) {\n    Object.assign(DateAdapterBase.prototype, members);\n  }\n\n  readonly options: AnyObject;\n\n  constructor(options?: AnyObject) {\n    this.options = options || {};\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  init() {}\n\n  formats(): Record<TimeUnit | 'datetime', string> {\n    return abstract();\n  }\n\n  parse(): number | null {\n    return abstract();\n  }\n\n  format(): string {\n    return abstract();\n  }\n\n  add(): number {\n    return abstract();\n  }\n\n  diff(): number {\n    return abstract();\n  }\n\n  startOf(): number {\n    return abstract();\n  }\n\n  endOf(): number {\n    return abstract();\n  }\n}\n\nexport default {\n  _date: DateAdapterBase as {\n    new (options?: AnyObject): DateAdapter;\n    override<T extends AnyObject = AnyObject>(\n      members: Partial<Omit<DateAdapter<T>, 'options'>>\n    ): void;\n  }\n};\n", "import {_lookupByKey, _rlookupByKey} from '../helpers/helpers.collection.js';\nimport {getRelativePosition} from '../helpers/helpers.dom.js';\nimport {_angleBetween, getAngleFromPoint} from '../helpers/helpers.math.js';\nimport {_isPointInArea, isNullOrUndef} from '../helpers/index.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef {{axis?: string, intersect?: boolean, includeInvisible?: boolean}} InteractionOptions\n * @typedef {{datasetIndex: number, index: number, element: import('./core.element.js').default}} InteractionItem\n * @typedef { import('../types/index.js').Point } Point\n */\n\n/**\n * Helper function to do binary search when possible\n * @param {object} metaset - the dataset meta\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {number} value - the value to find\n * @param {boolean} [intersect] - should the element intersect\n * @returns {{lo:number, hi:number}} indices to search data array between\n */\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  const spanGaps = metaset.dataset ? metaset.dataset.options ? metaset.dataset.options.spanGaps : null : null;\n\n  if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      const result = lookupMethod(data, axis, value);\n      if (spanGaps) {\n        const {vScale} = controller._cachedMeta;\n        const {_parsed} = metaset;\n\n        const distanceToDefinedLo = (_parsed\n          .slice(0, result.lo + 1)\n          .reverse()\n          .findIndex(\n            point => !isNullOrUndef(point[vScale.axis])));\n        result.lo -= Math.max(0, distanceToDefinedLo);\n\n        const distanceToDefinedHi = (_parsed\n          .slice(result.hi)\n          .findIndex(\n            point => !isNullOrUndef(point[vScale.axis])));\n        result.hi += Math.max(0, distanceToDefinedHi);\n      }\n      return result;\n    } else if (controller._sharedOptions) {\n      // _sharedOptions indicates that each element has equal options -> equal proportions\n      // So we can do a ranged binary search based on the range of first element and\n      // be confident to get the full range of indices that can intersect with the value.\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  // Default to all elements, when binary search can not be used.\n  return {lo: 0, hi: data.length - 1};\n}\n\n/**\n * Helper function to select candidate elements for interaction\n * @param {Chart} chart - the chart\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {function} handler - the callback to execute for each visible item\n * @param {boolean} [intersect] - consider intersecting items\n */\nfunction evaluateInteractionItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\n\n/**\n * Get a distance metric function for two points based on the\n * axis mode setting\n * @param {string} axis - the axis mode. x|y|xy|r\n */\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\n\n/**\n * Helper function to get the items that intersect the event position\n * @param {Chart} chart - the chart\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n  const items = [];\n\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return items;\n  }\n\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n      return;\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position for a radial chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestRadialItems(chart, position, axis, useFinalPosition) {\n  let items = [];\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const {startAngle, endAngle} = element.getProps(['startAngle', 'endAngle'], useFinalPosition);\n    const {angle} = getAngleFromPoint(element, {x: position.x, y: position.y});\n\n    if (_angleBetween(angle, startAngle, endAngle)) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position for a cartesian chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  let items = [];\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const inRange = element.inRange(position.x, position.y, useFinalPosition);\n    if (intersect && !inRange) {\n      return;\n    }\n\n    const center = element.getCenterPoint(useFinalPosition);\n    const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n    if (!pointInArea && !inRange) {\n      return;\n    }\n\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      // Can have multiple items at the same distance in which case we sort by size\n      items.push({element, datasetIndex, index});\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position considering all visible items in the chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return [];\n  }\n\n  return axis === 'r' && !intersect\n    ? getNearestRadialItems(chart, position, axis, useFinalPosition)\n    : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n\n/**\n * Helper function to get the items matching along the given X or Y axis\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axis to match\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @return {InteractionItem[]} the nearest items\n */\nfunction getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n  const items = [];\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n\n  evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index) => {\n    if (element[rangeMethod] && element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n      intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n    }\n  });\n\n  // If we want to trigger on an intersect and we don't have any items\n  // that intersect the position, return nothing\n  if (intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\n\n/**\n * Contains interaction related functions\n * @namespace Chart.Interaction\n */\nexport default {\n  // Part of the public API to facilitate developers creating their own modes\n  evaluateInteractionItems,\n\n  // Helper function for different modes\n  modes: {\n    /**\n\t\t * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n\t\t * @function Chart.Interaction.modes.index\n\t\t * @since v2.4.0\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      // Default axis for index mode is 'x' to match old behaviour\n      const axis = options.axis || 'x';\n      const includeInvisible = options.includeInvisible || false;\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible)\n        : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      const elements = [];\n\n      if (!items.length) {\n        return [];\n      }\n\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n\n        // don't count items that are skipped (null data)\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n\n      return elements;\n    },\n\n    /**\n\t\t * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect is false, we find the nearest item and return the items in that dataset\n\t\t * @function Chart.Interaction.modes.dataset\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) :\n        getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n\n      return items;\n    },\n\n    /**\n\t\t * Point mode returns all elements that hit test based on the event position\n\t\t * of the event\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n    },\n\n    /**\n\t\t * nearest mode returns the element closest to the point\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n    },\n\n    /**\n\t\t * x mode returns the elements that hit-test at the current x coordinate\n\t\t * @function Chart.Interaction.modes.x\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    x(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n    },\n\n    /**\n\t\t * y mode returns the elements that hit-test at the current y coordinate\n\t\t * @function Chart.Interaction.modes.y\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    y(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n    }\n  }\n};\n", "import {defined, each, isObject} from '../helpers/helpers.core.js';\nimport {toPadding} from '../helpers/helpers.options.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n */\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\n\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\n\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\n\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\n\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({position: pos, options: {stack, stackWeight = 1}} = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && (pos + stack),\n      stackWeight\n    });\n  }\n  return layoutBoxes;\n}\n\nfunction buildStacks(layouts) {\n  const stacks = {};\n  for (const wrap of layouts) {\n    const {stack, pos, stackWeight} = wrap;\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n    const _stack = stacks[stack] || (stacks[stack] = {count: 0, placed: 0, weight: 0, size: 0});\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n  return stacks;\n}\n\n/**\n * store dimensions used instead of available chartArea in fitBoxes\n **/\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {vBoxMaxWidth, hBoxMaxHeight} = params;\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {fullSize} = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\n\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\n\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\n\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\n\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {pos, box} = layout;\n  const maxPadding = chartArea.maxPadding;\n\n  // dynamically placed boxes size is not considered\n  if (!isObject(pos)) {\n    if (layout.size) {\n      // this layout was already counted for, lets first reduce old size\n      chartArea[pos] -= layout.size;\n    }\n    const stack = stacks[layout.stack] || {size: 0, count: 1};\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n\n  // return booleans on the changes per direction\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\n\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\n\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\n\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout, stacks);\n\n    // Dimensions changed and there were non full width boxes before this\n    // -> we have to refit those\n    refit |= same && refitBoxes.length;\n\n    // Chart area changed in the opposite direction\n    changed = changed || other;\n\n    if (!box.fullSize) { // fullSize boxes don't need to be re-fitted in any case\n      refitBoxes.push(layout);\n    }\n  }\n\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\n\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\n\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {x, y} = chartArea;\n\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {count: 1, placed: 0, weight: 1};\n    const weight = (layout.stackWeight / stack.weight) || 1;\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n      if (defined(stack.start)) {\n        y = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height = chartArea.h * weight;\n      const width = stack.size || box.width;\n      if (defined(stack.start)) {\n        x = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n      }\n      stack.start = x;\n      stack.placed += height;\n      x = box.right;\n    }\n  }\n\n  chartArea.x = x;\n  chartArea.y = y;\n}\n\n/**\n * @interface LayoutItem\n * @typedef {object} LayoutItem\n * @prop {string} position - The position of the item in the chart layout. Possible values are\n * 'left', 'top', 'right', 'bottom', and 'chartArea'\n * @prop {number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n * @prop {boolean} fullSize - if true, and the item is horizontal, then push vertical boxes down\n * @prop {function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n * @prop {function} update - Takes two parameters: width and height. Returns size of item\n * @prop {function} draw - Draws the element\n * @prop {function} [getPadding] -  Returns an object with padding on the edges\n * @prop {number} width - Width of item. Must be valid after update()\n * @prop {number} height - Height of item. Must be valid after update()\n * @prop {number} left - Left edge of the item. Set by layout system and cannot be used in update\n * @prop {number} top - Top edge of the item. Set by layout system and cannot be used in update\n * @prop {number} right - Right edge of the item. Set by layout system and cannot be used in update\n * @prop {number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n */\n\n// The layout service is very self explanatory.  It's responsible for the layout within a chart.\n// Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n// It is this service's responsibility of carrying out that layout.\nexport default {\n\n  /**\n\t * Register a box to a chart.\n\t * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n\t * @param {Chart} chart - the chart to use\n\t * @param {LayoutItem} item - the item to add to be laid out\n\t */\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n\n    // initialize item with default values\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    // @ts-ignore\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n\n    chart.boxes.push(item);\n  },\n\n  /**\n\t * Remove a layoutItem from a chart\n\t * @param {Chart} chart - the chart to remove the box from\n\t * @param {LayoutItem} layoutItem - the item to remove from the layout\n\t */\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n\n  /**\n\t * Sets (or updates) options on the given `item`.\n\t * @param {Chart} chart - the chart in which the item lives (or will be added to)\n\t * @param {LayoutItem} item - the item to configure with the given options\n\t * @param {object} options - the new item options.\n\t */\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n\n  /**\n\t * Fits boxes of the given chart into the given size by having each box measure itself\n\t * then running a fitting algorithm\n\t * @param {Chart} chart - the chart\n\t * @param {number} width - the width to fit into\n\t * @param {number} height - the height to fit into\n   * @param {number} minPadding - minimum padding required for each side of chart area\n\t */\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n\n    // Before any changes are made, notify boxes that an update is about to being\n    // This is used to clear any cached data (e.g. scale limits)\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n\n    // Essentially we now have any number of boxes on each of the 4 sides.\n    // Our canvas looks like the following.\n    // The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n    // B1 is the bottom axis\n    // There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n    // These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n    // an error will be thrown.\n    //\n    // |----------------------------------------------------|\n    // |                  T1 (Full Width)                   |\n    // |----------------------------------------------------|\n    // |    |    |                 T2                  |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    | C1 |                           | C2 |    |\n    // |    |    |----|                           |----|    |\n    // |    |    |                                     |    |\n    // | L1 | L2 |           ChartArea (C0)            | R1 |\n    // |    |    |                                     |    |\n    // |    |    |----|                           |----|    |\n    // |    |    | C3 |                           | C4 |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    |                 B1                  |    |\n    // |----------------------------------------------------|\n    // |                  B2 (Full Width)                   |\n    // |----------------------------------------------------|\n    //\n\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n\n    // First fit the fullSize boxes, to reduce probability of re-fitting.\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n\n    // Then fit vertical boxes\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n\n    // Then fit horizontal boxes\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      // if the area changed, re-fit vertical boxes\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n\n    handleMaxPadding(chartArea);\n\n    // Finally place the boxes to correct coordinates\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n\n    // Move to opposite side of chart\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n\n    // Finally update boxes in chartArea (radial scale for example)\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h, {left: 0, top: 0, right: 0, bottom: 0});\n    });\n  }\n};\n", "\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\n/**\n * Abstract class that allows abstracting platform dependencies away from the chart.\n */\nexport default class BasePlatform {\n  /**\n\t * Called at chart construction time, returns a context2d instance implementing\n\t * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n\t * @param {HTMLCanvasElement} canvas - The canvas from which to acquire context (platform specific)\n\t * @param {number} [aspectRatio] - The chart options\n\t */\n  acquireContext(canvas, aspectRatio) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Called at chart destruction time, releases any resources associated to the context\n\t * previously returned by the acquireContext() method.\n\t * @param {CanvasRenderingContext2D} context - The context2d instance\n\t * @returns {boolean} true if the method succeeded, else false\n\t */\n  releaseContext(context) { // eslint-disable-line no-unused-vars\n    return false;\n  }\n\n  /**\n\t * Registers the specified listener on the given chart.\n\t * @param {Chart} chart - Chart from which to listen for event\n\t * @param {string} type - The ({@link ChartEvent}) type to listen for\n\t * @param {function} listener - Receives a notification (an object that implements\n\t * the {@link ChartEvent} interface) when an event of the specified type occurs.\n\t */\n  addEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Removes the specified listener previously registered with addEventListener.\n\t * @param {Chart} chart - Chart from which to remove the listener\n\t * @param {string} type - The ({@link ChartEvent}) type to remove\n\t * @param {function} listener - The listener function to remove from the event target.\n\t */\n  removeEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * @returns {number} the current devicePixelRatio of the device this platform is connected to.\n\t */\n  getDevicePixelRatio() {\n    return 1;\n  }\n\n  /**\n\t * Returns the maximum size in pixels of given canvas element.\n\t * @param {HTMLCanvasElement} element\n\t * @param {number} [width] - content width of parent element\n\t * @param {number} [height] - content height of parent element\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\n\t */\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @returns {boolean} true if the canvas is attached to the platform, false if not.\n\t */\n  isAttached(canvas) { // eslint-disable-line no-unused-vars\n    return true;\n  }\n\n  /**\n   * Updates config with platform specific requirements\n   * @param {import('../core/core.config.js').default} config\n   */\n  updateConfig(config) { // eslint-disable-line no-unused-vars\n    // no-op\n  }\n}\n", "/**\n * Platform fallback implementation (minimal).\n * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n */\n\nimport BasePlatform from './platform.base.js';\n\n/**\n * Platform class for charts without access to the DOM or to many element properties\n * This platform is used by default for any chart passed an OffscreenCanvas.\n * @extends BasePlatform\n */\nexport default class BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n  updateConfig(config) {\n    config.options.animation = false;\n  }\n}\n", "/**\n * Chart.Platform implementation for targeting a web browser\n */\n\nimport BasePlatform from './platform.base.js';\nimport {_getParentNode, getRelativePosition, supportsEventListenerOptions, readUsedSize, getMaximumSize} from '../helpers/helpers.dom.js';\nimport {throttled} from '../helpers/helpers.extras.js';\nimport {isNullOrUndef} from '../helpers/helpers.core.js';\n\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\nconst EXPANDO_KEY = '$chartjs';\n\n/**\n * DOM event types -> Chart.js event types.\n * Note: only events with different types are mapped.\n * @see https://developer.mozilla.org/en-US/docs/Web/Events\n */\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\n\nconst isNullOrEmpty = value => value === null || value === '';\n/**\n * Initializes the canvas style and render size without modifying the canvas display size,\n * since responsiveness is handled by the controller.resize() method. The config is used\n * to determine the aspect ratio to apply in case no explicit height has been specified.\n * @param {HTMLCanvasElement} canvas\n * @param {number} [aspectRatio]\n */\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n\n  // NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n  // returns null or '' if no explicit value has been set to the canvas attribute.\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n\n  // Chart.js modifies some canvas values that we want to restore on destroy\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n\n  // Force canvas to display as block to avoid extra space caused by inline\n  // elements, which would interfere with the responsive resize process.\n  // https://github.com/chartjs/Chart.js/issues/2538\n  style.display = style.display || 'block';\n  // Include possible borders in the size\n  style.boxSizing = style.boxSizing || 'border-box';\n\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      // If no explicit render height and style height, let's apply the aspect ratio,\n      // which one can be specified by the user but also by charts as default option\n      // (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n\n  return canvas;\n}\n\n// Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n// https://github.com/chartjs/Chart.js/issues/4287\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\n\nfunction addListener(node, type, listener) {\n  if (node) {\n    node.addEventListener(type, listener, eventListenerOptions);\n  }\n}\n\nfunction removeListener(chart, type, listener) {\n  if (chart && chart.canvas) {\n    chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n  }\n}\n\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\n\nfunction nodeListContains(nodeList, canvas) {\n  for (const node of nodeList) {\n    if (node === canvas || node.contains(canvas)) {\n      return true;\n    }\n  }\n}\n\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\n\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\n\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\n\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\n\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\n\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\n\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      // If the container size shrank during chart resize, let's assume\n      // scrollbar appeared. So we resize again with the scrollbar visible -\n      // effectively making chart smaller and the scrollbar hidden again.\n      // Because we are inside `throttled`, and currently `ticking`, scroll\n      // events are ignored during this whole 2 resize process.\n      // If we assumed wrong and something else happened, we are resizing\n      // twice in a frame (potential performance issue)\n      listener();\n    }\n  }, window);\n\n  // @ts-ignore until https://github.com/microsoft/TypeScript/issues/37861 implemented\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    // When its container's display is set to 'none' the callback will be called with a\n    // size of (0, 0), which will cause the chart to lose its original height, so skip\n    // resizing in such case.\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n\n  return observer;\n}\n\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\n\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    // This case can occur if the chart is destroyed while waiting\n    // for the throttled function to occur. We prevent crashes by checking\n    // for a destroyed chart\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart);\n\n  addListener(canvas, type, proxy);\n\n  return proxy;\n}\n\n/**\n * Platform class for charts that can access the DOM and global window/document properties\n * @extends BasePlatform\n */\nexport default class DomPlatform extends BasePlatform {\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @param {number} [aspectRatio]\n\t * @return {CanvasRenderingContext2D|null}\n\t */\n  acquireContext(canvas, aspectRatio) {\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n\n    // `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the canvas is\n    // inside an iframe or when running in a protected environment. We could guess the\n    // types from their toString() value but let's keep things flexible and assume it's\n    // a sufficient condition if the canvas has a context2D which has canvas as `canvas`.\n    // https://github.com/chartjs/Chart.js/issues/3887\n    // https://github.com/chartjs/Chart.js/issues/4102\n    // https://github.com/chartjs/Chart.js/issues/4152\n    if (context && context.canvas === canvas) {\n      // Load platform resources on first chart creation, to make it possible to\n      // import the library before setting platform options.\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n\n    return null;\n  }\n\n  /**\n\t * @param {CanvasRenderingContext2D} context\n\t */\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n\n    // The canvas render size might have been changed (and thus the state stack discarded),\n    // we can't use save() and restore() to restore the initial state. So make sure that at\n    // least the canvas context is reset to the default state by setting the canvas width.\n    // https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n    // eslint-disable-next-line no-self-assign\n    canvas.width = canvas.width;\n\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n\n  /**\n\t *\n\t * @param {Chart} chart\n\t * @param {string} type\n\t * @param {function} listener\n\t */\n  addEventListener(chart, type, listener) {\n    // Can have only one listener per type, so make sure previous is removed\n    this.removeEventListener(chart, type);\n\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n\n\n  /**\n\t * @param {Chart} chart\n\t * @param {string} type\n\t */\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n\n    if (!proxy) {\n      return;\n    }\n\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @param {number} [width] - content width of parent element\n\t * @param {number} [height] - content height of parent element\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\n\t */\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t */\n  isAttached(canvas) {\n    const container = canvas && _getParentNode(canvas);\n    return !!(container && container.isConnected);\n  }\n}\n", "import {_isDomSupported} from '../helpers/index.js';\nimport BasePlatform from './platform.base.js';\nimport BasicPlatform from './platform.basic.js';\nimport DomPlatform from './platform.dom.js';\n\nexport function _detectPlatform(canvas) {\n  if (!_isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\n\nexport {BasePlatform, BasicPlatform, DomPlatform};\n", "import type {AnyObject} from '../types/basic.js';\nimport type {Point} from '../types/geometric.js';\nimport type {Animation} from '../types/animation.js';\nimport {isNumber} from '../helpers/helpers.math.js';\n\nexport default class Element<T = AnyObject, O = AnyObject> {\n\n  static defaults = {};\n  static defaultRoutes = undefined;\n\n  x: number;\n  y: number;\n  active = false;\n  options: O;\n  $animations: Record<keyof T, Animation>;\n\n  tooltipPosition(useFinalPosition: boolean): Point {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y} as Point;\n  }\n\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n\n  /**\n   * Gets the current or final value of each prop. Can return extra properties (whole object).\n   * @param props - properties to get\n   * @param [final] - get the final value (animation target)\n   */\n  getProps<P extends (keyof T)[]>(props: P, final?: boolean): Pick<T, P[number]>;\n  getProps<P extends string>(props: P[], final?: boolean): Partial<Record<P, unknown>>;\n  getProps(props: string[], final?: boolean): Partial<Record<string, unknown>> {\n    const anims = this.$animations;\n    if (!final || !anims) {\n      // let's not create an object, if not needed\n      return this as Record<string, unknown>;\n    }\n    const ret: Record<string, unknown> = {};\n    props.forEach((prop) => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop as string];\n    });\n    return ret;\n  }\n}\n", "import {isNullOrUndef, valueOrDefault} from '../helpers/helpers.core.js';\nimport {_factorize} from '../helpers/helpers.math.js';\n\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\n */\n\n/**\n * Returns a subset of ticks to be plotted to avoid overlapping labels.\n * @param {import('./core.scale.js').default} scale\n * @param {Tick[]} ticks\n * @return {Tick[]}\n * @private\n */\nexport function autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const determinedMaxTicks = determineMaxTicks(scale);\n  const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n\n  // If there are too many major ticks to display them all\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\n\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\n\n/**\n * @param {number[]} majorIndices\n * @param {Tick[]} ticks\n * @param {number} ticksLimit\n */\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n\n  // If the major ticks are evenly spaced apart, place the minor ticks\n  // so that they divide the major ticks into even chunks\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\n\n/**\n * @param {Tick[]} ticks\n */\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\n\n/**\n * @param {Tick[]} ticks\n * @param {Tick[]} newTicks\n * @param {number[]} majorIndices\n * @param {number} spacing\n */\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\n\n/**\n * @param {Tick[]} ticks\n * @param {Tick[]} newTicks\n * @param {number} spacing\n * @param {number} [majorStart]\n * @param {number} [majorEnd]\n */\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n\n  next = start;\n\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\n\n\n/**\n * @param {number[]} arr\n */\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n\n  if (len < 2) {\n    return false;\n  }\n\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n", "import Element from './core.element.js';\nimport {_alignPixel, _measureText, renderText, clipArea, unclipArea} from '../helpers/helpers.canvas.js';\nimport {callback as call, each, finiteOrDefault, isArray, isFinite, isNullOrUndef, isObject, valueOrDefault} from '../helpers/helpers.core.js';\nimport {toDegrees, toRadians, _int16Range, _limitValue, HALF_PI} from '../helpers/helpers.math.js';\nimport {_alignStartEnd, _toLeftRightCenter} from '../helpers/helpers.extras.js';\nimport {createContext, toFont, toPadding, _addGrace} from '../helpers/helpers.options.js';\nimport {autoSkip} from './core.scale.autoskip.js';\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nconst getTicksLimit = (ticksLength, maxTicksLimit) => Math.min(maxTicksLimit || ticksLength, ticksLength);\n\n/**\n * @typedef { import('../types/index.js').Chart } Chart\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\n */\n\n/**\n * Returns a new array containing numItems from arr\n * @param {any[]} arr\n * @param {number} numItems\n */\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\n\n/**\n * @param {Scale} scale\n * @param {number} index\n * @param {boolean} offsetGridLines\n */\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6; // 1e-6 is margin in pixels for accumulated error.\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n\n    // Return undefined if the pixel is out of the range\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\n\n/**\n * @param {object} caches\n * @param {number} length\n */\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\n\n/**\n * @param {object} options\n */\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\n\n/**\n * @param {object} options\n */\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n\n  return (lines * font.lineHeight) + padding.height;\n}\n\nfunction createScaleContext(parent, scale) {\n  return createContext(parent, {\n    scale,\n    type: 'scale'\n  });\n}\n\nfunction createTickContext(parent, index, tick) {\n  return createContext(parent, {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\n\nfunction titleAlign(align, position, reverse) {\n  /** @type {CanvasTextAlign} */\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\n\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right, chart} = scale;\n  const {chartArea, scales} = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\n\nexport default class Scale extends Element {\n\n  // eslint-disable-next-line max-statements\n  constructor(cfg) {\n    super();\n\n    /** @type {string} */\n    this.id = cfg.id;\n    /** @type {string} */\n    this.type = cfg.type;\n    /** @type {any} */\n    this.options = undefined;\n    /** @type {CanvasRenderingContext2D} */\n    this.ctx = cfg.ctx;\n    /** @type {Chart} */\n    this.chart = cfg.chart;\n\n    // implements box\n    /** @type {number} */\n    this.top = undefined;\n    /** @type {number} */\n    this.bottom = undefined;\n    /** @type {number} */\n    this.left = undefined;\n    /** @type {number} */\n    this.right = undefined;\n    /** @type {number} */\n    this.width = undefined;\n    /** @type {number} */\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    /** @type {number} */\n    this.maxWidth = undefined;\n    /** @type {number} */\n    this.maxHeight = undefined;\n    /** @type {number} */\n    this.paddingTop = undefined;\n    /** @type {number} */\n    this.paddingBottom = undefined;\n    /** @type {number} */\n    this.paddingLeft = undefined;\n    /** @type {number} */\n    this.paddingRight = undefined;\n\n    // scale-specific properties\n    /** @type {string=} */\n    this.axis = undefined;\n    /** @type {number=} */\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    /** @type {Tick[]} */\n    this.ticks = [];\n    /** @type {object[]|null} */\n    this._gridLineItems = null;\n    /** @type {object[]|null} */\n    this._labelItems = null;\n    /** @type {object|null} */\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    /** @type {number} */\n    this._startPixel = undefined;\n    /** @type {number} */\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n\n  /**\n\t * @param {any} options\n\t * @since 3.0\n\t */\n  init(options) {\n    this.options = options.setContext(this.getContext());\n\n    this.axis = options.axis;\n\n    // parse min/max value, so we can properly determine min/max for other scales\n    this._userMin = this.parse(options.min);\n    this._userMax = this.parse(options.max);\n    this._suggestedMin = this.parse(options.suggestedMin);\n    this._suggestedMax = this.parse(options.suggestedMax);\n  }\n\n  /**\n\t * Parse a supported input value to internal representation.\n\t * @param {*} raw\n\t * @param {number} [index]\n\t * @since 3.0\n\t */\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    return raw;\n  }\n\n  /**\n\t * @return {{min: number, max: number, minDefined: boolean, maxDefined: boolean}}\n\t * @protected\n\t * @since 3.0\n\t */\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isFinite(_userMin),\n      maxDefined: isFinite(_userMax)\n    };\n  }\n\n  /**\n\t * @param {boolean} canStack\n\t * @return {{min: number, max: number}}\n\t * @protected\n\t * @since 3.0\n\t */\n  getMinMax(canStack) {\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    let range;\n\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(this, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n\n    // Make sure min <= max when only min or max is defined by user and the data is outside that range\n    min = maxDefined && min > max ? max : min;\n    max = minDefined && min > max ? min : max;\n\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n\n  /**\n\t * Get the padding needed for the scale\n\t * @return {{top: number, left: number, bottom: number, right: number}} the necessary padding\n\t * @private\n\t */\n  getPadding() {\n    return {\n      left: this.paddingLeft || 0,\n      top: this.paddingTop || 0,\n      right: this.paddingRight || 0,\n      bottom: this.paddingBottom || 0\n    };\n  }\n\n  /**\n\t * Returns the scale tick objects\n\t * @return {Tick[]}\n\t * @since 2.7\n\t */\n  getTicks() {\n    return this.ticks;\n  }\n\n  /**\n\t * @return {string[]}\n\t */\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n\n  /**\n   * @return {import('../types.js').LabelItem[]}\n   */\n  getLabelItems(chartArea = this.chart.chartArea) {\n    const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n    return items;\n  }\n\n  // When a new layout is created, reset the data limits cache\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n\n  // These methods are ordered by lifecycle. Utilities then follow.\n  // Any function defined here is inherited by all scale types.\n  // Any function can be extended by the scale type\n\n  beforeUpdate() {\n    call(this.options.beforeUpdate, [this]);\n  }\n\n  /**\n\t * @param {number} maxWidth - the max width in pixels\n\t * @param {number} maxHeight - the max height in pixels\n\t * @param {{top: number, left: number, bottom: number, right: number}} margins - the space between the edge of the other scales and edge of the chart\n\t *   This space comes from two sources:\n\t *     - padding - space that's required to show the labels at the edges of the scale\n\t *     - thickness of scales or legends in another orientation\n\t */\n  update(maxWidth, maxHeight, margins) {\n    const {beginAtZero, grace, ticks: tickOpts} = this.options;\n    const sampleSize = tickOpts.sampleSize;\n\n    // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n    this.beforeUpdate();\n\n    // Absorb the master measurements\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n\n    this.ticks = null;\n    this._labelSizes = null;\n    this._gridLineItems = null;\n    this._labelItems = null;\n\n    // Dimensions\n    this.beforeSetDimensions();\n    this.setDimensions();\n    this.afterSetDimensions();\n\n    this._maxLength = this.isHorizontal()\n      ? this.width + margins.left + margins.right\n      : this.height + margins.top + margins.bottom;\n\n    // Data min/max\n    if (!this._dataLimitsCached) {\n      this.beforeDataLimits();\n      this.determineDataLimits();\n      this.afterDataLimits();\n      this._range = _addGrace(this, grace, beginAtZero);\n      this._dataLimitsCached = true;\n    }\n\n    this.beforeBuildTicks();\n\n    this.ticks = this.buildTicks() || [];\n\n    // Allow modification of ticks in callback.\n    this.afterBuildTicks();\n\n    // Compute tick rotation and fit using a sampled subset of labels\n    // We generally don't need to compute the size of every single label for determining scale size\n    const samplingEnabled = sampleSize < this.ticks.length;\n    this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n\n    // configure is called twice, once here, once from core.controller.updateLayout.\n    // Here we haven't been positioned yet, but dimensions are correct.\n    // Variables set in configure are needed for calculateLabelRotation, and\n    // it's ok that coordinates are not correct there, only dimensions matter.\n    this.configure();\n\n    // Tick Rotation\n    this.beforeCalculateLabelRotation();\n    this.calculateLabelRotation(); // Preconditions: number of ticks and sizes of largest labels must be calculated beforehand\n    this.afterCalculateLabelRotation();\n\n    // Auto-skip\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      this.ticks = autoSkip(this, this.ticks);\n      this._labelSizes = null;\n      this.afterAutoSkip();\n    }\n\n    if (samplingEnabled) {\n      // Generate labels using all non-skipped ticks\n      this._convertTicksToLabels(this.ticks);\n    }\n\n    this.beforeFit();\n    this.fit(); // Preconditions: label rotation and label sizes must be calculated beforehand\n    this.afterFit();\n\n    // IMPORTANT: after this point, we consider that `this.ticks` will NEVER change!\n\n    this.afterUpdate();\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    let reversePixels = this.options.reverse;\n    let startPixel, endPixel;\n\n    if (this.isHorizontal()) {\n      startPixel = this.left;\n      endPixel = this.right;\n    } else {\n      startPixel = this.top;\n      endPixel = this.bottom;\n      // by default vertical scales are from bottom to top, so pixels are reversed\n      reversePixels = !reversePixels;\n    }\n    this._startPixel = startPixel;\n    this._endPixel = endPixel;\n    this._reversePixels = reversePixels;\n    this._length = endPixel - startPixel;\n    this._alignToPixels = this.options.alignToPixels;\n  }\n\n  afterUpdate() {\n    call(this.options.afterUpdate, [this]);\n  }\n\n  //\n\n  beforeSetDimensions() {\n    call(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    // Set the unconstrained dimension before label rotation\n    if (this.isHorizontal()) {\n      // Reset position before calculating rotation\n      this.width = this.maxWidth;\n      this.left = 0;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n\n      // Reset position before calculating rotation\n      this.top = 0;\n      this.bottom = this.height;\n    }\n\n    // Reset padding\n    this.paddingLeft = 0;\n    this.paddingTop = 0;\n    this.paddingRight = 0;\n    this.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    call(this.options.afterSetDimensions, [this]);\n  }\n\n  _callHooks(name) {\n    this.chart.notifyPlugins(name, this.getContext());\n    call(this.options[name], [this]);\n  }\n\n  // Data limits\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n\n  //\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  /**\n\t * @return {object[]} the ticks\n\t */\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n\n  beforeTickToLabelConversion() {\n    call(this.options.beforeTickToLabelConversion, [this]);\n  }\n  /**\n\t * Convert ticks to label strings\n\t * @param {Tick[]} ticks\n\t */\n  generateTickLabels(ticks) {\n    const tickOpts = this.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = call(tickOpts.callback, [tick.value, i, ticks], this);\n    }\n  }\n  afterTickToLabelConversion() {\n    call(this.options.afterTickToLabelConversion, [this]);\n  }\n\n  //\n\n  beforeCalculateLabelRotation() {\n    call(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const options = this.options;\n    const tickOpts = options.ticks;\n    const numTicks = getTicksLimit(this.ticks.length, options.ticks.maxTicksLimit);\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n\n    if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n      this.labelRotation = minRotation;\n      return;\n    }\n\n    const labelSizes = this._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n\n    // Estimate the width of each grid based on the canvas width, the maximum\n    // label width and the number of tick intervals\n    const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n    tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n\n    // Allow 3 pixels x2 padding either side for label readability\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = this.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)),\n        Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n\n    this.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    call(this.options.afterCalculateLabelRotation, [this]);\n  }\n  afterAutoSkip() {}\n\n  //\n\n  beforeFit() {\n    call(this.options.beforeFit, [this]);\n  }\n  fit() {\n    // Reset\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = this;\n    const display = this._isVisible();\n    const isHorizontal = this.isHorizontal();\n\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = this.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = this.maxHeight; // fill all the height\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n\n      // Don't bother fitting the ticks if we are not showing the labels\n      if (tickOpts.display && this.ticks.length) {\n        const {first, last, widest, highest} = this._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(this.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n\n        if (isHorizontal) {\n        // A horizontal axis is more constrained by the height.\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n        // A vertical axis is more constrained by the width. Labels are the\n        // dominant factor here, so get that length first and account for padding\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n\n          minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        this._calculatePadding(first, last, sin, cos);\n      }\n    }\n\n    this._handleMargins();\n\n    if (isHorizontal) {\n      this.width = this._length = chart.width - this._margins.left - this._margins.right;\n      this.height = minSize.height;\n    } else {\n      this.width = minSize.width;\n      this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n    }\n  }\n\n  _calculatePadding(first, last, sin, cos) {\n    const {ticks: {align, padding}, position} = this.options;\n    const isRotated = this.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n\n    if (this.isHorizontal()) {\n      const offsetLeft = this.getPixelForTick(0) - this.left;\n      const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n\n      // Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n      // which means that the right padding is dominated by the font height\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else if (align !== 'inner') {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n\n      // Adjust padding taking into account changes in offsets\n      this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n      this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n\n      this.paddingTop = paddingTop + padding;\n      this.paddingBottom = paddingBottom + padding;\n    }\n  }\n\n  /**\n\t * Handle margins and padding interactions\n\t * @private\n\t */\n  _handleMargins() {\n    if (this._margins) {\n      this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n      this._margins.top = Math.max(this.paddingTop, this._margins.top);\n      this._margins.right = Math.max(this.paddingRight, this._margins.right);\n      this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n    }\n  }\n\n  afterFit() {\n    call(this.options.afterFit, [this]);\n  }\n\n  // Shared Methods\n  /**\n\t * @return {boolean}\n\t */\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  /**\n\t * @return {boolean}\n\t */\n  isFullSize() {\n    return this.options.fullSize;\n  }\n\n  /**\n\t * @param {Tick[]} ticks\n\t * @private\n\t */\n  _convertTicksToLabels(ticks) {\n    this.beforeTickToLabelConversion();\n\n    this.generateTickLabels(ticks);\n\n    // Ticks should be skipped when callback returns null or undef, so lets remove those.\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n\n    this.afterTickToLabelConversion();\n  }\n\n  /**\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\n\t * @private\n\t */\n  _getLabelSizes() {\n    let labelSizes = this._labelSizes;\n\n    if (!labelSizes) {\n      const sampleSize = this.options.ticks.sampleSize;\n      let ticks = this.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n\n      this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length, this.options.ticks.maxTicksLimit);\n    }\n\n    return labelSizes;\n  }\n\n  /**\n\t * Returns {width, height, offset} objects for the first, last, widest, highest tick\n\t * labels where offset indicates the anchor point offset from the top in pixels.\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\n\t * @private\n\t */\n  _computeLabelSizes(ticks, length, maxTicksLimit) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    const increment = Math.floor(length / getTicksLimit(length, maxTicksLimit));\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n\n    for (i = 0; i < length; i += increment) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      // Undefined labels and arrays should not be measured\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        // if it is an array let's measure each element\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = /** @type {string} */ (label[j]);\n          // Undefined labels and arrays should not be measured\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n\n  /**\n\t * Used to get the label to display in the tooltip for the given value\n\t * @param {*} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    return value;\n  }\n\n  /**\n\t * Returns the location of the given data point. Value can either be an index or a numerical value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {*} value\n\t * @param {number} [index]\n\t * @return {number}\n\t */\n  getPixelForValue(value, index) { // eslint-disable-line no-unused-vars\n    return NaN;\n  }\n\n  /**\n\t * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} pixel\n\t * @return {*}\n\t */\n  getValueForPixel(pixel) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Returns the location of the tick at the given index\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} index\n\t * @return {number}\n\t */\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  /**\n\t * Utility for getting the pixel location of a percentage of scale\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} decimal\n\t * @return {number}\n\t */\n  getPixelForDecimal(decimal) {\n    if (this._reversePixels) {\n      decimal = 1 - decimal;\n    }\n\n    const pixel = this._startPixel + decimal * this._length;\n    return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n\n  /**\n\t * Returns the pixel for the minimum chart value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @return {number}\n\t */\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n\n  /**\n\t * @return {number}\n\t */\n  getBaseValue() {\n    const {min, max} = this;\n\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext(index) {\n    const ticks = this.ticks || [];\n\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(this.getContext(), index, tick));\n    }\n    return this.$context ||\n\t\t\t(this.$context = createScaleContext(this.chart.getContext(), this));\n  }\n\n  /**\n\t * @return {number}\n\t * @private\n\t */\n  _tickSize() {\n    const optionTicks = this.options.ticks;\n\n    // Calculate space needed by label in axis direction.\n    const rot = toRadians(this.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n\n    const labelSizes = this._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n\n    // Calculate space needed for 1 tick in axis direction.\n    return this.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n\n  /**\n\t * @return {boolean}\n\t * @private\n\t */\n  _isVisible() {\n    const display = this.options.display;\n\n    if (display !== 'auto') {\n      return !!display;\n    }\n\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeGridLineItems(chartArea) {\n    const axis = this.axis;\n    const chart = this.chart;\n    const options = this.options;\n    const {grid, position, border} = options;\n    const offset = grid.offset;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = borderOpts.display ? borderOpts.width : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n\n    if (position === 'top') {\n      borderValue = alignBorderValue(this.bottom);\n      ty1 = this.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(this.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = this.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(this.right);\n      tx1 = this.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(this.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = this.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n    for (i = 0; i < ticksLength; i += step) {\n      const context = this.getContext(i);\n      const optsAtIndex = grid.setContext(context);\n      const optsAtIndexBorder = border.setContext(context);\n\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = optsAtIndexBorder.dash || [];\n      const borderDashOffset = optsAtIndexBorder.dashOffset;\n\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n\n      lineValue = getPixelForGridLine(this, i, offset);\n\n      // Skip if the pixel is out of the range\n      if (lineValue === undefined) {\n        continue;\n      }\n\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n\n    this._ticksLength = ticksLength;\n    this._borderValue = borderValue;\n\n    return items;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeLabelItems(chartArea) {\n    const axis = this.axis;\n    const options = this.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(this.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n\n    if (position === 'top') {\n      y = this.bottom - hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = this.top + hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = this.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n    }\n\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n\n    const labelSizes = this._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n\n      const optsAtIndex = optionTicks.setContext(this.getContext(i));\n      pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n      font = this._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      let tickTextAlign = textAlign;\n\n      if (isHorizontal) {\n        x = pixel;\n\n        if (textAlign === 'inner') {\n          if (i === ilen - 1) {\n            tickTextAlign = !this.options.reverse ? 'right' : 'left';\n          } else if (i === 0) {\n            tickTextAlign = !this.options.reverse ? 'left' : 'right';\n          } else {\n            tickTextAlign = 'center';\n          }\n        }\n\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          // eslint-disable-next-line no-lonely-if\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n        if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n          x += (lineHeight / 2) * Math.sin(rotation);\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n\n      let backdrop;\n\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n\n        let top = textOffset - labelPadding.top;\n        let left = 0 - labelPadding.left;\n\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        default:\n          break;\n        }\n\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        case 'inner':\n          if (i === ilen - 1) {\n            left -= width;\n          } else if (i > 0) {\n            left -= width / 2;\n          }\n          break;\n        default:\n          break;\n        }\n\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n\n          color: optsAtIndex.backdropColor,\n        };\n      }\n\n      items.push({\n        label,\n        font,\n        textOffset,\n        options: {\n          rotation,\n          color,\n          strokeColor,\n          strokeWidth,\n          textAlign: tickTextAlign,\n          textBaseline,\n          translation: [x, y],\n          backdrop,\n        }\n      });\n    }\n\n    return items;\n  }\n\n  _getXAxisLabelAlignment() {\n    const {position, ticks} = this.options;\n    const rotation = -toRadians(this.labelRotation);\n\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n\n    let align = 'center';\n\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    } else if (ticks.align === 'inner') {\n      align = 'inner';\n    }\n\n    return align;\n  }\n\n  _getYAxisLabelAlignment(tl) {\n    const {position, ticks: {crossAlign, mirror, padding}} = this.options;\n    const labelSizes = this._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n\n    let textAlign;\n    let x;\n\n    if (position === 'left') {\n      if (mirror) {\n        x = this.right + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += (widest / 2);\n        } else {\n          textAlign = 'right';\n          x += widest;\n        }\n      } else {\n        x = this.right - tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = this.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        x = this.left + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x -= widest;\n        }\n      } else {\n        x = this.left + tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = this.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n\n    return {textAlign, x};\n  }\n\n  /**\n\t * @private\n\t */\n  _computeLabelArea() {\n    if (this.options.ticks.mirror) {\n      return;\n    }\n\n    const chart = this.chart;\n    const position = this.options.position;\n\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: this.left, bottom: chart.height, right: this.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: this.top, left: 0, bottom: this.bottom, right: chart.width};\n    }\n  }\n\n  /**\n   * @protected\n   */\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n\n  getLineWidthForValue(value) {\n    const grid = this.options.grid;\n    if (!this._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = this.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(this.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n\n  /**\n\t * @protected\n\t */\n  drawGrid(chartArea) {\n    const grid = this.options.grid;\n    const ctx = this.ctx;\n    const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n    let i, ilen;\n\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBorder() {\n    const {chart, ctx, options: {border, grid}} = this;\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = border.display ? borderOpts.width : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n    const borderValue = this._borderValue;\n    let x1, x2, y1, y2;\n\n    if (this.isHorizontal()) {\n      x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.width;\n    ctx.strokeStyle = borderOpts.color;\n\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n\n    ctx.restore();\n  }\n\n  /**\n\t * @protected\n\t */\n  drawLabels(chartArea) {\n    const optionTicks = this.options.ticks;\n\n    if (!optionTicks.display) {\n      return;\n    }\n\n    const ctx = this.ctx;\n\n    const area = this._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n\n    const items = this.getLabelItems(chartArea);\n    for (const item of items) {\n      const renderTextOptions = item.options;\n      const tickFont = item.font;\n      const label = item.label;\n      const y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n    }\n\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n\n    if (!title.display) {\n      return;\n    }\n\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n\n  draw(chartArea) {\n    if (!this._isVisible()) {\n      return;\n    }\n\n    this.drawBackground();\n    this.drawGrid(chartArea);\n    this.drawBorder();\n    this.drawTitle();\n    this.drawLabels(chartArea);\n  }\n\n  /**\n\t * @return {object[]}\n\t * @private\n\t */\n  _layers() {\n    const opts = this.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n    const bz = valueOrDefault(opts.border && opts.border.z, 0);\n\n    if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n      // backward compatibility: draw has been overridden by custom scale\n      return [{\n        z: tz,\n        draw: (chartArea) => {\n          this.draw(chartArea);\n        }\n      }];\n    }\n\n    return [{\n      z: gz,\n      draw: (chartArea) => {\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawTitle();\n      }\n    }, {\n      z: bz,\n      draw: () => {\n        this.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw: (chartArea) => {\n        this.drawLabels(chartArea);\n      }\n    }];\n  }\n\n  /**\n\t * Returns visible dataset metas that are attached to this scale\n\t * @param {string} [type] - if specified, also filter by dataset type\n\t * @return {object[]}\n\t */\n  getMatchingVisibleMetas(type) {\n    const metas = this.chart.getSortedVisibleDatasetMetas();\n    const axisID = this.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === this.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n\n  /**\n\t * @param {number} index\n\t * @return {object}\n\t * @protected\n \t */\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n\n  /**\n   * @protected\n   */\n  _maxDigits() {\n    const fontSize = this._resolveTickFontOptions(0).lineHeight;\n    return (this.isHorizontal() ? this.width : this.height) / fontSize;\n  }\n}\n", "import {merge} from '../helpers/index.js';\nimport defaults, {overrides} from './core.defaults.js';\n\n/**\n * @typedef {{id: string, defaults: any, overrides?: any, defaultRoutes: any}} IChartComponent\n */\n\nexport default class TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n\n  /**\n\t * @param {IChartComponent} item\n\t * @returns {string} The scope where items defaults were registered to.\n\t */\n  register(item) {\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n\n    if (isIChartComponent(proto)) {\n      // Make sure the parent is registered and note the scope where its defaults are.\n      parentScope = this.register(proto);\n    }\n\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope + '.' + id;\n\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n\n    if (id in items) {\n      // already registered\n      return scope;\n    }\n\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (this.override) {\n      defaults.override(item.id, item.overrides);\n    }\n\n    return scope;\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {object?}\n\t */\n  get(id) {\n    return this.items[id];\n  }\n\n  /**\n\t * @param {IChartComponent} item\n\t */\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n\n    if (id in items) {\n      delete items[id];\n    }\n\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\n\nfunction registerDefaults(item, scope, parentScope) {\n  // Inherit the parent's defaults and keep existing defaults\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n\n  defaults.set(scope, itemDefaults);\n\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\n\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\n\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n", "import DatasetController from './core.datasetController.js';\nimport Element from './core.element.js';\nimport Scale from './core.scale.js';\nimport TypedRegistry from './core.typedRegistry.js';\nimport {each, callback as call, _capitalize} from '../helpers/helpers.core.js';\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is exported for typedoc\n */\nexport class Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    // Order is important, Scale has Element in prototype chain,\n    // so Scales must be before Elements. Plugins are a fallback, so not listed here.\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  add(...args) {\n    this._each('register', args);\n  }\n\n  remove(...args) {\n    this._each('unregister', args);\n  }\n\n  /**\n\t * @param  {...typeof DatasetController} args\n\t */\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n\n  /**\n\t * @param  {...typeof Element} args\n\t */\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n\n  /**\n\t * @param  {...typeof Scale} args\n\t */\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof DatasetController}\n\t */\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof Element}\n\t */\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {object}\n\t */\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof Scale}\n\t */\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n\n  /**\n\t * @param  {...typeof DatasetController} args\n\t */\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n\n  /**\n\t * @param  {...typeof Element} args\n\t */\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n\n  /**\n\t * @param  {...typeof Scale} args\n\t */\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n\n  /**\n\t * @private\n\t */\n  _each(method, args, typedRegistry) {\n    [...args].forEach(arg => {\n      const reg = typedRegistry || this._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === this.plugins && arg.id)) {\n        this._exec(method, reg, arg);\n      } else {\n        // Handle loopable args\n        // Use case:\n        //  import * as plugins from './plugins.js';\n        //  Chart.register(plugins);\n        each(arg, item => {\n          // If there are mixed types in the loopable, make sure those are\n          // registered in correct registry\n          // Use case: (treemap exporting controller, elements etc)\n          //  import * as treemap from 'chartjs-chart-treemap.js';\n          //  Chart.register(treemap);\n\n          const itemReg = typedRegistry || this._getRegistryForType(item);\n          this._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    call(component['before' + camelMethod], [], component); // beforeRegister / beforeUnregister\n    registry[method](component);\n    call(component['after' + camelMethod], [], component); // afterRegister / afterUnregister\n  }\n\n  /**\n\t * @private\n\t */\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    // plugins is the fallback registry\n    return this.plugins;\n  }\n\n  /**\n\t * @private\n\t */\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Registry();\n", "import registry from './core.registry.js';\nimport {callback as callCallback, isNullOrUndef, valueOrDefault} from '../helpers/helpers.core.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../plugins/plugin.tooltip.js').default } Tooltip\n */\n\n/**\n * @callback filterCallback\n * @param {{plugin: object, options: object}} value\n * @param {number} [index]\n * @param {array} [array]\n * @param {object} [thisArg]\n * @return {boolean}\n */\n\n\nexport default class PluginService {\n  constructor() {\n    this._init = [];\n  }\n\n  /**\n\t * Calls enabled plugins for `chart` on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {Chart} chart - The chart instance for which plugins should be called.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {object} [args] - Extra arguments to apply to the hook call.\n   * @param {filterCallback} [filter] - Filtering function for limiting which plugins are notified\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n  notify(chart, hook, args, filter) {\n    if (hook === 'beforeInit') {\n      this._init = this._createDescriptors(chart, true);\n      this._notify(this._init, chart, 'install');\n    }\n\n    const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n    const result = this._notify(descriptors, chart, hook, args);\n\n    if (hook === 'afterDestroy') {\n      this._notify(descriptors, chart, 'stop');\n      this._notify(this._init, chart, 'uninstall');\n    }\n    return result;\n  }\n\n  /**\n\t * @private\n\t */\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callCallback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  invalidate() {\n    // When plugins are registered, there is the possibility of a double\n    // invalidate situation. In this case, we only want to invalidate once.\n    // If we invalidate multiple times, the `_oldCache` is lost and all of the\n    // plugins are restarted without being correctly stopped.\n    // See https://github.com/chartjs/Chart.js/issues/8147\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @private\n\t */\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n\n    const descriptors = this._cache = this._createDescriptors(chart);\n\n    this._notifyStateChanges(chart);\n\n    return descriptors;\n  }\n\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    // options === false => all plugins are disabled\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @private\n\t */\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\n\n/**\n * @param {import('./core.config.js').default} config\n */\nfunction allPlugins(config) {\n  const localIds = {};\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n      localIds[plugin.id] = true;\n    }\n  }\n\n  return {plugins, localIds};\n}\n\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\n\nfunction createDescriptors(chart, {plugins, localIds}, options, all) {\n  const result = [];\n  const context = chart.getContext();\n\n  for (const plugin of plugins) {\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, {plugin, local: localIds[id]}, opts, context)\n    });\n  }\n\n  return result;\n}\n\nfunction pluginOpts(config, {plugin, local}, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  if (local && plugin.defaults) {\n    // make sure plugin defaults are in scopes for local (not registered) plugins\n    scopes.push(plugin.defaults);\n  }\n  return config.createResolver(scopes, context, [''], {\n    // These are just defaults that plugins can override\n    scriptable: false,\n    indexable: false,\n    allKeys: true\n  });\n}\n", "import defaults, {overrides, descriptors} from './core.defaults.js';\nimport {mergeIf, resolveObjectKey, isArray, isFunction, valueOrDefault, isObject} from '../helpers/helpers.core.js';\nimport {_attachContext, _createResolver, _descriptors} from '../helpers/helpers.config.js';\n\nexport function getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\n\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\n\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\n\nfunction idMatchesAxis(id) {\n  if (id === 'x' || id === 'y' || id === 'r') {\n    return id;\n  }\n}\n\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\n\nexport function determineAxis(id, ...scaleOptions) {\n  if (idMatchesAxis(id)) {\n    return id;\n  }\n  for (const opts of scaleOptions) {\n    const axis = opts.axis\n      || axisFromPosition(opts.position)\n      || id.length > 1 && idMatchesAxis(id[0].toLowerCase());\n    if (axis) {\n      return axis;\n    }\n  }\n  throw new Error(`Cannot determine type of '${id}' axis. Please provide 'axis' or 'position' option.`);\n}\n\nfunction getAxisFromDataset(id, axis, dataset) {\n  if (dataset[axis + 'AxisID'] === id) {\n    return {axis};\n  }\n}\n\nfunction retrieveAxisFromDatasets(id, config) {\n  if (config.data && config.data.datasets) {\n    const boundDs = config.data.datasets.filter((d) => d.xAxisID === id || d.yAxisID === id);\n    if (boundDs.length) {\n      return getAxisFromDataset(id, 'x', boundDs[0]) || getAxisFromDataset(id, 'y', boundDs[0]);\n    }\n  }\n  return {};\n}\n\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const scales = Object.create(null);\n\n  // First figure out first scale id's per axis.\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    if (!isObject(scaleConf)) {\n      return console.error(`Invalid scale configuration for scale: ${id}`);\n    }\n    if (scaleConf._proxy) {\n      return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n    }\n    const axis = determineAxis(id, scaleConf, retrieveAxisFromDatasets(id, config), defaults.scales[scaleConf.type]);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n\n  // Then merge dataset defaults to scale configs\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n\n  // apply scale defaults, if not overridden by dataset defaults\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n\n  return scales;\n}\n\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\n\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\n\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n\n  initOptions(config);\n\n  return config;\n}\n\nconst keyCache = new Map();\nconst keysCached = new Set();\n\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\n\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\n\nexport default class Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n\n  get platform() {\n    return this._config.platform;\n  }\n\n  get type() {\n    return this._config.type;\n  }\n\n  set type(type) {\n    this._config.type = type;\n  }\n\n  get data() {\n    return this._config.data;\n  }\n\n  set data(data) {\n    this._config.data = initData(data);\n  }\n\n  get options() {\n    return this._config.options;\n  }\n\n  set options(options) {\n    this._config.options = options;\n  }\n\n  get plugins() {\n    return this._config.plugins;\n  }\n\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n\n  /**\n   * Returns the option scope keys for resolving dataset options.\n   * These keys do not include the dataset itself, because it is not under options.\n   * @param {string} datasetType\n   * @return {string[][]}\n   */\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n\n  /**\n   * Returns the option scope keys for resolving dataset animation options.\n   * These keys do not include the dataset itself, because it is not under options.\n   * @param {string} datasetType\n   * @param {string} transition\n   * @return {string[][]}\n   */\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        // The following are used for looking up the `animations` and `animation` keys\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n\n  /**\n   * Returns the options scope keys for resolving element options that belong\n   * to an dataset. These keys do not include the dataset itself, because it\n   * is not under options.\n   * @param {string} datasetType\n   * @param {string} elementType\n   * @return {string[][]}\n   */\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n\n  /**\n   * Returns the options scope keys for resolving plugin options.\n   * @param {{id: string, additionalOptionScopes?: string[]}} plugin\n   * @return {string[][]}\n   */\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n\n  /**\n   * @private\n   */\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n\n  /**\n   * Resolves the objects from options and defaults for option value resolution.\n   * @param {object} mainScope - The main scope object for options\n   * @param {string[][]} keyLists - The arrays of keys in resolution order\n   * @param {boolean} [resetCache] - reset the cache for this mainScope\n   */\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n\n    const scopes = new Set();\n\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n\n    const array = Array.from(scopes);\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n\n  /**\n   * Returns the option scopes for resolving chart options\n   * @return {object[]}\n   */\n  chartOptionScopes() {\n    const {options, type} = this;\n\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {}, // https://github.com/chartjs/Chart.js/issues/8531\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n\n  /**\n   * @param {object[]} scopes\n   * @param {string[]} names\n   * @param {function|object} context\n   * @param {string[]} [prefixes]\n   * @return {object}\n   */\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      // subResolver is passed to scriptable options. It should not resolve to hover options.\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n\n  /**\n   * @param {object[]} scopes\n   * @param {object} [context]\n   * @param {string[]} [prefixes]\n   * @param {{scriptable: boolean, indexable: boolean, allKeys?: boolean}} [descriptorDefaults]\n   */\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\n\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\n\nconst hasFunction = value => isObject(value)\n  && Object.getOwnPropertyNames(value).some((key) => isFunction(value[key]));\n\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n\n  for (const prop of names) {\n    const scriptable = isScriptable(prop);\n    const indexable = isIndexable(prop);\n    const value = (indexable || scriptable) && proxy[prop];\n    if ((scriptable && (isFunction(value) || hasFunction(value)))\n      || (indexable && isArray(value))) {\n      return true;\n    }\n  }\n  return false;\n}\n", "import animator from './core.animator.js';\nimport defaults, {overrides} from './core.defaults.js';\nimport Interaction from './core.interaction.js';\nimport layouts from './core.layouts.js';\nimport {_detectPlatform} from '../platform/index.js';\nimport PluginService from './core.plugins.js';\nimport registry from './core.registry.js';\nimport Config, {determineAxis, getIndexAxis} from './core.config.js';\nimport {each, callback as callCallback, uid, valueOrDefault, _elementsEqual, isNullOrUndef, setsEqual, defined, isFunction, _isClickEvent} from '../helpers/helpers.core.js';\nimport {clearCanvas, clipArea, createContext, unclipArea, _isPointInArea, _isDomSupported, retinaScale, getDatasetClipArea} from '../helpers/index.js';\n// @ts-ignore\nimport {version} from '../../package.json';\nimport {debounce} from '../helpers/helpers.extras.js';\n\n/**\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../types/index.js').Point } Point\n */\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\n\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\n\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n\n  chart.notifyPlugins('afterRender');\n  callCallback(animationOptions && animationOptions.onComplete, [context], chart);\n}\n\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callCallback(animationOptions && animationOptions.onProgress, [context], chart);\n}\n\n/**\n * Chart.js can take a string id of a canvas element, a 2d context, or a canvas element itself.\n * Attempt to unwrap the item passed into the chart constructor so that it is a canvas element (if possible).\n */\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    // Support for array based queries (such as jQuery)\n    item = item[0];\n  }\n\n  if (item && item.canvas) {\n    // Support for any object associated to a canvas (including a context2d)\n    item = item.canvas;\n  }\n  return item;\n}\n\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\n\nfunction moveNumericKeys(obj, start, move) {\n  const keys = Object.keys(obj);\n  for (const key of keys) {\n    const intKey = +key;\n    if (intKey >= start) {\n      const value = obj[key];\n      delete obj[key];\n      if (move > 0 || intKey > start) {\n        obj[intKey + move] = value;\n      }\n    }\n  }\n}\n\n/**\n * @param {ChartEvent} e\n * @param {ChartEvent|null} lastEvent\n * @param {boolean} inChartArea\n * @param {boolean} isClick\n * @returns {ChartEvent|null}\n */\nfunction determineLastEvent(e, lastEvent, inChartArea, isClick) {\n  if (!inChartArea || e.type === 'mouseout') {\n    return null;\n  }\n  if (isClick) {\n    return lastEvent;\n  }\n  return e;\n}\n\nclass Chart {\n\n  static defaults = defaults;\n  static instances = instances;\n  static overrides = overrides;\n  static registry = registry;\n  static version = version;\n  static getChart = getChart;\n\n  static register(...items) {\n    registry.add(...items);\n    invalidatePlugins();\n  }\n\n  static unregister(...items) {\n    registry.remove(...items);\n    invalidatePlugins();\n  }\n\n  // eslint-disable-next-line max-statements\n  constructor(item, userConfig) {\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.'\n      );\n    }\n\n    const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    this.platform.updateConfig(config);\n\n    const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    // Store the previously used aspect ratio to determine if a resize\n    // is needed during updates. Do this after _options is set since\n    // aspectRatio uses a getter\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    /** @type {?{attach?: function, detach?: function, resize?: function}} */\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(mode => this.update(mode), options.resizeDelay || 0);\n    this._dataChanges = [];\n\n    // Add the chart instance to the global namespace\n    instances[this.id] = this;\n\n    if (!context || !canvas) {\n      // The given item is not a compatible context2d element, let's return before finalizing\n      // the chart initialization but after setting basic chart / controller properties that\n      // can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n      // https://github.com/chartjs/Chart.js/issues/2807\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n\n    animator.listen(this, 'complete', onAnimationsComplete);\n    animator.listen(this, 'progress', onAnimationProgress);\n\n    this._initialize();\n    if (this.attached) {\n      this.update();\n    }\n  }\n\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      // If aspectRatio is defined in options, use that.\n      return aspectRatio;\n    }\n\n    if (maintainAspectRatio && _aspectRatio) {\n      // If maintainAspectRatio is truthly and we had previously determined _aspectRatio, use that\n      return _aspectRatio;\n    }\n\n    // Calculate\n    return height ? width / height : null;\n  }\n\n  get data() {\n    return this.config.data;\n  }\n\n  set data(data) {\n    this.config.data = data;\n  }\n\n  get options() {\n    return this._options;\n  }\n\n  set options(options) {\n    this.config.options = options;\n  }\n\n  get registry() {\n    return registry;\n  }\n\n  /**\n\t * @private\n\t */\n  _initialize() {\n    // Before init plugin notification\n    this.notifyPlugins('beforeInit');\n\n    if (this.options.responsive) {\n      this.resize();\n    } else {\n      retinaScale(this, this.options.devicePixelRatio);\n    }\n\n    this.bindEvents();\n\n    // After init plugin notification\n    this.notifyPlugins('afterInit');\n\n    return this;\n  }\n\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n\n  /**\n\t * Resize the chart to its container or to explicit dimensions.\n\t * @param {number} [width]\n\t * @param {number} [height]\n\t */\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n\n  _resize(width, height) {\n    const options = this.options;\n    const canvas = this.canvas;\n    const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n    const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n    const mode = this.width ? 'resize' : 'attach';\n\n    this.width = newSize.width;\n    this.height = newSize.height;\n    this._aspectRatio = this.aspectRatio;\n    if (!retinaScale(this, newRatio, true)) {\n      return;\n    }\n\n    this.notifyPlugins('resize', {size: newSize});\n\n    callCallback(options.onResize, [this, newSize], this);\n\n    if (this.attached) {\n      if (this._doResize(mode)) {\n        // The resize update is delayed, only draw without updating.\n        this.render();\n      }\n    }\n  }\n\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n\n  /**\n\t * Builds a map of scale ID to scale object for future lookup.\n\t */\n  buildOrUpdateScales() {\n    const options = this.options;\n    const scaleOpts = options.scales;\n    const scales = this.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: this.ctx,\n          chart: this\n        });\n        scales[scale.id] = scale;\n      }\n\n      scale.init(scaleOptions, options);\n    });\n    // clear up discarded scales\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n\n    each(scales, (scale) => {\n      layouts.configure(this, scale, scale.options);\n      layouts.addBox(this, scale);\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _updateMetasets() {\n    const metasets = this._metasets;\n    const numData = this.data.datasets.length;\n    const numMeta = metasets.length;\n\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n\n  /**\n\t * @private\n\t */\n  _removeUnreferencedMetasets() {\n    const {_metasets: metasets, data: {datasets}} = this;\n    if (metasets.length > datasets.length) {\n      delete this._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        this._destroyDatasetMeta(index);\n      }\n    });\n  }\n\n  buildOrUpdateControllers() {\n    const newControllers = [];\n    const datasets = this.data.datasets;\n    let i, ilen;\n\n    this._removeUnreferencedMetasets();\n\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = this.getDatasetMeta(i);\n      const type = dataset.type || this.config.type;\n\n      if (meta.type && meta.type !== type) {\n        this._destroyDatasetMeta(i);\n        meta = this.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = this.isDatasetVisible(i);\n\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(this, i);\n        newControllers.push(meta.controller);\n      }\n    }\n\n    this._updateMetasets();\n    return newControllers;\n  }\n\n  /**\n\t * Reset the elements of all datasets\n\t * @private\n\t */\n  _resetElements() {\n    each(this.data.datasets, (dataset, datasetIndex) => {\n      this.getDatasetMeta(datasetIndex).controller.reset();\n    }, this);\n  }\n\n  /**\n\t* Resets the chart back to its state before the initial animation\n\t*/\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n\n  update(mode) {\n    const config = this.config;\n\n    config.update();\n    const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    const animsDisabled = this._animationsDisabled = !options.animation;\n\n    this._updateScales();\n    this._checkEventBindings();\n    this._updateHiddenIndices();\n\n    // plugins options references might have change, let's invalidate the cache\n    // https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n    this._plugins.invalidate();\n\n    if (this.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n\n    // Make sure dataset controllers are updated and new controllers are reset\n    const newControllers = this.buildOrUpdateControllers();\n\n    this.notifyPlugins('beforeElementsUpdate');\n\n    // Make sure all dataset controllers have correct meta data counts\n    let minPadding = 0;\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n      const {controller} = this.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      // New controllers will be reset after the layout pass, so we only want to modify\n      // elements added to new datasets\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n    this._updateLayout(minPadding);\n\n    // Only reset the controllers if we have animations\n    if (!animsDisabled) {\n      // Can only reset the new controllers after the scales have been updated\n      // Reset is done to get the starting point for the initial animation\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n\n    this._updateDatasets(mode);\n\n    // Do this before render so that any plugins that need final scale updates can use it\n    this.notifyPlugins('afterUpdate', {mode});\n\n    this._layers.sort(compare2Level('z', '_idx'));\n\n    // Replay last event from before update, or set hover styles on active elements\n    const {_active, _lastEvent} = this;\n    if (_lastEvent) {\n      this._eventHandler(_lastEvent, true);\n    } else if (_active.length) {\n      this._updateHoverStyles(_active, _active, true);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  _updateScales() {\n    each(this.scales, (scale) => {\n      layouts.removeBox(this, scale);\n    });\n\n    this.ensureScalesHaveIDs();\n    this.buildOrUpdateScales();\n  }\n\n  /**\n   * @private\n   */\n  _checkEventBindings() {\n    const options = this.options;\n    const existingEvents = new Set(Object.keys(this._listeners));\n    const newEvents = new Set(options.events);\n\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n      // The configured events have changed. Rebind.\n      this.unbindEvents();\n      this.bindEvents();\n    }\n  }\n\n  /**\n   * @private\n   */\n  _updateHiddenIndices() {\n    const {_hiddenIndices} = this;\n    const changes = this._getUniformDataChanges() || [];\n    for (const {method, start, count} of changes) {\n      const move = method === '_removeElements' ? -count : count;\n      moveNumericKeys(_hiddenIndices, start, move);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _getUniformDataChanges() {\n    const _dataChanges = this._dataChanges;\n    if (!_dataChanges || !_dataChanges.length) {\n      return;\n    }\n\n    this._dataChanges = [];\n    const datasetCount = this.data.datasets.length;\n    const makeSet = (idx) => new Set(\n      _dataChanges\n        .filter(c => c[0] === idx)\n        .map((c, i) => i + ',' + c.splice(1).join(','))\n    );\n\n    const changeSet = makeSet(0);\n    for (let i = 1; i < datasetCount; i++) {\n      if (!setsEqual(changeSet, makeSet(i))) {\n        return;\n      }\n    }\n    return Array.from(changeSet)\n      .map(c => c.split(','))\n      .map(a => ({method: a[1], start: +a[2], count: +a[3]}));\n  }\n\n  /**\n\t * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n\t * hook, in which case, plugins will not be called on `afterLayout`.\n\t * @private\n\t */\n  _updateLayout(minPadding) {\n    if (this.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n\n    layouts.update(this, this.width, this.height, minPadding);\n\n    const area = this.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n\n    this._layers = [];\n    each(this.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        // Skip drawing and configuring chartArea boxes when chartArea is zero or negative\n        return;\n      }\n\n      // configure is called twice, once in core.scale.update and once here.\n      // Here the boxes are fully updated and at their final positions.\n      if (box.configure) {\n        box.configure();\n      }\n      this._layers.push(...box._layers());\n    }, this);\n\n    this._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n\n    this.notifyPlugins('afterLayout');\n  }\n\n  /**\n\t * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n\t * @private\n\t */\n  _updateDatasets(mode) {\n    if (this.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this.getDatasetMeta(i).controller.configure();\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._updateDataset(i, isFunction(mode) ? mode({datasetIndex: i}) : mode);\n    }\n\n    this.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n\n  /**\n\t * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n\t * @private\n\t */\n  _updateDataset(index, mode) {\n    const meta = this.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n\n    if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n\n    meta.controller._update(mode);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetUpdate', args);\n  }\n\n  render() {\n    if (this.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n\n    if (animator.has(this)) {\n      if (this.attached && !animator.running(this)) {\n        animator.start(this);\n      }\n    } else {\n      this.draw();\n      onAnimationsComplete({chart: this});\n    }\n  }\n\n  draw() {\n    let i;\n    if (this._resizeBeforeDraw) {\n      const {width, height} = this._resizeBeforeDraw;\n      // Unset pending resize request now to avoid possible recursion within _resize\n      this._resizeBeforeDraw = null;\n      this._resize(width, height);\n    }\n    this.clear();\n\n    if (this.width <= 0 || this.height <= 0) {\n      return;\n    }\n\n    if (this.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n\n    // Because of plugin hooks (before/afterDatasetsDraw), datasets can't\n    // currently be part of layers. Instead, we draw\n    // layers <= 0 before(default, backward compat), and the rest after\n    const layers = this._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this._drawDatasets();\n\n    // Rest of layers\n    for (; i < layers.length; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this.notifyPlugins('afterDraw');\n  }\n\n  /**\n\t * @private\n\t */\n  _getSortedDatasetMetas(filterVisible) {\n    const metasets = this._sortedMetasets;\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n\n    return result;\n  }\n\n  /**\n\t * Gets the visible dataset metas in drawing order\n\t * @return {object[]}\n\t */\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n\n  /**\n\t * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n\t * @private\n\t */\n  _drawDatasets() {\n    if (this.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n\n    const metasets = this.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      this._drawDataset(metasets[i]);\n    }\n\n    this.notifyPlugins('afterDatasetsDraw');\n  }\n\n  /**\n\t * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n\t * @private\n\t */\n  _drawDataset(meta) {\n    const ctx = this.ctx;\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n    // @ts-expect-error\n    const clip = getDatasetClipArea(this, meta);\n\n    if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n\n    if (clip) {\n      clipArea(ctx, clip);\n    }\n\n    meta.controller.draw();\n\n    if (clip) {\n      unclipArea(ctx);\n    }\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetDraw', args);\n  }\n\n  /**\n   * Checks whether the given point is in the chart area.\n   * @param {Point} point - in relative coordinates (see, e.g., getRelativePosition)\n   * @returns {boolean}\n   */\n  isPointInArea(point) {\n    return _isPointInArea(point, this.chartArea, this._minPadding);\n  }\n\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n\n    return [];\n  }\n\n  getDatasetMeta(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    const metasets = this._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\t\t\t// See isDatasetVisible() comment\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n\n    return meta;\n  }\n\n  getContext() {\n    return this.$context || (this.$context = createContext(null, {chart: this, type: 'chart'}));\n  }\n\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n\n    const meta = this.getDatasetMeta(datasetIndex);\n\n    // meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n    // the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n\n  /**\n\t * @private\n\t */\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const mode = visible ? 'show' : 'hide';\n    const meta = this.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n\n    if (defined(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      this.update();\n    } else {\n      this.setDatasetVisibility(datasetIndex, visible);\n      // Animate visible state, so hide animation can be seen. This could be handled better if update / updateDataset returned a Promise.\n      anims.update(meta, {visible});\n      this.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n\n  /**\n\t * @private\n\t */\n  _destroyDatasetMeta(datasetIndex) {\n    const meta = this._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n    }\n    delete this._metasets[datasetIndex];\n  }\n\n  _stop() {\n    let i, ilen;\n    this.stop();\n    animator.remove(this);\n\n    for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._destroyDatasetMeta(i);\n    }\n  }\n\n  destroy() {\n    this.notifyPlugins('beforeDestroy');\n    const {canvas, ctx} = this;\n\n    this._stop();\n    this.config.clearCache();\n\n    if (canvas) {\n      this.unbindEvents();\n      clearCanvas(canvas, ctx);\n      this.platform.releaseContext(ctx);\n      this.canvas = null;\n      this.ctx = null;\n    }\n\n    delete instances[this.id];\n\n    this.notifyPlugins('afterDestroy');\n  }\n\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n\n  /**\n\t * @private\n\t */\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n\n  /**\n   * @private\n   */\n  bindUserEvents() {\n    const listeners = this._listeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n\n    const listener = (e, x, y) => {\n      e.offsetX = x;\n      e.offsetY = y;\n      this._eventHandler(e);\n    };\n\n    each(this.options.events, (type) => _add(type, listener));\n  }\n\n  /**\n   * @private\n   */\n  bindResponsiveEvents() {\n    if (!this._responsiveListeners) {\n      this._responsiveListeners = {};\n    }\n    const listeners = this._responsiveListeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(this, type, listener);\n        delete listeners[type];\n      }\n    };\n\n    const listener = (width, height) => {\n      if (this.canvas) {\n        this.resize(width, height);\n      }\n    };\n\n    let detached; // eslint-disable-line prefer-const\n    const attached = () => {\n      _remove('attach', attached);\n\n      this.attached = true;\n      this.resize();\n\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n\n    detached = () => {\n      this.attached = false;\n\n      _remove('resize', listener);\n\n      // Stop animating and remove metasets, so when re-attached, the animations start from beginning.\n      this._stop();\n      this._resize(0, 0);\n\n      _add('attach', attached);\n    };\n\n    if (platform.isAttached(this.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  unbindEvents() {\n    each(this._listeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._listeners = {};\n\n    each(this._responsiveListeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._responsiveListeners = undefined;\n  }\n\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n\n  /**\n\t * Get active (hovered) elements\n\t * @returns array\n\t */\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  /**\n\t * Set active (hovered) elements\n\t * @param {array} activeElements New active data points\n\t */\n  setActiveElements(activeElements) {\n    const lastActive = this._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n\n    if (changed) {\n      this._active = active;\n      // Make sure we don't use the previous mouse event to override the active elements in update.\n      this._lastEvent = null;\n      this._updateHoverStyles(active, lastActive);\n    }\n  }\n\n  /**\n\t * Calls enabled plugins on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {Object} [args] - Extra arguments to apply to the hook call.\n   * @param {import('./core.plugins.js').filterCallback} [filter] - Filtering function for limiting which plugins are notified\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n\n  /**\n   * Check if a plugin with the specific ID is registered and enabled\n   * @param {string} pluginId - The ID of the plugin of which to check if it is enabled\n   * @returns {boolean}\n   */\n  isPluginEnabled(pluginId) {\n    return this._plugins._cache.filter(p => p.plugin.id === pluginId).length === 1;\n  }\n\n  /**\n\t * @private\n\t */\n  _updateHoverStyles(active, lastActive, replay) {\n    const hoverOptions = this.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n\n    if (deactivated.length) {\n      this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n\n    if (activated.length && hoverOptions.mode) {\n      this.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _eventHandler(e, replay) {\n    const args = {\n      event: e,\n      replay,\n      cancelable: true,\n      inChartArea: this.isPointInArea(e)\n    };\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.native.type);\n\n    if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n\n    const changed = this._handleEvent(e, replay, args.inChartArea);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterEvent', args, eventFilter);\n\n    if (changed || args.changed) {\n      this.render();\n    }\n\n    return this;\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e the event to handle\n\t * @param {boolean} [replay] - true if the event was replayed by `update`\n   * @param {boolean} [inChartArea] - true if the event is inside chartArea\n\t * @return {boolean} true if the chart needs to re-render\n\t * @private\n\t */\n  _handleEvent(e, replay, inChartArea) {\n    const {_active: lastActive = [], options} = this;\n\n    // If the event is replayed from `update`, we should evaluate with the final positions.\n    //\n    // The `replay`:\n    // It's the last event (excluding click) that has occurred before `update`.\n    // So mouse has not moved. It's also over the chart, because there is a `replay`.\n    //\n    // The why:\n    // If animations are active, the elements haven't moved yet compared to state before update.\n    // But if they will, we are activating the elements that would be active, if this check\n    // was done after the animations have completed. => \"final positions\".\n    // If there is no animations, the \"final\" and \"current\" positions are equal.\n    // This is done so we do not have to evaluate the active elements each animation frame\n    // - it would be expensive.\n    const useFinalPosition = replay;\n    const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n    const isClick = _isClickEvent(e);\n    const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n\n    if (inChartArea) {\n      // Set _lastEvent to null while we are processing the event handlers.\n      // This prevents recursion if the handler calls chart.update()\n      this._lastEvent = null;\n\n      // Invoke onHover hook\n      callCallback(options.onHover, [e, active, this], this);\n\n      if (isClick) {\n        callCallback(options.onClick, [e, active, this], this);\n      }\n    }\n\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      this._active = active;\n      this._updateHoverStyles(active, lastActive, replay);\n    }\n\n    this._lastEvent = lastEvent;\n\n    return changed;\n  }\n\n  /**\n   * @param {ChartEvent} e - The event\n   * @param {import('../types/index.js').ActiveElement[]} lastActive - Previously active elements\n   * @param {boolean} inChartArea - Is the event inside chartArea\n   * @param {boolean} useFinalPosition - Should the evaluation be done with current or final (after animation) element positions\n   * @returns {import('../types/index.js').ActiveElement[]} - The active elements\n   * @pravate\n   */\n  _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      // Let user control the active elements outside chartArea. Eg. using Legend.\n      return lastActive;\n    }\n\n    const hoverOptions = this.options.hover;\n    return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n  }\n}\n\n// @ts-ignore\nfunction invalidatePlugins() {\n  return each(Chart.instances, (chart) => chart._plugins.invalidate());\n}\n\nexport default Chart;\n", "import Element from '../core/core.element.js';\nimport {_angleBetween, getAngleFromPoint, TAU, HALF_PI, valueOrDefault} from '../helpers/index.js';\nimport {PI, _angleDiff, _normalizeAngle, _isBetween, _limitValue} from '../helpers/helpers.math.js';\nimport {_readValueToProps} from '../helpers/helpers.options.js';\nimport type {ArcOptions, Point} from '../types/index.js';\n\nfunction clipSelf(ctx: CanvasRenderingContext2D, element: ArcElement, endAngle: number) {\n  const {startAngle, x, y, outerRadius, innerRadius, options} = element;\n  const {borderWidth, borderJoinStyle} = options;\n  const outerAngleClip = Math.min(borderWidth / outerRadius, _normalizeAngle(startAngle - endAngle));\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius - borderWidth / 2, startAngle + outerAngleClip / 2, endAngle - outerAngleClip / 2);\n\n  if (innerRadius > 0) {\n    const innerAngleClip = Math.min(borderWidth / innerRadius, _normalizeAngle(startAngle - endAngle));\n    ctx.arc(x, y, innerRadius + borderWidth / 2, endAngle - innerAngleClip / 2, startAngle + innerAngleClip / 2, true);\n  } else {\n    const clipWidth = Math.min(borderWidth / 2, outerRadius * _normalizeAngle(startAngle - endAngle));\n\n    if (borderJoinStyle === 'round') {\n      ctx.arc(x, y, clipWidth, endAngle - PI / 2, startAngle + PI / 2, true);\n    } else if (borderJoinStyle === 'bevel') {\n      const r = 2 * clipWidth * clipWidth;\n      const endX = -r * Math.cos(endAngle + PI / 2) + x;\n      const endY = -r * Math.sin(endAngle + PI / 2) + y;\n      const startX = r * Math.cos(startAngle + PI / 2) + x;\n      const startY = r * Math.sin(startAngle + PI / 2) + y;\n      ctx.lineTo(endX, endY);\n      ctx.lineTo(startX, startY);\n    }\n  }\n  ctx.closePath();\n\n  ctx.moveTo(0, 0);\n  ctx.rect(0, 0, ctx.canvas.width, ctx.canvas.height);\n\n  ctx.clip('evenodd');\n}\n\n\nfunction clipArc(ctx: CanvasRenderingContext2D, element: ArcElement, endAngle: number) {\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n\n  // Draw an inner border by clipping the arc and drawing a double-width border\n  // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\n\n/**\n * Parse border radius from the provided options\n */\nfunction parseBorderRadius(arc: ArcElement, innerRadius: number, outerRadius: number, angleDelta: number) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n\n  // Outer limits are complicated. We want to compute the available angular distance at\n  // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n  // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n  //\n  // If the borderRadius is large, that value can become negative.\n  // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n  // we know that the thickness term will dominate and compute the limits at that point\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\n  };\n}\n\n/**\n * Convert (r, 𝜃) to (x, y)\n */\nfunction rThetaToXY(r: number, theta: number, x: number, y: number) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\n\n\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */\nfunction pathArc(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  end: number,\n  circular: boolean,\n) {\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\n\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n\n  let spacingOffset = 0;\n  const alpha = end - start;\n\n  if (spacing) {\n    // When spacing is present, it is the same for all items\n    // So we adjust the start and end angle of the arc such that\n    // the distance is the same as it would be without the spacing\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? (alpha * avNogSpacingRadius) / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius(element, innerRadius, outerRadius, endAngle - startAngle);\n\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n\n  ctx.beginPath();\n\n  if (circular) {\n    // The first arc segments from point 1 to point a to point 2\n    const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n    ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n    ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n\n    // The corner segment from point 2 to point 3\n    if (outerEnd > 0) {\n      const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n    }\n\n    // The line from point 3 to point 4\n    const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n    ctx.lineTo(p4.x, p4.y);\n\n    // The corner segment from point 4 to point 5\n    if (innerEnd > 0) {\n      const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n    }\n\n    // The inner arc from point 5 to point b to point 6\n    const innerMidAdjustedAngle = ((endAngle - (innerEnd / innerRadius)) + (startAngle + (innerStart / innerRadius))) / 2;\n    ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), innerMidAdjustedAngle, true);\n    ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + (innerStart / innerRadius), true);\n\n    // The corner segment from point 6 to point 7\n    if (innerStart > 0) {\n      const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n    }\n\n    // The line from point 7 to point 8\n    const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n    ctx.lineTo(p8.x, p8.y);\n\n    // The corner segment from point 8 to point 1\n    if (outerStart > 0) {\n      const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n    }\n  } else {\n    ctx.moveTo(x, y);\n\n    const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n    const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerStartX, outerStartY);\n\n    const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n    const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerEndX, outerEndY);\n  }\n\n  ctx.closePath();\n}\n\nfunction drawArc(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  circular: boolean,\n) {\n  const {fullCircles, startAngle, circumference} = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle, circular);\n  ctx.fill();\n  return endAngle;\n}\n\nfunction drawBorder(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  circular: boolean,\n) {\n  const {fullCircles, startAngle, circumference, options} = element;\n  const {borderWidth, borderJoinStyle, borderDash, borderDashOffset, borderRadius} = options;\n  const inner = options.borderAlign === 'inner';\n\n  if (!borderWidth) {\n    return;\n  }\n\n  ctx.setLineDash(borderDash || []);\n  ctx.lineDashOffset = borderDashOffset;\n\n  if (inner) {\n    ctx.lineWidth = borderWidth * 2;\n    ctx.lineJoin = borderJoinStyle || 'round';\n  } else {\n    ctx.lineWidth = borderWidth;\n    ctx.lineJoin = borderJoinStyle || 'bevel';\n  }\n\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.stroke();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n\n  if (options.selfJoin && endAngle - startAngle >= PI && borderRadius === 0 && borderJoinStyle !== 'miter') {\n    clipSelf(ctx, element, endAngle);\n  }\n\n  if (!fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.stroke();\n  }\n}\n\nexport interface ArcProps extends Point {\n  startAngle: number;\n  endAngle: number;\n  innerRadius: number;\n  outerRadius: number;\n  circumference: number;\n}\n\nexport default class ArcElement extends Element<ArcProps, ArcOptions> {\n\n  static id = 'arc';\n\n  static defaults = {\n    borderAlign: 'center',\n    borderColor: '#fff',\n    borderDash: [],\n    borderDashOffset: 0,\n    borderJoinStyle: undefined,\n    borderRadius: 0,\n    borderWidth: 2,\n    offset: 0,\n    spacing: 0,\n    angle: undefined,\n    circular: true,\n    selfJoin: false,\n  };\n\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor'\n  };\n\n  static descriptors = {\n    _scriptable: true,\n    _indexable: (name) => name !== 'borderDash'\n  };\n\n  circumference: number;\n  endAngle: number;\n  fullCircles: number;\n  innerRadius: number;\n  outerRadius: number;\n  pixelMargin: number;\n  startAngle: number;\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(chartX: number, chartY: number, useFinalPosition: boolean) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const rAdjust = (this.options.spacing + this.options.borderWidth) / 2;\n    const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n    const nonZeroBetween = _angleBetween(angle, startAngle, endAngle) && startAngle !== endAngle;\n    const betweenAngles = _circumference >= TAU || nonZeroBetween;\n    const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n\n    return (betweenAngles && withinRadius);\n  }\n\n  getCenterPoint(useFinalPosition: boolean) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius'\n    ], useFinalPosition);\n    const {offset, spacing} = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n\n  tooltipPosition(useFinalPosition: boolean) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n\n  draw(ctx: CanvasRenderingContext2D) {\n    const {options, circumference} = this;\n    const offset = (options.offset || 0) / 4;\n    const spacing = (options.spacing || 0) / 2;\n    const circular = options.circular;\n    this.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n\n    if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n      return;\n    }\n\n    ctx.save();\n\n    const halfAngle = (this.startAngle + this.endAngle) / 2;\n    ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n    const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n    const radiusOffset = offset * fix;\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n\n    drawArc(ctx, this, radiusOffset, spacing, circular);\n    drawBorder(ctx, this, radiusOffset, spacing, circular);\n\n    ctx.restore();\n  }\n}\n", "import Element from '../core/core.element.js';\nimport {_bezierInterpolation, _pointInLine, _steppedInterpolation} from '../helpers/helpers.interpolation.js';\nimport {_computeSegments, _boundSegments} from '../helpers/helpers.segment.js';\nimport {_steppedLineTo, _bezierCurveTo} from '../helpers/helpers.canvas.js';\nimport {_updateBezierControlPoints} from '../helpers/helpers.curve.js';\nimport {valueOrDefault} from '../helpers/index.js';\n\n/**\n * @typedef { import('./element.point.js').default } PointElement\n */\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\n\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\n\n/**\n * @returns {any}\n */\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n\n  return lineTo;\n}\n\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\n\n/**\n * Create path from points, grouping by truncated x-coordinate\n * Points need to be in order by x-coordinate for this to work efficiently\n * @param {CanvasRenderingContext2D|Path2D} ctx - Context\n * @param {LineElement} line\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} params\n * @param {boolean} params.move - move to starting point (vs line to it)\n * @param {boolean} params.reverse - path the segment from end to start\n * @param {number} params.start - limit segment to points starting from `start` index\n * @param {number} params.end - limit segment to points ending at `start` + `count` index\n */\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  // eslint-disable-next-line prefer-const\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n\n    if (point.skip) {\n      // If there is a skipped point inside a segment, spanGaps must be true\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n\n    prev = point;\n  }\n\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n\n  return !!loop;\n}\n\n/**\n * Create path from points, grouping by truncated x-coordinate\n * Points need to be in order by x-coordinate for this to work efficiently\n * @param {CanvasRenderingContext2D|Path2D} ctx - Context\n * @param {LineElement} line\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} params\n * @param {boolean} params.move - move to starting point (vs line to it)\n * @param {boolean} params.reverse - path the segment from end to start\n * @param {number} params.start - limit segment to points starting from `start` index\n * @param {number} params.end - limit segment to points ending at `start` + `count` index\n */\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      // Draw line to maxY and minY, using the average x-coordinate\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      // Line to y-value of last point in group. So the line continues\n      // from correct position. Not using move, to have solid path.\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n\n    if (point.skip) {\n      // If there is a skipped point inside a segment, spanGaps must be true\n      continue;\n    }\n\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0; // truncated x-coordinate\n\n    if (truncX === prevX) {\n      // Determine `minY` / `maxY` and `avgX` while we stay within same x-position\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      // For first point in group, countX is `0`, so average will be `x` / 1.\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      // Draw line to next x-position, using the first (or only)\n      // y-value in that group\n      ctx.lineTo(x, y);\n\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    // Keep track of the last y-value in group\n    lastY = y;\n  }\n  drawX();\n}\n\n/**\n * @param {LineElement} line - the line\n * @returns {function}\n * @private\n */\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\n\n/**\n * @private\n */\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n\n  return _pointInLine;\n}\n\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\n\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\n\nconst usePath2D = typeof Path2D === 'function';\n\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && !line.options.segment) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\n\nexport default class LineElement extends Element {\n\n  static id = 'line';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderCapStyle: 'butt',\n    borderDash: [],\n    borderDashOffset: 0,\n    borderJoinStyle: 'miter',\n    borderWidth: 3,\n    capBezierPoints: true,\n    cubicInterpolationMode: 'default',\n    fill: false,\n    spanGaps: false,\n    stepped: false,\n    tension: 0,\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n\n  static descriptors = {\n    _scriptable: true,\n    _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n  };\n\n\n  constructor(cfg) {\n    super();\n\n    this.animated = true;\n    this.options = undefined;\n    this._chart = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    this._datasetIndex = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  updateControlPoints(chartArea, indexAxis) {\n    const options = this.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n      const loop = options.spanGaps ? this._loop : this._fullLoop;\n      _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n      this._pointsUpdated = true;\n    }\n  }\n\n  set points(points) {\n    this._points = points;\n    delete this._segments;\n    delete this._path;\n    this._pointsUpdated = false;\n  }\n\n  get points() {\n    return this._points;\n  }\n\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n\n  /**\n\t * First non-skipped point on this line\n\t * @returns {PointElement|undefined}\n\t */\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n\n  /**\n\t * Last non-skipped point on this line\n\t * @returns {PointElement|undefined}\n\t */\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n\n  /**\n\t * Interpolate a point in this line at the same value on `property` as\n\t * the reference `point` provided\n\t * @param {PointElement} point - the reference point\n\t * @param {string} property - the property to match on\n\t * @returns {PointElement|undefined}\n\t */\n  interpolate(point, property) {\n    const options = this.options;\n    const value = point[property];\n    const points = this.points;\n    const segments = _boundSegments(this, {property, start: value, end: value});\n\n    if (!segments.length) {\n      return;\n    }\n\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n\n  /**\n\t * Append a segment of this line to current path.\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {object} segment\n\t * @param {number} segment.start - start index of the segment, referring the points array\n \t * @param {number} segment.end - end index of the segment, referring the points array\n \t * @param {boolean} segment.loop - indicates that the segment is a loop\n\t * @param {object} params\n\t * @param {boolean} params.move - move to starting point (vs line to it)\n\t * @param {boolean} params.reverse - path the segment from end to start\n\t * @param {number} params.start - limit segment to points starting from `start` index\n\t * @param {number} params.end - limit segment to points ending at `start` + `count` index\n\t * @returns {undefined|boolean} - true if the segment is a full loop (path should be closed)\n\t */\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n\n  /**\n\t * Append all segments of this line to current path.\n\t * @param {CanvasRenderingContext2D|Path2D} ctx\n\t * @param {number} [start]\n\t * @param {number} [count]\n\t * @returns {undefined|boolean} - true if line is a full loop (path should be closed)\n\t */\n  path(ctx, start, count) {\n    const segments = this.segments;\n    const segmentMethod = _getSegmentMethod(this);\n    let loop = this._loop;\n\n    start = start || 0;\n    count = count || (this.points.length - start);\n\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, this, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n\n  /**\n\t * Draw\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {object} chartArea\n\t * @param {number} [start]\n\t * @param {number} [count]\n\t */\n  draw(ctx, chartArea, start, count) {\n    const options = this.options || {};\n    const points = this.points || [];\n\n    if (points.length && options.borderWidth) {\n      ctx.save();\n\n      draw(ctx, this, start, count);\n\n      ctx.restore();\n    }\n\n    if (this.animated) {\n      // When line is animated, the control points and path are not cached.\n      this._pointsUpdated = false;\n      this._path = undefined;\n    }\n  }\n}\n", "import Element from '../core/core.element.js';\nimport {drawPoint, _isPointInArea} from '../helpers/helpers.canvas.js';\nimport type {\n  CartesianParsedData,\n  ChartArea,\n  Point,\n  PointHoverOptions,\n  PointOptions,\n} from '../types/index.js';\n\nfunction inRange(el: PointElement, pos: number, axis: 'x' | 'y', useFinalPosition?: boolean) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\n\nexport type PointProps = Point\n\nexport default class PointElement extends Element<PointProps, PointOptions & PointHoverOptions> {\n\n  static id = 'point';\n\n  parsed: CartesianParsedData;\n  skip?: boolean;\n  stop?: boolean;\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderWidth: 1,\n    hitRadius: 1,\n    hoverBorderWidth: 1,\n    hoverRadius: 4,\n    pointStyle: 'circle',\n    radius: 3,\n    rotation: 0\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(mouseX: number, mouseY: number, useFinalPosition?: boolean) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n\n  inXRange(mouseX: number, useFinalPosition?: boolean) {\n    return inRange(this, mouseX, 'x', useFinalPosition);\n  }\n\n  inYRange(mouseY: number, useFinalPosition?: boolean) {\n    return inRange(this, mouseY, 'y', useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition?: boolean) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n\n  size(options?: Partial<PointOptions & PointHoverOptions>) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n\n  draw(ctx: CanvasRenderingContext2D, area: ChartArea) {\n    const options = this.options;\n\n    if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n      return;\n    }\n\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, this.x, this.y);\n  }\n\n  getRange() {\n    const options = this.options || {};\n    // @ts-expect-error Fallbacks should never be hit in practice\n    return options.radius + options.hitRadius;\n  }\n}\n", "import Element from '../core/core.element.js';\nimport {isObject, _isBetween, _limitValue} from '../helpers/index.js';\nimport {addRoundedRectPath} from '../helpers/helpers.canvas.js';\nimport {toTRBL, toTRBLCorners} from '../helpers/helpers.options.js';\n\n/** @typedef {{ x: number, y: number, base: number, horizontal: boolean, width: number, height: number }} BarProps */\n\n/**\n * Helper function to get the bounds of the bar regardless of the orientation\n * @param {BarElement} bar the bar\n * @param {boolean} [useFinalPosition]\n * @return {object} bounds of the bar\n * @private\n */\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = /** @type {BarProps} */ (bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition));\n\n  let left, right, top, bottom, half;\n\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n\n  return {left, top, right, bottom};\n}\n\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\n\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = bar.borderSkipped;\n  const o = toTRBL(value);\n\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\n\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = bar.borderSkipped;\n\n  // If the value is an object, assume the user knows what they are doing\n  // and apply as directed.\n  const enableBorder = enableBorderRadius || isObject(value);\n\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\n\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\n\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n\n  return bounds\n\t\t&& (skipX || _isBetween(x, bounds.left, bounds.right))\n\t\t&& (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\n\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n\n/**\n * Add a path of a rectangle to the current sub-path\n * @param {CanvasRenderingContext2D} ctx Context\n * @param {*} rect Bounding rect\n */\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\n\nfunction inflateRect(rect, amount, refRect = {}) {\n  const x = rect.x !== refRect.x ? -amount : 0;\n  const y = rect.y !== refRect.y ? -amount : 0;\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\n\nexport default class BarElement extends Element {\n\n  static id = 'bar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderSkipped: 'start',\n    borderWidth: 0,\n    borderRadius: 0,\n    inflateAmount: 'auto',\n    pointStyle: undefined\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.inflateAmount = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  draw(ctx) {\n    const {inflateAmount, options: {borderColor, backgroundColor}} = this;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n\n    ctx.save();\n\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n      ctx.clip();\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n      ctx.fillStyle = borderColor;\n      ctx.fill('evenodd');\n    }\n\n    ctx.beginPath();\n    addRectPath(ctx, inflateRect(inner, inflateAmount));\n    ctx.fillStyle = backgroundColor;\n    ctx.fill();\n\n    ctx.restore();\n  }\n\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = /** @type {BarProps} */ (this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition));\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\n", "import {DoughnutController, PolarAreaController, defaults} from '../index.js';\nimport type {Chart, ChartDataset} from '../types.js';\n\nexport interface ColorsPluginOptions {\n  enabled?: boolean;\n  forceOverride?: boolean;\n}\n\ninterface ColorsDescriptor {\n  backgroundColor?: unknown;\n  borderColor?: unknown;\n}\n\nconst BORDER_COLORS = [\n  'rgb(54, 162, 235)', // blue\n  'rgb(255, 99, 132)', // red\n  'rgb(255, 159, 64)', // orange\n  'rgb(255, 205, 86)', // yellow\n  'rgb(75, 192, 192)', // green\n  'rgb(153, 102, 255)', // purple\n  'rgb(201, 203, 207)' // grey\n];\n\n// Border colors with 50% transparency\nconst BACKGROUND_COLORS = /* #__PURE__ */ BORDER_COLORS.map(color => color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\n\nfunction getBorderColor(i: number) {\n  return BORDER_COLORS[i % BORDER_COLORS.length];\n}\n\nfunction getBackgroundColor(i: number) {\n  return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\n\nfunction colorizeDefaultDataset(dataset: ChartDataset, i: number) {\n  dataset.borderColor = getBorderColor(i);\n  dataset.backgroundColor = getBackgroundColor(i);\n\n  return ++i;\n}\n\nfunction colorizeDoughnutDataset(dataset: ChartDataset, i: number) {\n  dataset.backgroundColor = dataset.data.map(() => getBorderColor(i++));\n\n  return i;\n}\n\nfunction colorizePolarAreaDataset(dataset: ChartDataset, i: number) {\n  dataset.backgroundColor = dataset.data.map(() => getBackgroundColor(i++));\n\n  return i;\n}\n\nfunction getColorizer(chart: Chart) {\n  let i = 0;\n\n  return (dataset: ChartDataset, datasetIndex: number) => {\n    const controller = chart.getDatasetMeta(datasetIndex).controller;\n\n    if (controller instanceof DoughnutController) {\n      i = colorizeDoughnutDataset(dataset, i);\n    } else if (controller instanceof PolarAreaController) {\n      i = colorizePolarAreaDataset(dataset, i);\n    } else if (controller) {\n      i = colorizeDefaultDataset(dataset, i);\n    }\n  };\n}\n\nfunction containsColorsDefinitions(\n  descriptors: ColorsDescriptor[] | Record<string, ColorsDescriptor>\n) {\n  let k: number | string;\n\n  for (k in descriptors) {\n    if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction containsColorsDefinition(\n  descriptor: ColorsDescriptor\n) {\n  return descriptor && (descriptor.borderColor || descriptor.backgroundColor);\n}\n\nfunction containsDefaultColorsDefenitions() {\n  return defaults.borderColor !== 'rgba(0,0,0,0.1)' || defaults.backgroundColor !== 'rgba(0,0,0,0.1)';\n}\n\nexport default {\n  id: 'colors',\n\n  defaults: {\n    enabled: true,\n    forceOverride: false\n  } as ColorsPluginOptions,\n\n  beforeLayout(chart: Chart, _args, options: ColorsPluginOptions) {\n    if (!options.enabled) {\n      return;\n    }\n\n    const {\n      data: {datasets},\n      options: chartOptions\n    } = chart.config;\n    const {elements} = chartOptions;\n\n    const containsColorDefenition = (\n      containsColorsDefinitions(datasets) ||\n      containsColorsDefinition(chartOptions) ||\n      (elements && containsColorsDefinitions(elements)) ||\n      containsDefaultColorsDefenitions());\n\n    if (!options.forceOverride && containsColorDefenition) {\n      return;\n    }\n\n    const colorizer = getColorizer(chart);\n\n    datasets.forEach(colorizer);\n  }\n};\n", "import {_limitValue, _lookupByKey, isNullOrUndef, resolve} from '../helpers/index.js';\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  /**\n   * Implementation of the Largest Triangle Three Buckets algorithm.\n   *\n   * This implementation is based on the original implementation by Sveinn Steinarsson\n   * in https://github.com/sveinn-steinarsson/flot-downsample/blob/master/jquery.flot.downsample.js\n   *\n   * The original implementation is MIT licensed.\n   */\n  const samples = options.samples || availableWidth;\n  // There are less points than the threshold, returning the whole array\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n\n  const decimated = [];\n\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  // Starting from offset\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n\n  decimated[sampledIndex++] = data[a];\n\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n\n    // Adding offset\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n\n    // Adding offset\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n    const {x: pointAx, y: pointAy} = data[a];\n\n    // Note that this is changed from the original algorithm which initializes these\n    // values to 1. The reason for this change is that if the area is small, nextA\n    // would never be set and thus a crash would occur in the next loop as `a` would become\n    // `undefined`. Since the area is always positive, but could be 0 in the case of a flat trace,\n    // initializing with a negative number is the correct solution.\n    maxArea = area = -1;\n\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs(\n        (pointAx - avgX) * (data[j].y - pointAy) -\n        (pointAx - data[j].x) * (avgY - pointAy)\n      );\n\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n\n  // Include the last point\n  decimated[sampledIndex++] = data[endIndex];\n\n  return decimated;\n}\n\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n\n    if (truncX === prevX) {\n      // Determine `minY` / `maxY` and `avgX` while we stay within same x-position\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      // For first point in group, countX is `0`, so average will be `x` / 1.\n      // Use point.x here because we're computing the average data `x` value\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      // Push up to 4 points, 3 for the last interval and the first point for this interval\n      const lastIndex = i - 1;\n\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        // The interval is defined by 4 points: start, min, max, end.\n        // The starting point is already considered at this point, so we need to determine which\n        // of the other points to add. We need to sort these points to ensure the decimated data\n        // is still sorted and then ensure there are no duplicates.\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex1],\n            x: avgX,\n          });\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n\n      // lastIndex === startIndex will occur when a range has only 1 point which could\n      // happen with very uneven data\n      if (i > 0 && lastIndex !== startIndex) {\n        // Last point in the previous interval\n        decimated.push(data[lastIndex]);\n      }\n\n      // Start of the new interval\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n\n  return decimated;\n}\n\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {\n      configurable: true,\n      enumerable: true,\n      writable: true,\n      value: data,\n    });\n  }\n}\n\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach((dataset) => {\n    cleanDecimatedDataset(dataset);\n  });\n}\n\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n\n  let start = 0;\n  let count;\n\n  const {iScale} = meta;\n  const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n\n  return {start, count};\n}\n\nexport default {\n  id: 'decimation',\n\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false,\n  },\n\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      // The decimation plugin may have been previously enabled. Need to remove old `dataset._data` handlers\n      cleanDecimatedData(chart);\n      return;\n    }\n\n    // Assume the entire chart is available to show a few more points than needed\n    const availableWidth = chart.width;\n\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {_data, indexAxis} = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        // Decimation is only supported for lines that have an X indexAxis\n        return;\n      }\n\n      if (!meta.controller.supportsDecimation) {\n        // Only line datasets are supported\n        return;\n      }\n\n      const xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        // Only linear interpolation is supported\n        return;\n      }\n\n      if (chart.options.parsing) {\n        // Plugin only supports data that does not need parsing\n        return;\n      }\n\n      let {start, count} = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      const threshold = options.threshold || 4 * availableWidth;\n      if (count <= threshold) {\n        // No decimation is required until we are above this threshold\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n\n      if (isNullOrUndef(_data)) {\n        // First time we are seeing this dataset\n        // We override the 'data' property with a setter that stores the\n        // raw data in _data, but reads the decimated data from _decimated\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function() {\n            return this._decimated;\n          },\n          set: function(d) {\n            this._data = d;\n          }\n        });\n      }\n\n      // Point the chart to the decimated data\n      let decimated;\n      switch (options.algorithm) {\n      case 'lttb':\n        decimated = lttbDecimation(data, start, count, availableWidth, options);\n        break;\n      case 'min-max':\n        decimated = minMaxDecimation(data, start, count, availableWidth);\n        break;\n      default:\n        throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n\n      dataset._decimated = decimated;\n    });\n  },\n\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\n", "import {_boundSegment, _boundSegments, _normalizeAngle} from '../../helpers/index.js';\n\nexport function _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n\n  for (const segment of segments) {\n    let {start, end} = segment;\n    end = _findSegmentEnd(start, end, points);\n\n    const bounds = _getBounds(property, points[start], points[end], segment.loop);\n\n    if (!target.segments) {\n      // Special case for boundary not supporting `segments` (simpleArc)\n      // Bounds are provided as `target` for partial circle, or undefined for full circle\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[start],\n        end: points[end]\n      });\n      continue;\n    }\n\n    // Get all segments from `target` that intersect the bounds of current segment of `line`\n    const targetSegments = _boundSegments(target, bounds);\n\n    for (const tgt of targetSegments) {\n      const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n      const fillSources = _boundSegment(segment, points, subBounds);\n\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\n\nexport function _getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {property, start, end};\n}\n\nexport function _pointsFromSegments(boundary, line) {\n  const {x = null, y = null} = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach(({start, end}) => {\n    end = _findSegmentEnd(start, end, linePoints);\n    const first = linePoints[start];\n    const last = linePoints[end];\n    if (y !== null) {\n      points.push({x: first.x, y});\n      points.push({x: last.x, y});\n    } else if (x !== null) {\n      points.push({x, y: first.y});\n      points.push({x, y: last.y});\n    }\n  });\n  return points;\n}\n\nexport function _findSegmentEnd(start, end, points) {\n  for (;end > start; end--) {\n    const point = points[end];\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n  return end;\n}\n\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\n", "/**\n * @typedef { import('../../core/core.controller.js').default } Chart\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.point.js').default } PointElement\n */\n\nimport {LineElement} from '../../elements/index.js';\nimport {isArray} from '../../helpers/index.js';\nimport {_pointsFromSegments} from './filler.segment.js';\n\n/**\n * @param {PointElement[] | { x: number; y: number; }} boundary\n * @param {LineElement} line\n * @return {LineElement?}\n */\nexport function _createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n\n  if (isArray(boundary)) {\n    _loop = true;\n    // @ts-ignore\n    points = boundary;\n  } else {\n    points = _pointsFromSegments(boundary, line);\n  }\n\n  return points.length ? new LineElement({\n    points,\n    options: {tension: 0},\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\n\nexport function _shouldApplyFill(source) {\n  return source && source.fill !== false;\n}\n", "import {isObject, isFinite, valueOrDefault} from '../../helpers/helpers.core.js';\n\n/**\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.line.js').default } LineElement\n * @typedef { import('../../types/index.js').FillTarget } FillTarget\n * @typedef { import('../../types/index.js').ComplexFillTarget } ComplexFillTarget\n */\n\nexport function _resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n\n  if (!propagate) {\n    return fill;\n  }\n\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isFinite(fill)) {\n      return fill;\n    }\n\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n\n    if (target.visible) {\n      return fill;\n    }\n\n    visited.push(fill);\n    fill = target.fill;\n  }\n\n  return false;\n}\n\n/**\n * @param {LineElement} line\n * @param {number} index\n * @param {number} count\n */\nexport function _decodeFill(line, index, count) {\n  /** @type {string | {value: number}} */\n  const fill = parseFillOption(line);\n\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n\n  let target = parseFloat(fill);\n\n  if (isFinite(target) && Math.floor(target) === target) {\n    return decodeTargetIndex(fill[0], index, target, count);\n  }\n\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\n\nfunction decodeTargetIndex(firstCh, index, target, count) {\n  if (firstCh === '-' || firstCh === '+') {\n    target = index + target;\n  }\n\n  if (target === index || target < 0 || target >= count) {\n    return false;\n  }\n\n  return target;\n}\n\n/**\n * @param {FillTarget | ComplexFillTarget} fill\n * @param {Scale} scale\n * @returns {number | null}\n */\nexport function _getTargetPixel(fill, scale) {\n  let pixel = null;\n  if (fill === 'start') {\n    pixel = scale.bottom;\n  } else if (fill === 'end') {\n    pixel = scale.top;\n  } else if (isObject(fill)) {\n    // @ts-ignore\n    pixel = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    pixel = scale.getBasePixel();\n  }\n  return pixel;\n}\n\n/**\n * @param {FillTarget | ComplexFillTarget} fill\n * @param {Scale} scale\n * @param {number} startValue\n * @returns {number | undefined}\n */\nexport function _getTargetValue(fill, scale, startValue) {\n  let value;\n\n  if (fill === 'start') {\n    value = startValue;\n  } else if (fill === 'end') {\n    value = scale.options.reverse ? scale.min : scale.max;\n  } else if (isObject(fill)) {\n    // @ts-ignore\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  return value;\n}\n\n/**\n * @param {LineElement} line\n */\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n\n  if (fill === false || fill === null) {\n    return false;\n  }\n\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\n", "/**\n * @typedef { import('../../core/core.controller.js').default } Chart\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.point.js').default } PointElement\n */\n\nimport {LineElement} from '../../elements/index.js';\nimport {_isBetween} from '../../helpers/index.js';\nimport {_createBoundaryLine} from './filler.helper.js';\n\n/**\n * @param {{ chart: Chart; scale: Scale; index: number; line: LineElement; }} source\n * @return {LineElement}\n */\nexport function _buildStackLine(source) {\n  const {scale, index, line} = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(scale, index);\n  linesBelow.push(_createBoundaryLine({x: null, y: scale.bottom}, line));\n\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({points, options: {}});\n}\n\n/**\n * @param {Scale} scale\n * @param {number} index\n * @return {LineElement[]}\n */\nfunction getLinesBelow(scale, index) {\n  const below = [];\n  const metas = scale.getMatchingVisibleMetas('line');\n\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (!meta.hidden) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\n\n/**\n * @param {PointElement[]} points\n * @param {PointElement} sourcePoint\n * @param {LineElement[]} linesBelow\n */\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\n\n    if (!point || (first && last)) {\n      continue;\n    }\n    if (first) {\n      // First point of a segment -> need to add another point before this,\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        // In the middle of a segment, no need to add more points.\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\n\n/**\n * @param {LineElement} line\n * @param {PointElement} sourcePoint\n * @param {string} property\n * @returns {{point?: PointElement, first?: boolean, last?: boolean}}\n */\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (_isBetween(pointValue, firstValue, lastValue)) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {first, last, point};\n}\n", "import {TAU} from '../../helpers/index.js';\n\n// TODO: use elements.ArcElement instead\nexport class simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n\n  pathSegment(ctx, bounds, opts) {\n    const {x, y, radius} = this;\n    bounds = bounds || {start: 0, end: TAU};\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n\n  interpolate(point) {\n    const {x, y, radius} = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\n", "import {isFinite} from '../../helpers/index.js';\nimport {_createBoundaryLine} from './filler.helper.js';\nimport {_getTargetPixel, _getTargetValue} from './filler.options.js';\nimport {_buildStackLine} from './filler.target.stack.js';\nimport {simpleArc} from './simpleArc.js';\n\n/**\n * @typedef { import('../../core/core.controller.js').default } Chart\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.point.js').default } PointElement\n */\n\nexport function _getTarget(source) {\n  const {chart, fill, line} = source;\n\n  if (isFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n\n  if (fill === 'stack') {\n    return _buildStackLine(source);\n  }\n\n  if (fill === 'shape') {\n    return true;\n  }\n\n  const boundary = computeBoundary(source);\n\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n\n  return _createBoundaryLine(boundary, line);\n}\n\n/**\n * @param {Chart} chart\n * @param {number} index\n */\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\n\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\n\n\nfunction computeLinearBoundary(source) {\n  const {scale = {}, fill} = source;\n  const pixel = _getTargetPixel(fill, scale);\n\n  if (isFinite(pixel)) {\n    const horizontal = scale.isHorizontal();\n\n    return {\n      x: horizontal ? pixel : null,\n      y: horizontal ? null : pixel\n    };\n  }\n\n  return null;\n}\n\nfunction computeCircularBoundary(source) {\n  const {scale, fill} = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const start = options.reverse ? scale.max : scale.min;\n  const value = _getTargetValue(fill, scale, start);\n  const target = [];\n\n  if (options.grid.circular) {\n    const center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n\n  for (let i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\n\n", "import {clipArea, unclipArea, getDatasetClipArea} from '../../helpers/index.js';\nimport {_findSegmentEnd, _getBounds, _segments} from './filler.segment.js';\nimport {_getTarget} from './filler.target.js';\n\nexport function _drawfill(ctx, source, area) {\n  const target = _getTarget(source);\n  const {chart, index, line, scale, axis} = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {above = color, below = color} = fillOption || {};\n  const meta = chart.getDatasetMeta(index);\n  const clip = getDatasetClipArea(chart, meta);\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {line, target, above, below, area, scale, axis, clip});\n    unclipArea(ctx);\n  }\n}\n\nfunction doFill(ctx, cfg) {\n  const {line, target, above, below, area, scale, clip} = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n\n  ctx.save();\n\n  let fillColor = below;\n  if (below !== above) {\n    if (property === 'x') {\n      clipVertical(ctx, target, area.top);\n      fill(ctx, {line, target, color: above, scale, property, clip});\n      ctx.restore();\n      ctx.save();\n      clipVertical(ctx, target, area.bottom);\n    } else if (property === 'y') {\n      clipHorizontal(ctx, target, area.left);\n      fill(ctx, {line, target, color: below, scale, property, clip});\n      ctx.restore();\n      ctx.save();\n      clipHorizontal(ctx, target, area.right);\n      fillColor = above;\n    }\n  }\n  fill(ctx, {line, target, color: fillColor, scale, property, clip});\n\n  ctx.restore();\n}\n\nfunction clipVertical(ctx, target, clipY) {\n  const {segments, points} = target;\n  let first = true;\n  let lineLoop = false;\n\n  ctx.beginPath();\n  for (const segment of segments) {\n    const {start, end} = segment;\n    const firstPoint = points[start];\n    const lastPoint = points[_findSegmentEnd(start, end, points)];\n    if (first) {\n      ctx.moveTo(firstPoint.x, firstPoint.y);\n      first = false;\n    } else {\n      ctx.lineTo(firstPoint.x, clipY);\n      ctx.lineTo(firstPoint.x, firstPoint.y);\n    }\n    lineLoop = !!target.pathSegment(ctx, segment, {move: lineLoop});\n    if (lineLoop) {\n      ctx.closePath();\n    } else {\n      ctx.lineTo(lastPoint.x, clipY);\n    }\n  }\n\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction clipHorizontal(ctx, target, clipX) {\n  const {segments, points} = target;\n  let first = true;\n  let lineLoop = false;\n\n  ctx.beginPath();\n  for (const segment of segments) {\n    const {start, end} = segment;\n    const firstPoint = points[start];\n    const lastPoint = points[_findSegmentEnd(start, end, points)];\n    if (first) {\n      ctx.moveTo(firstPoint.x, firstPoint.y);\n      first = false;\n    } else {\n      ctx.lineTo(clipX, firstPoint.y);\n      ctx.lineTo(firstPoint.x, firstPoint.y);\n    }\n    lineLoop = !!target.pathSegment(ctx, segment, {move: lineLoop});\n    if (lineLoop) {\n      ctx.closePath();\n    } else {\n      ctx.lineTo(clipX, lastPoint.y);\n    }\n  }\n\n  ctx.lineTo(clipX, target.first().y);\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction fill(ctx, cfg) {\n  const {line, target, property, color, scale, clip} = cfg;\n  const segments = _segments(line, target, property);\n\n  for (const {source: src, target: tgt, start, end} of segments) {\n    const {style: {backgroundColor = color} = {}} = src;\n    const notShape = target !== true;\n\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n\n    clipBounds(ctx, scale, clip, notShape && _getBounds(property, start, end));\n\n    ctx.beginPath();\n\n    const lineLoop = !!line.pathSegment(ctx, src);\n\n    let loop;\n    if (notShape) {\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        interpolatedLineTo(ctx, target, end, property);\n      }\n\n      const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\n      loop = lineLoop && targetLoop;\n      if (!loop) {\n        interpolatedLineTo(ctx, target, start, property);\n      }\n    }\n\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n\n    ctx.restore();\n  }\n}\n\nfunction clipBounds(ctx, scale, clip, bounds) {\n  const chartArea = scale.chart.chartArea;\n  const {property, start, end} = bounds || {};\n\n  if (property === 'x' || property === 'y') {\n    let left, top, right, bottom;\n\n    if (property === 'x') {\n      left = start;\n      top = chartArea.top;\n      right = end;\n      bottom = chartArea.bottom;\n    } else {\n      left = chartArea.left;\n      top = start;\n      right = chartArea.right;\n      bottom = end;\n    }\n\n    ctx.beginPath();\n\n    if (clip) {\n      left = Math.max(left, clip.left);\n      right = Math.min(right, clip.right);\n      top = Math.max(top, clip.top);\n      bottom = Math.min(bottom, clip.bottom);\n    }\n\n    ctx.rect(left, top, right - left, bottom - top);\n    ctx.clip();\n  }\n}\n\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\n\n", "/**\n * Plugin based on discussion from the following Chart.js issues:\n * @see https://github.com/chartjs/Chart.js/issues/2380#issuecomment-279961569\n * @see https://github.com/chartjs/Chart.js/issues/2440#issuecomment-256461897\n */\n\nimport LineElement from '../../elements/element.line.js';\nimport {_drawfill} from './filler.drawing.js';\nimport {_shouldApplyFill} from './filler.helper.js';\nimport {_decodeFill, _resolveTarget} from './filler.options.js';\n\nexport default {\n  id: 'filler',\n\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: _decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line,\n        };\n      }\n\n      meta.$filler = source;\n      sources.push(source);\n    }\n\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n\n      source.fill = _resolveTarget(sources, i, options.propagate);\n    }\n  },\n\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n\n      source.line.updateControlPoints(area, source.axis);\n      if (draw && source.fill) {\n        _drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n\n      if (_shouldApplyFill(source)) {\n        _drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n\n    if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n\n    _drawfill(chart.ctx, source, chart.chartArea);\n  },\n\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n", "import defaults from '../core/core.defaults.js';\nimport Element from '../core/core.element.js';\nimport layouts from '../core/core.layouts.js';\nimport {addRoundedRectPath, drawPointLegend, renderText} from '../helpers/helpers.canvas.js';\nimport {\n  _isBetween,\n  callback as call,\n  clipArea,\n  getRtlAdapter,\n  overrideTextDirection,\n  restoreTextDirection,\n  toFont,\n  toPadding,\n  unclipArea,\n  valueOrDefault,\n} from '../helpers/index.js';\nimport {_alignStartEnd, _textX, _toLeftRightCenter} from '../helpers/helpers.extras.js';\nimport {toTRBLCorners} from '../helpers/helpers.options.js';\n\n/**\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n */\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n  }\n\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\n\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\n\nexport class Legend extends Element {\n\n  /**\n\t * @param {{ ctx: any; options: any; chart: any; }} config\n\t */\n  constructor(config) {\n    super();\n\n    this._added = false;\n\n    // Contains hit boxes for each dataset (in dataset order)\n    this.legendHitBoxes = [];\n\n    /**\n \t\t * @private\n \t\t */\n    this._hoveredItem = null;\n\n    // Are we in doughnut mode which has a different data type\n    this.doughnutMode = false;\n\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight, margins) {\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins;\n\n    this.setDimensions();\n    this.buildLabels();\n    this.fit();\n  }\n\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = this._margins.left;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = this._margins.top;\n      this.bottom = this.height;\n    }\n  }\n\n  buildLabels() {\n    const labelOpts = this.options.labels || {};\n    let legendItems = call(labelOpts.generateLabels, [this.chart], this) || [];\n\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, this.chart.data));\n    }\n\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, this.chart.data));\n    }\n\n    if (this.options.reverse) {\n      legendItems.reverse();\n    }\n\n    this.legendItems = legendItems;\n  }\n\n  fit() {\n    const {options, ctx} = this;\n\n    // The legend may not be displayed for a variety of reasons including\n    // the fact that the defaults got set to `false`.\n    // When the legend is not displayed, there are no guarantees that the options\n    // are correctly formatted so we need to bail out as early as possible.\n    if (!options.display) {\n      this.width = this.height = 0;\n      return;\n    }\n\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = this._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n\n    let width, height;\n\n    ctx.font = labelFont.string;\n\n    if (this.isHorizontal()) {\n      width = this.maxWidth; // fill all the width\n      height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = this.maxHeight; // fill all the height\n      width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n    }\n\n    this.width = Math.min(width, options.maxWidth || this.maxWidth);\n    this.height = Math.min(height, options.maxHeight || this.maxHeight);\n  }\n\n  /**\n\t * @private\n\t */\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxWidth, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    // Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n    const lineWidths = this.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n\n    let row = -1;\n    let top = -lineHeight;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n\n    return totalHeight;\n  }\n\n  _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n    const {ctx, maxHeight, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const columnSizes = this.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n\n    let left = 0;\n    let col = 0;\n\n    this.legendItems.forEach((legendItem, i) => {\n      const {itemWidth, itemHeight} = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n\n      // If too tall, go to new column\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight}); // previous column size\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n\n      // Store the hitbox width and height here. Final position will be updated in `draw`\n      hitboxes[i] = {left, top: currentColHeight, col, width: itemWidth, height: itemHeight};\n\n      // Get max width\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight}); // previous column size\n\n    return totalWidth;\n  }\n\n  adjustHitBoxes() {\n    if (!this.options.display) {\n      return;\n    }\n    const titleHeight = this._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}, rtl}} = this;\n    const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n        }\n        hitbox.top += this.top + titleHeight + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += this.left + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n        top += hitbox.height + padding;\n      }\n    }\n  }\n\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n\n  draw() {\n    if (this.options.display) {\n      const ctx = this.ctx;\n      clipArea(ctx, this);\n\n      this._draw();\n\n      unclipArea(ctx);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _draw() {\n    const {options: opts, columnSizes, lineWidths, ctx} = this;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const labelFont = toFont(labelOpts.font);\n    const {padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n\n    this.drawTitle();\n\n    // Canvas setup\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n\n    // current position\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n\n      // Set the ctx for the box\n      ctx.save();\n\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n\n      if (labelOpts.usePointStyle) {\n        // Recalculate x and y for drawPoint() because its expecting\n        // x and y to be center of figure (instead of top left)\n        const drawOptions = {\n          radius: boxHeight * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n\n        // Draw pointStyle as legend symbol\n        drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n      } else {\n        // Draw box as legend symbol\n        // Adjust position when boxHeight < fontSize (want it centered)\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n\n        ctx.beginPath();\n\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n\n      ctx.restore();\n    };\n\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n\n    // Horizontal\n    const isHorizontal = this.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n        y: this.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: this.left + padding,\n        y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n\n    overrideTextDirection(this.ctx, opts.textDirection);\n\n    const lineHeight = itemHeight + padding;\n    this.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor; // for strikethrough effect\n      ctx.fillStyle = legendItem.fontColor; // render in correct colour\n\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n\n      rtlHelper.setWidth(this.width);\n\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > this.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > this.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n      }\n\n      const realX = rtlHelper.x(x);\n\n      drawLegendBox(realX, y, legendItem);\n\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n\n      // Fill the actual label\n      fillText(rtlHelper.x(x), y, legendItem);\n\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else if (typeof legendItem.text !== 'string') {\n        const fontLineHeight = labelFont.lineHeight;\n        cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight) + padding;\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n\n    restoreTextDirection(this.ctx, opts.textDirection);\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {\n    const opts = this.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n\n    if (!titleOpts.display) {\n      return;\n    }\n\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const ctx = this.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n\n    // These defaults are used when the legend is vertical.\n    // When horizontal, they are computed below.\n    let left = this.left;\n    let maxWidth = this.width;\n\n    if (this.isHorizontal()) {\n      // Move left / right so that the title is above the legend lines\n      maxWidth = Math.max(...this.lineWidths);\n      y = this.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n    } else {\n      // Move down so that the title is above the legend stack in every alignment\n      const maxHeight = this.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n    }\n\n    // Now that we know the left edge of the inner legend box, compute the correct\n    // X coordinate from the title alignment\n    const x = _alignStartEnd(position, left, left + maxWidth);\n\n    // Canvas setup\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n\n  /**\n\t * @private\n\t */\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n\n  /**\n\t * @private\n\t */\n  _getLegendItemAt(x, y) {\n    let i, hitBox, lh;\n\n    if (_isBetween(x, this.left, this.right)\n      && _isBetween(y, this.top, this.bottom)) {\n      // See if we are touching one of the dataset boxes\n      lh = this.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n\n        if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width)\n          && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n          // Touching an element\n          return this.legendItems[i];\n        }\n      }\n    }\n\n    return null;\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e - The event to handle\n\t */\n  handleEvent(e) {\n    const opts = this.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n\n    // Chart event already has relative position in it\n    const hoveredItem = this._getLegendItemAt(e.x, e.y);\n\n    if (e.type === 'mousemove' || e.type === 'mouseout') {\n      const previous = this._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        call(opts.onLeave, [e, previous, this], this);\n      }\n\n      this._hoveredItem = hoveredItem;\n\n      if (hoveredItem && !sameItem) {\n        call(opts.onHover, [e, hoveredItem, this], this);\n      }\n    } else if (hoveredItem) {\n      call(opts.onClick, [e, hoveredItem, this], this);\n    }\n  }\n}\n\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n  const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n  const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n  return {itemWidth, itemHeight};\n}\n\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n  let legendItemText = legendItem.text;\n  if (legendItemText && typeof legendItemText !== 'string') {\n    legendItemText = legendItemText.reduce((a, b) => a.length > b.length ? a : b);\n  }\n  return boxWidth + (labelFont.size / 2) + ctx.measureText(legendItemText).width;\n}\n\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n  let itemHeight = _itemHeight;\n  if (typeof legendItem.text !== 'string') {\n    itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n  }\n  return itemHeight;\n}\n\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n  const labelHeight = legendItem.text ? legendItem.text.length : 0;\n  return fontLineHeight * labelHeight;\n}\n\nfunction isListened(type, opts) {\n  if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\n\nexport default {\n  id: 'legend',\n\n  /**\n\t * For tests\n\t * @private\n\t */\n  _element: Legend,\n\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n\n  // During the beforeUpdate step, the layout configuration needs to run\n  // This ensures that if the legend position changes (via an option update)\n  // the layout system respects the change. See https://github.com/chartjs/Chart.js/issues/7527\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n\n  // The labels need to be built after datasets are updated to ensure that colors\n  // and other styling are correct. See https://github.com/chartjs/Chart.js/issues/6968\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n\n\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n\n    // a callback that will handle\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n\n    onHover: null,\n    onLeave: null,\n\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      // Generates labels shown in the legend\n      // Valid properties to return:\n      // text : text to display\n      // fillStyle : fill of coloured box\n      // strokeStyle: stroke of coloured box\n      // hidden : if this legend item refers to a hidden item\n      // lineCap : cap style for line\n      // lineDash\n      // lineDashOffset :\n      // lineJoin :\n      // lineWidth :\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color, useBorderRadius, borderRadius}} = chart.legend.options;\n\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n\n            // Below is extra data used for toggling the datasets\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n", "import Element from '../core/core.element.js';\nimport layouts from '../core/core.layouts.js';\nimport {PI, isArray, toPadding, toFont} from '../helpers/index.js';\nimport {_toLeftRightCenter, _alignStartEnd} from '../helpers/helpers.extras.js';\nimport {renderText} from '../helpers/helpers.canvas.js';\n\nexport class Title extends Element {\n  /**\n\t * @param {{ ctx: any; options: any; chart: any; }} config\n\t */\n  constructor(config) {\n    super();\n\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight) {\n    const opts = this.options;\n\n    this.left = 0;\n    this.top = 0;\n\n    if (!opts.display) {\n      this.width = this.height = this.right = this.bottom = 0;\n      return;\n    }\n\n    this.width = this.right = maxWidth;\n    this.height = this.bottom = maxHeight;\n\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    this._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n\n    if (this.isHorizontal()) {\n      this.height = textSize;\n    } else {\n      this.width = textSize;\n    }\n  }\n\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n\n  draw() {\n    const ctx = this.ctx;\n    const opts = this.options;\n\n    if (!opts.display) {\n      return;\n    }\n\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + this._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = this._drawArgs(offset);\n\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\n\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\n\nexport default {\n  id: 'title',\n\n  /**\n\t * For tests\n\t * @private\n\t */\n  _element: Title,\n\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000         // by default greater than legend (1000) to be above\n  },\n\n  defaultRoutes: {\n    color: 'color'\n  },\n\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n", "import {Title} from './plugin.title.js';\nimport layouts from '../core/core.layouts.js';\n\nconst map = new WeakMap();\n\nexport default {\n  id: 'subtitle',\n\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal',\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500         // by default greater than legend (1000) and smaller than title (2000)\n  },\n\n  defaultRoutes: {\n    color: 'color'\n  },\n\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n", "import Animations from '../core/core.animations.js';\nimport Element from '../core/core.element.js';\nimport {addRoundedRectPath} from '../helpers/helpers.canvas.js';\nimport {each, noop, isNullOrUndef, isArray, _elementsEqual, isObject} from '../helpers/helpers.core.js';\nimport {toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options.js';\nimport {getRtlAdapter, overrideTextDirection, restoreTextDirection} from '../helpers/helpers.rtl.js';\nimport {distanceBetweenPoints, _limitValue} from '../helpers/helpers.math.js';\nimport {createContext, drawPoint} from '../helpers/index.js';\n\n/**\n * @typedef { import('../platform/platform.base.js').Chart } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../types/index.js').ActiveElement } ActiveElement\n * @typedef { import('../core/core.interaction.js').InteractionItem } InteractionItem\n */\n\nconst positioners = {\n  /**\n\t * Average mode places the tooltip at the average position of the elements shown\n\t */\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n\n    let i, len;\n    let xSet = new Set();\n    let y = 0;\n    let count = 0;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        xSet.add(pos.x);\n        y += pos.y;\n        ++count;\n      }\n    }\n\n    // No visible items where found, return false so we don't have to divide by 0 which reduces in NaN\n    if (count === 0 || xSet.size === 0) {\n      return false;\n    }\n\n    const xAverage = [...xSet].reduce((a, b) => a + b) / xSet.size;\n\n    return {\n      x: xAverage,\n      y: y / count\n    };\n  },\n\n  /**\n\t * Gets the tooltip position nearest of the item nearest to the event position\n\t */\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n\n    return {\n      x,\n      y\n    };\n  }\n};\n\n// Helper to push or concat based on if the 2nd parameter is an array or not\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      // base = base.concat(toPush);\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n\n  return base;\n}\n\n/**\n * Returns array of strings split by newline\n * @param {*} str - The value to split by newline.\n * @returns {string|string[]} value if newline present - Returned from String split() method\n * @function\n */\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\n\n\n/**\n * Private helper to create a tooltip item model\n * @param {Chart} chart\n * @param {ActiveElement} item - {element, index, datasetIndex} to create the tooltip item for\n * @return new tooltip item\n */\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\n\n/**\n * Get the size of the tooltip\n */\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip.chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n\n  // Count of all lines in the body\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    // Body lines may include some extra height depending on boxHeight\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n\n  // Title width\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n\n  ctx.save();\n\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n\n  // Body width\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n\n  // Body lines may include some extra width due to the color box\n  widthPadding = options.displayColors ? (boxWidth + 2 + options.boxPadding) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n\n  // Reset back to 0\n  widthPadding = 0;\n\n  // Footer width\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n\n  ctx.restore();\n\n  // Add padding\n  width += padding.width;\n\n  return {width, height};\n}\n\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\n\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\n\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n\n  return xAlign;\n}\n\n/**\n * Helper to get the alignment of a tooltip given the size\n */\nfunction determineAlignment(chart, options, size) {\n  const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n\n  return {\n    xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\n\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\n\nfunction alignY(size, yAlign, paddingAndSize) {\n  // eslint-disable-next-line prefer-const\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\n\n/**\n * Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n */\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\n  } else if (xAlign === 'right') {\n    x += Math.max(topRight, bottomRight) + caretSize;\n  }\n\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\n\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\n\n/**\n * Helper to build before and after body lines\n */\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\n\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return createContext(parent, {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\n\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\n\nconst defaultCallbacks = {\n  // Args are: (tooltipItems, data)\n  beforeTitle: noop,\n  title(tooltipItems) {\n    if (tooltipItems.length > 0) {\n      const item = tooltipItems[0];\n      const labels = item.chart.data.labels;\n      const labelCount = labels ? labels.length : 0;\n\n      if (this && this.options && this.options.mode === 'dataset') {\n        return item.dataset.label || '';\n      } else if (item.label) {\n        return item.label;\n      } else if (labelCount > 0 && item.dataIndex < labelCount) {\n        return labels[item.dataIndex];\n      }\n    }\n\n    return '';\n  },\n  afterTitle: noop,\n\n  // Args are: (tooltipItems, data)\n  beforeBody: noop,\n\n  // Args are: (tooltipItem, data)\n  beforeLabel: noop,\n  label(tooltipItem) {\n    if (this && this.options && this.options.mode === 'dataset') {\n      return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n    }\n\n    let label = tooltipItem.dataset.label || '';\n\n    if (label) {\n      label += ': ';\n    }\n    const value = tooltipItem.formattedValue;\n    if (!isNullOrUndef(value)) {\n      label += value;\n    }\n    return label;\n  },\n  labelColor(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      borderColor: options.borderColor,\n      backgroundColor: options.backgroundColor,\n      borderWidth: options.borderWidth,\n      borderDash: options.borderDash,\n      borderDashOffset: options.borderDashOffset,\n      borderRadius: 0,\n    };\n  },\n  labelTextColor() {\n    return this.options.bodyColor;\n  },\n  labelPointStyle(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      pointStyle: options.pointStyle,\n      rotation: options.rotation,\n    };\n  },\n  afterLabel: noop,\n\n  // Args are: (tooltipItems, data)\n  afterBody: noop,\n\n  // Args are: (tooltipItems, data)\n  beforeFooter: noop,\n  footer: noop,\n  afterFooter: noop\n};\n\n/**\n * Invoke callback from object with context and arguments.\n * If callback returns `undefined`, then will be invoked default callback.\n * @param {Record<keyof typeof defaultCallbacks, Function>} callbacks\n * @param {keyof typeof defaultCallbacks} name\n * @param {*} ctx\n * @param {*} arg\n * @returns {any}\n */\nfunction invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n  const result = callbacks[name].call(ctx, arg);\n\n  if (typeof result === 'undefined') {\n    return defaultCallbacks[name].call(ctx, arg);\n  }\n\n  return result;\n}\n\nexport class Tooltip extends Element {\n\n  /**\n   * @namespace Chart.Tooltip.positioners\n   */\n  static positioners = positioners;\n\n  constructor(config) {\n    super();\n\n    this.opacity = 0;\n    this._active = [];\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    // TODO: V4, make this private, rename to `_labelStyles`, and combine with `labelPointStyles`\n    // and `labelTextColors` to create a single variable\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n\n  /**\n\t * @private\n\t */\n  _resolveAnimations() {\n    const cached = this._cachedAnimations;\n\n    if (cached) {\n      return cached;\n    }\n\n    const chart = this.chart;\n    const options = this.options.setContext(this.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(this.chart, opts);\n    if (opts._cacheable) {\n      this._cachedAnimations = Object.freeze(animations);\n    }\n\n    return animations;\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext() {\n    return this.$context ||\n\t\t\t(this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n  }\n\n  getTitle(context, options) {\n    const {callbacks} = options;\n\n    const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n    const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n    const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n\n    return lines;\n  }\n\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(\n      invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems)\n    );\n  }\n\n  getBody(tooltipItems, options) {\n    const {callbacks} = options;\n    const bodyItems = [];\n\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n      pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n      pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n\n      bodyItems.push(bodyItem);\n    });\n\n    return bodyItems;\n  }\n\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(\n      invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems)\n    );\n  }\n\n  // Get the footer and beforeFooter and afterFooter lines\n  getFooter(tooltipItems, options) {\n    const {callbacks} = options;\n\n    const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n    const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n    const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n\n    return lines;\n  }\n\n  /**\n\t * @private\n\t */\n  _createItems(options) {\n    const active = this._active;\n    const data = this.chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(this.chart, active[i]));\n    }\n\n    // If the user provided a filter function, use it to modify the tooltip items\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n\n    // If the user provided a sorting function, use it to modify the tooltip items\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n\n    // Determine colors for boxes\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n      labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n      labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n    });\n\n    this.labelColors = labelColors;\n    this.labelPointStyles = labelPointStyles;\n    this.labelTextColors = labelTextColors;\n    this.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n\n  update(changed, replay) {\n    const options = this.options.setContext(this.getContext());\n    const active = this._active;\n    let properties;\n    let tooltipItems = [];\n\n    if (!active.length) {\n      if (this.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(this, active, this._eventPosition);\n      tooltipItems = this._createItems(options);\n\n      this.title = this.getTitle(tooltipItems, options);\n      this.beforeBody = this.getBeforeBody(tooltipItems, options);\n      this.body = this.getBody(tooltipItems, options);\n      this.afterBody = this.getAfterBody(tooltipItems, options);\n      this.footer = this.getFooter(tooltipItems, options);\n\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(this.chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n\n      this.xAlign = alignment.xAlign;\n      this.yAlign = alignment.yAlign;\n\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n\n    this._tooltipItems = tooltipItems;\n    this.$context = undefined;\n\n    if (properties) {\n      this._resolveAnimations().update(this, properties);\n    }\n\n    if (changed && options.external) {\n      options.external.call(this, {chart: this.chart, tooltip: this, replay});\n    }\n  }\n\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {caretSize, cornerRadius} = options;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n\n        // Left draws bottom -> top, this y1 is on the bottom\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n\n        // Right draws top -> bottom, thus y1 is on the top\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + Math.max(topLeft, bottomLeft) + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n\n        // Top draws left -> right, thus x1 is on the left\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n\n        // Bottom draws right -> left, thus x1 is on the right\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n\n  drawTitle(pt, ctx, options) {\n    const title = this.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      pt.x = getAlignedX(this, options.titleAlign, options);\n\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing; // Line Height and spacing\n\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n        }\n      }\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const labelColor = this.labelColors[i];\n    const labelPointStyle = this.labelPointStyles[i];\n    const {boxHeight, boxWidth} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(this, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2, // fit the circle in the box\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      // Recalculate x and y for drawPoint() because its expecting\n      // x and y to be center of figure (instead of top left)\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n\n      // Fill the point with white so that colours merge nicely if the opacity is < 1\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n\n      // Draw the point\n      ctx.strokeStyle = labelColor.borderColor;\n      ctx.fillStyle = labelColor.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      // Border\n      ctx.lineWidth = isObject(labelColor.borderWidth) ? Math.max(...Object.values(labelColor.borderWidth)) : (labelColor.borderWidth || 1); // TODO, v4 remove fallback\n      ctx.strokeStyle = labelColor.borderColor;\n      ctx.setLineDash(labelColor.borderDash || []);\n      ctx.lineDashOffset = labelColor.borderDashOffset || 0;\n\n      // Fill a white rect so that colours merge nicely if the opacity is < 1\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n      const borderRadius = toTRBLCorners(labelColor.borderRadius);\n\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n\n        // Inner square\n        ctx.fillStyle = labelColor.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        // Normal rect\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        // Inner square\n        ctx.fillStyle = labelColor.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n\n    // restore fillStyle\n    ctx.fillStyle = this.labelTextColors[i];\n  }\n\n  drawBody(pt, ctx, options) {\n    const {body} = this;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n\n    const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n\n    pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n\n    // Before body lines\n    ctx.fillStyle = options.bodyColor;\n    each(this.beforeBody, fillLineOfText);\n\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + boxPadding) : (boxWidth + 2 + boxPadding)\n      : 0;\n\n    // Draw body lines now\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = this.labelTextColors[i];\n\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n\n      lines = bodyItem.lines;\n      // Draw Legend-like boxes if needed\n      if (displayColors && lines.length) {\n        this._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        // Reset for any lines that don't include colorbox\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n\n      each(bodyItem.after, fillLineOfText);\n    }\n\n    // Reset back to 0 for after body\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n\n    // After body lines\n    each(this.afterBody, fillLineOfText);\n    pt.y -= bodySpacing; // Remove last body spacing\n  }\n\n  drawFooter(pt, ctx, options) {\n    const footer = this.footer;\n    const length = footer.length;\n    let footerFont, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      pt.x = getAlignedX(this, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n\n      footerFont = toFont(options.footerFont);\n\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(options.cornerRadius);\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n\n    ctx.beginPath();\n    ctx.moveTo(x + topLeft, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - topRight, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - bottomRight);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + bottomLeft, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + topLeft);\n    ctx.quadraticCurveTo(x, y, x + topLeft, y);\n    ctx.closePath();\n\n    ctx.fill();\n\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n\n  /**\n\t * Update x/y animation targets when _active elements are animating too\n\t * @private\n\t */\n  _updateAnimationTarget(options) {\n    const chart = this.chart;\n    const anims = this.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(this, this._active, this._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, this._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        this.width = size.width;\n        this.height = size.height;\n        this.caretX = position.x;\n        this.caretY = position.y;\n        this._resolveAnimations().update(this, point);\n      }\n    }\n  }\n\n  /**\n   * Determine if the tooltip will draw anything\n   * @returns {boolean} True if the tooltip will render\n   */\n  _willRender() {\n    return !!this.opacity;\n  }\n\n  draw(ctx) {\n    const options = this.options.setContext(this.getContext());\n    let opacity = this.opacity;\n\n    if (!opacity) {\n      return;\n    }\n\n    this._updateAnimationTarget(options);\n\n    const tooltipSize = {\n      width: this.width,\n      height: this.height\n    };\n    const pt = {\n      x: this.x,\n      y: this.y\n    };\n\n    // IE11/Edge does not like very small opacities, so snap to 0\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n\n    const padding = toPadding(options.padding);\n\n    // Truthy/falsey value for empty tooltip\n    const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n\n      // Draw Background\n      this.drawBackground(pt, ctx, tooltipSize, options);\n\n      overrideTextDirection(ctx, options.textDirection);\n\n      pt.y += padding.top;\n\n      // Titles\n      this.drawTitle(pt, ctx, options);\n\n      // Body\n      this.drawBody(pt, ctx, options);\n\n      // Footer\n      this.drawFooter(pt, ctx, options);\n\n      restoreTextDirection(ctx, options.textDirection);\n\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * Get active elements in the tooltip\n\t * @returns {Array} Array of elements that are active in the tooltip\n\t */\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  /**\n\t * Set active elements in the tooltip\n\t * @param {array} activeElements Array of active datasetIndex/index pairs.\n\t * @param {object} eventPosition Synthetic event position used in positioning\n\t */\n  setActiveElements(activeElements, eventPosition) {\n    const lastActive = this._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.chart.getDatasetMeta(datasetIndex);\n\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = this._positionChanged(active, eventPosition);\n\n    if (changed || positionChanged) {\n      this._active = active;\n      this._eventPosition = eventPosition;\n      this._ignoreReplayEvents = true;\n      this.update(true);\n    }\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e - The event to handle\n\t * @param {boolean} [replay] - This is a replayed event (from update)\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\n\t * @returns {boolean} true if the tooltip changed\n\t */\n  handleEvent(e, replay, inChartArea = true) {\n    if (replay && this._ignoreReplayEvents) {\n      return false;\n    }\n    this._ignoreReplayEvents = false;\n\n    const options = this.options;\n    const lastActive = this._active || [];\n    const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n\n    // When there are multiple items shown, but the tooltip position is nearest mode\n    // an update may need to be made because our position may have changed even though\n    // the items are the same as before.\n    const positionChanged = this._positionChanged(active, e);\n\n    // Remember Last Actives\n    const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n\n    // Only handle target event on tooltip change\n    if (changed) {\n      this._active = active;\n\n      if (options.enabled || options.external) {\n        this._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n\n        this.update(true, replay);\n      }\n    }\n\n    return changed;\n  }\n\n  /**\n\t * Helper for determining the active elements for event\n\t * @param {ChartEvent} e - The event to handle\n\t * @param {InteractionItem[]} lastActive - Previously active elements\n\t * @param {boolean} [replay] - This is a replayed event (from update)\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\n\t * @returns {InteractionItem[]} - Active elements\n\t * @private\n\t */\n  _getActiveElements(e, lastActive, replay, inChartArea) {\n    const options = this.options;\n\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      // Let user control the active elements outside chartArea. Eg. using Legend.\n      // But make sure that active elements are still valid.\n      return lastActive.filter(i =>\n        this.chart.data.datasets[i.datasetIndex] &&\n        this.chart.getDatasetMeta(i.datasetIndex).controller.getParsed(i.index) !== undefined\n      );\n    }\n\n    // Find Active Elements for tooltips\n    const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n\n    if (options.reverse) {\n      active.reverse();\n    }\n\n    return active;\n  }\n\n  /**\n\t * Determine if the active elements + event combination changes the\n\t * tooltip position\n\t * @param {array} active - Active elements\n\t * @param {ChartEvent} e - Event that triggered the position change\n\t * @returns {boolean} True if the position has changed\n\t */\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\n\nexport default {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({chart, options});\n    }\n  },\n\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n\n    if (tooltip && tooltip._willRender()) {\n      const args = {\n        tooltip\n      };\n\n      if (chart.notifyPlugins('beforeTooltipDraw', {...args, cancelable: true}) === false) {\n        return;\n      }\n\n      tooltip.draw(chart.ctx);\n\n      chart.notifyPlugins('afterTooltipDraw', args);\n    }\n  },\n\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      // If the event is replayed from `update`, we should evaluate with the final positions.\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n        // notify chart about the change, so it will render\n        args.changed = true;\n      }\n    }\n  },\n\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    boxPadding: 0,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: defaultCallbacks\n  },\n\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n\n  // Resolve additionally from `interaction` options and defaults.\n  additionalOptionScopes: ['interaction']\n};\n", "import Scale from '../core/core.scale.js';\nimport {isNullOrUndef, valueOrDefault, _limitValue} from '../helpers/index.js';\n\nconst addIfString = (labels, raw, index, addedLabels) => {\n  if (typeof raw === 'string') {\n    index = labels.push(raw) - 1;\n    addedLabels.unshift({index, label: raw});\n  } else if (isNaN(raw)) {\n    index = null;\n  }\n  return index;\n};\n\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index, addedLabels);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\n\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\n\nfunction _getLabelForValue(value) {\n  const labels = this.getLabels();\n\n  if (value >= 0 && value < labels.length) {\n    return labels[value];\n  }\n  return value;\n}\n\nexport default class CategoryScale extends Scale {\n\n  static id = 'category';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: _getLabelForValue\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this._startValue = undefined;\n    this._valueRange = 0;\n    this._addedLabels = [];\n  }\n\n  init(scaleOptions) {\n    const added = this._addedLabels;\n    if (added.length) {\n      const labels = this.getLabels();\n      for (const {index, label} of added) {\n        if (labels[index] === label) {\n          labels.splice(index, 1);\n        }\n      }\n      this._addedLabels = [];\n    }\n    super.init(scaleOptions);\n  }\n\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n    return validIndex(index, labels.length - 1);\n  }\n\n  determineDataLimits() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this.getMinMax(true);\n\n    if (this.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = this.getLabels().length - 1;\n      }\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const min = this.min;\n    const max = this.max;\n    const offset = this.options.offset;\n    const ticks = [];\n    let labels = this.getLabels();\n\n    // If we are viewing some subset of labels, slice the original array\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n\n    this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    this._startValue = this.min - (offset ? 0.5 : 0);\n\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n\n  getLabelForValue(value) {\n    return _getLabelForValue.call(this, value);\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    super.configure();\n\n    if (!this.isHorizontal()) {\n      // For backward compatibility, vertical category scale reverse is inverted.\n      this._reversePixels = !this._reversePixels;\n    }\n  }\n\n  // Used to get data value locations. Value can either be an index or a numerical value\n  getPixelForValue(value) {\n    if (typeof value !== 'number') {\n      value = this.parse(value);\n    }\n\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  // Must override base implementation because it calls getPixelForValue\n  // and category scale can have duplicate values\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  getValueForPixel(pixel) {\n    return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n  }\n\n  getBasePixel() {\n    return this.bottom;\n  }\n}\n", "import {isNullOrUndef} from '../helpers/helpers.core.js';\nimport {almostEquals, almostWhole, niceNum, _decimalPlaces, _setMinAndMaxByKey, sign, toRadians} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\n\n/**\n * Generate a set of linear ticks for an axis\n * 1. If generationOptions.min, generationOptions.max, and generationOptions.step are defined:\n *    if (max - min) / step is an integer, ticks are generated as [min, min + step, ..., max]\n *    Note that the generationOptions.maxCount setting is respected in this scenario\n *\n * 2. If generationOptions.min, generationOptions.max, and generationOptions.count is defined\n *    spacing = (max - min) / count\n *    Ticks are generated as [min, min + spacing, ..., max]\n *\n * 3. If generationOptions.count is defined\n *    spacing = (niceMax - niceMin) / count\n *\n * 4. Compute optimal spacing of ticks using niceNum algorithm\n *\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {object[]} array of tick objects\n */\nfunction generateTicks(generationOptions, dataRange) {\n  const ticks = [];\n  // To get a \"nice\" value for the tick spacing, we will use the appropriately named\n  // \"nice number\" algorithm. See https://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n  // for details.\n\n  const MIN_SPACING = 1e-14;\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n\n  // Beyond MIN_SPACING floating point numbers being to lose precision\n  // such that we can't do the math necessary to generate ticks\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    // If the calculated num of spaces exceeds maxNumSpaces, recalculate it\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n\n  if (!isNullOrUndef(precision)) {\n    // If the user specified a precision, round to that number of decimal places\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    // Case 1: If min, max and stepSize are set and they make an evenly spaced scale use it.\n    // spacing = step;\n    // numSpaces = (max - min) / spacing;\n    // Note that we round here to handle the case where almostWhole translated an FP error\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    // Cases 2 & 3, we have a count specified. Handle optional user defined edges to the range.\n    // Sometimes these are no-ops, but it makes the code a lot clearer\n    // and when a user defined range is specified, we want the correct ticks\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    // Case 4\n    numSpaces = (niceMax - niceMin) / spacing;\n\n    // If very close to our rounded value, use it.\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n\n  // The spacing will have changed in cases 1, 2, and 3 so the factor cannot be computed\n  // until this point\n  const decimalPlaces = Math.max(\n    _decimalPlaces(spacing),\n    _decimalPlaces(niceMin)\n  );\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({value: min});\n\n      if (niceMin < min) {\n        j++; // Skip niceMin\n      }\n      // If the next nice tick is close to min, skip it\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n\n  for (; j < numSpaces; ++j) {\n    const tickValue = Math.round((niceMin + j * spacing) * factor) / factor;\n    if (maxDefined && tickValue > max) {\n      break;\n    }\n    ticks.push({value: tickValue});\n  }\n\n  if (maxDefined && includeBounds && niceMax !== max) {\n    // If the previous tick is too close to max, replace it with max, else add max\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({value: niceMax});\n  }\n\n  return ticks;\n}\n\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\n\nexport default class LinearScaleBase extends Scale {\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.start = undefined;\n    /** @type {number} */\n    this.end = undefined;\n    /** @type {number} */\n    this._startValue = undefined;\n    /** @type {number} */\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n\n    return +raw;\n  }\n\n  handleTickRangeOptions() {\n    const {beginAtZero} = this.options;\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this;\n\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n\n    if (min === max) {\n      let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n\n      setMax(max + offset);\n\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n\n  getTickLimit() {\n    const tickOpts = this.options.ticks;\n    // eslint-disable-next-line prefer-const\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n\n    if (stepSize) {\n      maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n      if (maxTicks > 1000) {\n        console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n        maxTicks = 1000;\n      }\n    } else {\n      maxTicks = this.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n\n    return maxTicks;\n  }\n\n  /**\n\t * @protected\n\t */\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    // Figure out what the max number of ticks we can support it is based on the size of\n    // the axis area. For now, we say that the minimum tick spacing in pixels must be 40\n    // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n    // the graph. Make sure we always have at least 2 ticks\n    let maxTicks = this.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: this._maxDigits(),\n      horizontal: this.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = this._range || this;\n    const ticks = generateTicks(numericGeneratorOptions, dataRange);\n\n    // At this point, we need to update our max and min given the tick values,\n    // since we probably have expanded the range of the scale\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    const ticks = this.ticks;\n    let start = this.min;\n    let end = this.max;\n\n    super.configure();\n\n    if (this.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    this._startValue = start;\n    this._endValue = end;\n    this._valueRange = end - start;\n  }\n\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n}\n", "import {isFinite} from '../helpers/helpers.core.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\nimport {toRadians} from '../helpers/index.js';\n\nexport default class LinearScale extends LinearScaleBase {\n\n  static id = 'linear';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.numeric\n    }\n  };\n\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n\n    this.min = isFinite(min) ? min : 0;\n    this.max = isFinite(max) ? max : 1;\n\n    // Common base implementation to handle min, max, beginAtZero\n    this.handleTickRangeOptions();\n  }\n\n  /**\n\t * Returns the maximum number of ticks based on the scale dimension\n\t * @protected\n \t */\n  computeTickLimit() {\n    const horizontal = this.isHorizontal();\n    const length = horizontal ? this.width : this.height;\n    const minRotation = toRadians(this.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = this._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n\n  // Utils\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\n", "import {finiteOrDefault, isFinite} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {_setMinAndMaxByKey, log10} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\n\nconst log10Floor = v => Math.floor(log10(v));\nconst changeExponent = (v, m) => Math.pow(10, log10Floor(v) + m);\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, log10Floor(tickVal)));\n  return remain === 1;\n}\n\nfunction steps(min, max, rangeExp) {\n  const rangeStep = Math.pow(10, rangeExp);\n  const start = Math.floor(min / rangeStep);\n  const end = Math.ceil(max / rangeStep);\n  return end - start;\n}\n\nfunction startExp(min, max) {\n  const range = max - min;\n  let rangeExp = log10Floor(range);\n  while (steps(min, max, rangeExp) > 10) {\n    rangeExp++;\n  }\n  while (steps(min, max, rangeExp) < 10) {\n    rangeExp--;\n  }\n  return Math.min(rangeExp, log10Floor(min));\n}\n\n\n/**\n * Generate a set of logarithmic ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {object[]} array of tick objects\n */\nfunction generateTicks(generationOptions, {min, max}) {\n  min = finiteOrDefault(generationOptions.min, min);\n  const ticks = [];\n  const minExp = log10Floor(min);\n  let exp = startExp(min, max);\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  const stepSize = Math.pow(10, exp);\n  const base = minExp > exp ? Math.pow(10, minExp) : 0;\n  const start = Math.round((min - base) * precision) / precision;\n  const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n  let significand = Math.floor((start - offset) / Math.pow(10, exp));\n  let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n  while (value < max) {\n    ticks.push({value, major: isMajor(value), significand});\n    if (significand >= 10) {\n      significand = significand < 15 ? 15 : 20;\n    } else {\n      significand++;\n    }\n    if (significand >= 20) {\n      exp++;\n      significand = 2;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n  }\n  const lastTick = finiteOrDefault(generationOptions.max, value);\n  ticks.push({value: lastTick, major: isMajor(lastTick), significand});\n\n  return ticks;\n}\n\nexport default class LogarithmicScale extends Scale {\n\n  static id = 'logarithmic';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.logarithmic,\n      major: {\n        enabled: true\n      }\n    }\n  };\n\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.start = undefined;\n    /** @type {number} */\n    this.end = undefined;\n    /** @type {number} */\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isFinite(value) && value > 0 ? value : null;\n  }\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n\n    this.min = isFinite(min) ? Math.max(0, min) : null;\n    this.max = isFinite(max) ? Math.max(0, max) : null;\n\n    if (this.options.beginAtZero) {\n      this._zero = true;\n    }\n\n    // if data has `0` in it or `beginAtZero` is true, min (non zero) value is at bottom\n    // of scale, and it does not equal suggestedMin, lower the min bound by one exp.\n    if (this._zero && this.min !== this._suggestedMin && !isFinite(this._userMin)) {\n      this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n    }\n\n    this.handleTickRangeOptions();\n  }\n\n  handleTickRangeOptions() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let min = this.min;\n    let max = this.max;\n\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n\n    if (min === max) {\n      if (min <= 0) { // includes null\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(changeExponent(min, -1));\n        setMax(changeExponent(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(changeExponent(max, -1));\n    }\n    if (max <= 0) {\n\n      setMax(changeExponent(min, +1));\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n\n    const generationOptions = {\n      min: this._userMin,\n      max: this._userMax\n    };\n    const ticks = generateTicks(generationOptions, this);\n\n    // At this point, we need to update our max and min given the tick values,\n    // since we probably have expanded the range of the scale\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  /**\n\t * @param {number} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    return value === undefined\n      ? '0'\n      : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    const start = this.min;\n\n    super.configure();\n\n    this._startValue = log10(start);\n    this._valueRange = log10(this.max) - log10(start);\n  }\n\n  getPixelForValue(value) {\n    if (value === undefined || value === 0) {\n      value = this.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return this.getPixelForDecimal(value === this.min\n      ? 0\n      : (log10(value) - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    const decimal = this.getDecimalForPixel(pixel);\n    return Math.pow(10, this._startValue + decimal * this._valueRange);\n  }\n}\n", "import defaults from '../core/core.defaults.js';\nimport {_longestText, addRoundedRectPath, renderText, _isPointInArea} from '../helpers/helpers.canvas.js';\nimport {HALF_PI, TAU, toDegrees, toRadians, _normalizeAngle, PI} from '../helpers/helpers.math.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\nimport {valueOrDefault, isArray, isFinite, callback as callCallback, isNullOrUndef} from '../helpers/helpers.core.js';\nimport {createContext, toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options.js';\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\n\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\n\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\n\n/**\n * Helper function to fit a radial linear scale with point labels\n */\nfunction fitWithPointLabels(scale) {\n\n  // Right, this is really confusing and there is a lot of maths going on here\n  // The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n  //\n  // Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n  //\n  // Solution:\n  //\n  // We assume the radius of the polygon is half the size of the canvas at first\n  // at each index we check if the text overlaps.\n  //\n  // Where it does, we store that angle and that index.\n  //\n  // After finding the largest index and angle we calculate how much we need to remove\n  // from the shape radius to move the point inwards by that x.\n  //\n  // We average the left and right distances to get the maximum shape radius that can fit in the box\n  // along with labels.\n  //\n  // Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n  // on each side, removing that from the size, halving it and adding the left x protrusion width.\n  //\n  // This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n  // and position it in the most space efficient manner\n  //\n  // https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n\n  // Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n  // Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n  const orig = {\n    l: scale.left + scale._padding.left,\n    r: scale.right - scale._padding.right,\n    t: scale.top + scale._padding.top,\n    b: scale.bottom - scale._padding.bottom\n  };\n  const limits = Object.assign({}, orig);\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale._pointLabels.length;\n  const pointLabelOpts = scale.options.pointLabels;\n  const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n\n  for (let i = 0; i < valueCount; i++) {\n    const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n\n    const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n    const angle = Math.round(toDegrees(angleRadians));\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n  }\n\n  scale.setCenterPoint(\n    orig.l - limits.l,\n    limits.r - orig.r,\n    orig.t - limits.t,\n    limits.b - orig.b\n  );\n\n  // Now that text size is determined, compute the full positions\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\n\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n  const sin = Math.abs(Math.sin(angle));\n  const cos = Math.abs(Math.cos(angle));\n  let x = 0;\n  let y = 0;\n  if (hLimits.start < orig.l) {\n    x = (orig.l - hLimits.start) / sin;\n    limits.l = Math.min(limits.l, orig.l - x);\n  } else if (hLimits.end > orig.r) {\n    x = (hLimits.end - orig.r) / sin;\n    limits.r = Math.max(limits.r, orig.r + x);\n  }\n  if (vLimits.start < orig.t) {\n    y = (orig.t - vLimits.start) / cos;\n    limits.t = Math.min(limits.t, orig.t - y);\n  } else if (vLimits.end > orig.b) {\n    y = (vLimits.end - orig.b) / cos;\n    limits.b = Math.max(limits.b, orig.b + y);\n  }\n}\n\nfunction createPointLabelItem(scale, index, itemOpts) {\n  const outerDistance = scale.drawingArea;\n  const {extra, additionalAngle, padding, size} = itemOpts;\n  const pointLabelPosition = scale.getPointPosition(index, outerDistance + extra + padding, additionalAngle);\n  const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n  const y = yForAngle(pointLabelPosition.y, size.h, angle);\n  const textAlign = getTextAlignForAngle(angle);\n  const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n  return {\n    // if to draw or overlapped\n    visible: true,\n\n    // Text position\n    x: pointLabelPosition.x,\n    y,\n\n    // Text rendering data\n    textAlign,\n\n    // Bounding box\n    left,\n    top: y,\n    right: left + size.w,\n    bottom: y + size.h\n  };\n}\n\nfunction isNotOverlapped(item, area) {\n  if (!area) {\n    return true;\n  }\n  const {left, top, right, bottom} = item;\n  const apexesInArea = _isPointInArea({x: left, y: top}, area) || _isPointInArea({x: left, y: bottom}, area) ||\n    _isPointInArea({x: right, y: top}, area) || _isPointInArea({x: right, y: bottom}, area);\n  return !apexesInArea;\n}\n\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale._pointLabels.length;\n  const opts = scale.options;\n  const {centerPointLabels, display} = opts.pointLabels;\n  const itemOpts = {\n    extra: getTickBackdropHeight(opts) / 2,\n    additionalAngle: centerPointLabels ? PI / valueCount : 0\n  };\n  let area;\n\n  for (let i = 0; i < valueCount; i++) {\n    itemOpts.padding = padding[i];\n    itemOpts.size = labelSizes[i];\n\n    const item = createPointLabelItem(scale, i, itemOpts);\n    items.push(item);\n    if (display === 'auto') {\n      item.visible = isNotOverlapped(item, area);\n      if (item.visible) {\n        area = item;\n      }\n    }\n  }\n  return items;\n}\n\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n\n  return 'right';\n}\n\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= (w / 2);\n  }\n  return x;\n}\n\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= (h / 2);\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\n\nfunction drawPointLabelBox(ctx, opts, item) {\n  const {left, top, right, bottom} = item;\n  const {backdropColor} = opts;\n\n  if (!isNullOrUndef(backdropColor)) {\n    const borderRadius = toTRBLCorners(opts.borderRadius);\n    const padding = toPadding(opts.backdropPadding);\n    ctx.fillStyle = backdropColor;\n\n    const backdropLeft = left - padding.left;\n    const backdropTop = top - padding.top;\n    const backdropWidth = right - left + padding.width;\n    const backdropHeight = bottom - top + padding.height;\n\n    if (Object.values(borderRadius).some(v => v !== 0)) {\n      ctx.beginPath();\n      addRoundedRectPath(ctx, {\n        x: backdropLeft,\n        y: backdropTop,\n        w: backdropWidth,\n        h: backdropHeight,\n        radius: borderRadius,\n      });\n      ctx.fill();\n    } else {\n      ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n    }\n  }\n}\n\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const item = scale._pointLabelItems[i];\n    if (!item.visible) {\n      // overlapping\n      continue;\n    }\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    drawPointLabelBox(ctx, optsAtIndex, item);\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign} = item;\n\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\n\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    // Draw circular arcs between the points\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    // Draw straight lines connecting each index\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\n\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n\n  const {color, lineWidth} = gridLineOpts;\n\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(borderOpts.dash || []);\n  ctx.lineDashOffset = borderOpts.dashOffset;\n\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\n\nfunction createPointLabelContext(parent, index, label) {\n  return createContext(parent, {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\n\nexport default class RadialLinearScale extends LinearScaleBase {\n\n  static id = 'radialLinear';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    display: true,\n\n    // Boolean - Whether to animate scaling the chart from the centre\n    animate: true,\n    position: 'chartArea',\n\n    angleLines: {\n      display: true,\n      lineWidth: 1,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n\n    grid: {\n      circular: false\n    },\n\n    startAngle: 0,\n\n    // label settings\n    ticks: {\n      // Boolean - Show a backdrop to the scale label\n      showLabelBackdrop: true,\n\n      callback: Ticks.formatters.numeric\n    },\n\n    pointLabels: {\n      backdropColor: undefined,\n\n      // Number - The backdrop padding above & below the label in pixels\n      backdropPadding: 2,\n\n      // Boolean - if true, show point labels\n      display: true,\n\n      // Number - Point label font size in pixels\n      font: {\n        size: 10\n      },\n\n      // Function - Used to convert point labels\n      callback(label) {\n        return label;\n      },\n\n      // Number - Additionl padding between scale and pointLabel\n      padding: 5,\n\n      // Boolean - if true, center point labels to slices in polar chart\n      centerPointLabels: false\n    }\n  };\n\n  static defaultRoutes = {\n    'angleLines.color': 'borderColor',\n    'pointLabels.color': 'color',\n    'ticks.color': 'color'\n  };\n\n  static descriptors = {\n    angleLines: {\n      _fallback: 'grid'\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.xCenter = undefined;\n    /** @type {number} */\n    this.yCenter = undefined;\n    /** @type {number} */\n    this.drawingArea = undefined;\n    /** @type {string[]} */\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n\n  setDimensions() {\n    // Set the unconstrained dimension before label rotation\n    const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n    const w = this.width = this.maxWidth - padding.width;\n    const h = this.height = this.maxHeight - padding.height;\n    this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n    this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n    this.drawingArea = Math.floor(Math.min(w, h) / 2);\n  }\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(false);\n\n    this.min = isFinite(min) && !isNaN(min) ? min : 0;\n    this.max = isFinite(max) && !isNaN(max) ? max : 0;\n\n    // Common base implementation to handle min, max, beginAtZero\n    this.handleTickRangeOptions();\n  }\n\n  /**\n\t * Returns the maximum number of ticks based on the scale dimension\n\t * @protected\n\t */\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n\n  generateTickLabels(ticks) {\n    LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n\n    // Point labels\n    this._pointLabels = this.getLabels()\n      .map((value, index) => {\n        const label = callCallback(this.options.pointLabels.callback, [value, index], this);\n        return label || label === 0 ? label : '';\n      })\n      .filter((v, i) => this.chart.getDataVisibility(i));\n  }\n\n  fit() {\n    const opts = this.options;\n\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(this);\n    } else {\n      this.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n    this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n    this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n  }\n\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / (this._pointLabels.length || 1);\n    const startAngle = this.options.startAngle || 0;\n\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n\n  getDistanceFromCenterForValue(value) {\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n\n    // Take into account half font size + the yPadding of the top value\n    const scalingFactor = this.drawingArea / (this.max - this.min);\n    if (this.options.reverse) {\n      return (this.max - value) * scalingFactor;\n    }\n    return (value - this.min) * scalingFactor;\n  }\n\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n\n    const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n    return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n  }\n\n  getPointLabelContext(index) {\n    const pointLabels = this._pointLabels || [];\n\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(this.getContext(), index, pointLabel);\n    }\n  }\n\n  getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n    const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n      angle\n    };\n  }\n\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBackground() {\n    const {backgroundColor, grid: {circular}} = this.options;\n    if (backgroundColor) {\n      const ctx = this.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawGrid() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const {angleLines, grid, border} = opts;\n    const labelCount = this._pointLabels.length;\n\n    let i, offset, position;\n\n    if (opts.pointLabels.display) {\n      drawPointLabels(this, labelCount);\n    }\n\n    if (grid.display) {\n      this.ticks.forEach((tick, index) => {\n        if (index !== 0 || (index === 0 && this.min < 0)) {\n          offset = this.getDistanceFromCenterForValue(tick.value);\n          const context = this.getContext(index);\n          const optsAtIndex = grid.setContext(context);\n          const optsAtIndexBorder = border.setContext(context);\n\n          drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n        }\n      });\n    }\n\n    if (angleLines.display) {\n      ctx.save();\n\n      for (i = labelCount - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n        const {color, lineWidth} = optsAtIndex;\n\n        if (!lineWidth || !color) {\n          continue;\n        }\n\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n\n        offset = this.getDistanceFromCenterForValue(opts.reverse ? this.min : this.max);\n        position = this.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(this.xCenter, this.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBorder() {}\n\n  /**\n\t * @protected\n\t */\n  drawLabels() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    if (!tickOpts.display) {\n      return;\n    }\n\n    const startAngle = this.getIndexAngle(0);\n    let offset, width;\n\n    ctx.save();\n    ctx.translate(this.xCenter, this.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n\n    this.ticks.forEach((tick, index) => {\n      if ((index === 0 && this.min >= 0) && !opts.reverse) {\n        return;\n      }\n\n      const optsAtIndex = tickOpts.setContext(this.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n        strokeColor: optsAtIndex.textStrokeColor,\n        strokeWidth: optsAtIndex.textStrokeWidth,\n      });\n    });\n\n    ctx.restore();\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {}\n}\n", "import adapters from '../core/core.adapters.js';\nimport {callback as call, isFinite, isNullOrUndef, mergeIf, valueOrDefault} from '../helpers/helpers.core.js';\nimport {toRadians, isNumber, _limitValue} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport {_arrayUnique, _filterBetween, _lookup} from '../helpers/helpers.collection.js';\n\n/**\n * @typedef { import('../core/core.adapters.js').TimeUnit } Unit\n * @typedef {{common: boolean, size: number, steps?: number}} Interval\n * @typedef { import('../core/core.adapters.js').DateAdapter } DateAdapter\n */\n\n/**\n * @type {Object<Unit, Interval>}\n */\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\n\n/**\n * @type {Unit[]}\n */\nconst UNITS = /** @type Unit[] */ /* #__PURE__ */ (Object.keys(INTERVALS));\n\n/**\n * @param {number} a\n * @param {number} b\n */\nfunction sorter(a, b) {\n  return a - b;\n}\n\n/**\n * @param {TimeScale} scale\n * @param {*} input\n * @return {number}\n */\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n\n  const adapter = scale._adapter;\n  const {parser, round, isoWeekday} = scale._parseOpts;\n  let value = input;\n\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n\n  // Only parse if it's not a timestamp already\n  if (!isFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, parser)\n      : adapter.parse(value);\n  }\n\n  if (value === null) {\n    return null;\n  }\n\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n\n  return +value;\n}\n\n/**\n * Figures out what unit results in an appropriate number of auto-generated ticks\n * @param {Unit} minUnit\n * @param {number} min\n * @param {number} max\n * @param {number} capacity\n * @return {object}\n */\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n\n  return UNITS[ilen - 1];\n}\n\n/**\n * Figures out what unit to format a set of ticks with\n * @param {TimeScale} scale\n * @param {number} numTicks\n * @param {Unit} minUnit\n * @param {number} min\n * @param {number} max\n * @return {Unit}\n */\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n\n/**\n * @param {Unit} unit\n * @return {object}\n */\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\n\n/**\n * @param {object} ticks\n * @param {number} time\n * @param {number[]} [timestamps] - if defined, snap to these timestamps\n */\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\n\n/**\n * @param {TimeScale} scale\n * @param {object[]} ticks\n * @param {object} map\n * @param {Unit} majorUnit\n * @return {object[]}\n */\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\n\n/**\n * @param {TimeScale} scale\n * @param {number[]} values\n * @param {Unit|undefined} [majorUnit]\n * @return {object[]}\n */\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  /** @type {Object<number,object>} */\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n\n  // We set the major ticks separately from the above loop because calling startOf for every tick\n  // is expensive when there is a large number of ticks\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\n\nexport default class TimeScale extends Scale {\n\n  static id = 'time';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 2.7.0\n     */\n    bounds: 'data',\n\n    adapters: {},\n    time: {\n      parser: false, // false == a pattern string from or a custom callback that converts its argument to a timestamp\n      unit: false, // false == automatic or override with week, month, year, etc.\n      round: false, // none, or override with week, month, year, etc.\n      isoWeekday: false, // override week start day\n      minUnit: 'millisecond',\n      displayFormats: {}\n    },\n    ticks: {\n      /**\n       * Ticks generation input values:\n       * - 'auto': generates \"optimal\" ticks based on scale size and time options.\n       * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\n       * - 'labels': generates ticks from user given `data.labels` values ONLY.\n       * @see https://github.com/chartjs/Chart.js/pull/4507\n       * @since 2.7.0\n       */\n      source: 'auto',\n\n      callback: false,\n\n      major: {\n        enabled: false\n      }\n    }\n  };\n\n  /**\n\t * @param {object} props\n\t */\n  constructor(props) {\n    super(props);\n\n    /** @type {{data: number[], labels: number[], all: number[]}} */\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n\n    /** @type {Unit} */\n    this._unit = 'day';\n    /** @type {Unit=} */\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n\n  init(scaleOpts, opts = {}) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    /** @type {DateAdapter} */\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n\n    adapter.init(opts);\n\n    // Backward compatibility: before introducing adapter, `displayFormats` was\n    // supposed to contain *all* unit/string pairs but this can't be resolved\n    // when loading the scale (adapters are loaded afterward), so let's populate\n    // missing formats on update\n    mergeIf(time.displayFormats, adapter.formats());\n\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n\n    super.init(scaleOpts);\n\n    this._normalized = opts.normalized;\n  }\n\n  /**\n\t * @param {*} raw\n\t * @param {number?} [index]\n\t * @return {number}\n\t */\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n\n  determineDataLimits() {\n    const options = this.options;\n    const adapter = this._adapter;\n    const unit = options.time.unit || 'day';\n    // eslint-disable-next-line prefer-const\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n\n    /**\n\t\t * @param {object} bounds\n\t\t */\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n\n    // If we have user provided `min` and `max` labels / data bounds can be ignored\n    if (!minDefined || !maxDefined) {\n      // Labels are always considered, when user did not force bounds\n      _applyBounds(this._getLabelBounds());\n\n      // If `bounds` is `'ticks'` and `ticks.source` is `'labels'`,\n      // data bounds are ignored (and don't need to be determined)\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(this.getMinMax(false));\n      }\n    }\n\n    min = isFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n\n    // Make sure that max is strictly higher than min (required by the timeseries lookup table)\n    this.min = Math.min(min, max - 1);\n    this.max = Math.max(min + 1, max);\n  }\n\n  /**\n\t * @private\n\t */\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n\n  /**\n\t * @return {object[]}\n\t */\n  buildTicks() {\n    const options = this.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n\n    if (options.bounds === 'ticks' && timestamps.length) {\n      this.min = this._userMin || timestamps[0];\n      this.max = this._userMax || timestamps[timestamps.length - 1];\n    }\n\n    const min = this.min;\n    const max = this.max;\n\n    const ticks = _filterBetween(timestamps, min, max);\n\n    // PRIVATE\n    // determineUnitForFormatting relies on the number of ticks so we don't use it when\n    // autoSkip is enabled because we don't yet know what the final number of ticks will be\n    this._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min))\n      : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n    this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined\n      : determineMajorUnit(this._unit);\n    this.initOffsets(timestamps);\n\n    if (options.reverse) {\n      ticks.reverse();\n    }\n\n    return ticksFromTimestamps(this, ticks, this._majorUnit);\n  }\n\n  afterAutoSkip() {\n    // Offsets for bar charts need to be handled with the auto skipped\n    // ticks. Once ticks have been skipped, we re-compute the offsets.\n    if (this.options.offsetAfterAutoskip) {\n      this.initOffsets(this.ticks.map(tick => +tick.value));\n    }\n  }\n\n  /**\n\t * Returns the start and end offsets from edges in the form of {start, end}\n\t * where each value is a relative width to the scale and ranges between 0 and 1.\n\t * They add extra margins on the both sides by scaling down the original scale.\n\t * Offsets are added when the `offset` option is true.\n\t * @param {number[]} timestamps\n\t * @protected\n\t */\n  initOffsets(timestamps = []) {\n    let start = 0;\n    let end = 0;\n    let first, last;\n\n    if (this.options.offset && timestamps.length) {\n      first = this.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n\n    this._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n\n  /**\n\t * Generates a maximum of `capacity` timestamps between min and max, rounded to the\n\t * `minor` unit using the given scale time `options`.\n\t * Important: this method can return ticks outside the min and max range, it's the\n\t * responsibility of the calling code to clamp values if needed.\n\t * @protected\n\t */\n  _generate() {\n    const adapter = this._adapter;\n    const min = this.min;\n    const max = this.max;\n    const options = this.options;\n    const timeOpts = options.time;\n    // @ts-ignore\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n    const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n\n    // For 'week' unit, handle the first day of week option\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n\n    // Align first ticks on unit\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n\n    // Prevent browser from freezing in case user options request millions of milliseconds\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n\n    const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n\n    // @ts-ignore\n    return Object.keys(ticks).sort(sorter).map(x => +x);\n  }\n\n  /**\n\t * @param {number} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    const adapter = this._adapter;\n    const timeOpts = this.options.time;\n\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n\n  /**\n\t * @param {number} value\n\t * @param {string|undefined} format\n\t * @return {string}\n\t */\n  format(value, format) {\n    const options = this.options;\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const fmt = format || formats[unit];\n    return this._adapter.format(value, fmt);\n  }\n\n  /**\n\t * Function to format an individual tick mark\n\t * @param {number} time\n\t * @param {number} index\n\t * @param {object[]} ticks\n\t * @param {string|undefined} [format]\n\t * @return {string}\n\t * @private\n\t */\n  _tickFormatFunction(time, index, ticks, format) {\n    const options = this.options;\n    const formatter = options.ticks.callback;\n\n    if (formatter) {\n      return call(formatter, [time, index, ticks], this);\n    }\n\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const majorUnit = this._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n\n    return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n  }\n\n  /**\n\t * @param {object[]} ticks\n\t */\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getDecimalForValue(value) {\n    return value === null ? NaN : (value - this.min) / (this.max - this.min);\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getPixelForValue(value) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForValue(value);\n    return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return this.min + pos * (this.max - this.min);\n  }\n\n  /**\n\t * @param {string} label\n\t * @return {{w:number, h:number}}\n\t * @private\n\t */\n  _getLabelSize(label) {\n    const ticksOpts = this.options.ticks;\n    const tickLabelWidth = this.ctx.measureText(label).width;\n    const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = this._resolveTickFontOptions(0).size;\n\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n\n  /**\n\t * @param {number} exampleTime\n\t * @return {number}\n\t * @private\n\t */\n  _getLabelCapacity(exampleTime) {\n    const timeOpts = this.options.time;\n    const displayFormats = timeOpts.displayFormats;\n\n    // pick the longest format (milliseconds) for guesstimation\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n    const size = this._getLabelSize(exampleLabel);\n    // subtract 1 - if offset then there's one less label than tick\n    // if not offset then one half label padding is added to each end leaving room for one less label\n    const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n\n  /**\n\t * @protected\n\t */\n  getDataTimestamps() {\n    let timestamps = this._cache.data || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n\n    if (this._normalized && metas.length) {\n      return (this._cache.data = metas[0].controller.getAllParsedValues(this));\n    }\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n    }\n\n    return (this._cache.data = this.normalize(timestamps));\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelTimestamps() {\n    const timestamps = this._cache.labels || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const labels = this.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(this, labels[i]));\n    }\n\n    return (this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps));\n  }\n\n  /**\n\t * @param {number[]} values\n\t * @protected\n\t */\n  normalize(values) {\n    // It seems to be somewhat faster to do sorting first\n    return _arrayUnique(values.sort(sorter));\n  }\n}\n", "import TimeScale from './scale.time.js';\nimport {_lookupByKey} from '../helpers/helpers.collection.js';\n\n/**\n * Linearly interpolates the given source `val` using the table. If value is out of bounds, values\n * at edges are used for the interpolation.\n * @param {object} table\n * @param {number} val\n * @param {boolean} [reverse] lookup time based on position instead of vice versa\n * @return {object}\n */\nfunction interpolate(table, val, reverse) {\n  let lo = 0;\n  let hi = table.length - 1;\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      ({lo, hi} = _lookupByKey(table, 'pos', val));\n    }\n    ({pos: prevSource, time: prevTarget} = table[lo]);\n    ({pos: nextSource, time: nextTarget} = table[hi]);\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      ({lo, hi} = _lookupByKey(table, 'time', val));\n    }\n    ({time: prevSource, pos: prevTarget} = table[lo]);\n    ({time: nextSource, pos: nextTarget} = table[hi]);\n  }\n\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\n\nclass TimeSeriesScale extends TimeScale {\n\n  static id = 'timeseries';\n\n  /**\n   * @type {any}\n   */\n  static defaults = TimeScale.defaults;\n\n  /**\n\t * @param {object} props\n\t */\n  constructor(props) {\n    super(props);\n\n    /** @type {object[]} */\n    this._table = [];\n    /** @type {number} */\n    this._minPos = undefined;\n    /** @type {number} */\n    this._tableRange = undefined;\n  }\n\n  /**\n\t * @protected\n\t */\n  initOffsets() {\n    const timestamps = this._getTimestampsForTable();\n    const table = this._table = this.buildLookupTable(timestamps);\n    this._minPos = interpolate(table, this.min);\n    this._tableRange = interpolate(table, this.max) - this._minPos;\n    super.initOffsets(timestamps);\n  }\n\n  /**\n\t * Returns an array of {time, pos} objects used to interpolate a specific `time` or position\n\t * (`pos`) on the scale, by searching entries before and after the requested value. `pos` is\n\t * a decimal between 0 and 1: 0 being the start of the scale (left or top) and 1 the other\n\t * extremity (left + width or top + height). Note that it would be more optimized to directly\n\t * store pre-computed pixels, but the scale dimensions are not guaranteed at the time we need\n\t * to create the lookup table. The table ALWAYS contains at least two items: min and max.\n\t * @param {number[]} timestamps\n\t * @return {object[]}\n\t * @protected\n\t */\n  buildLookupTable(timestamps) {\n    const {min, max} = this;\n    const items = [];\n    const table = [];\n    let i, ilen, prev, curr, next;\n\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr >= min && curr <= max) {\n        items.push(curr);\n      }\n    }\n\n    if (items.length < 2) {\n      // In case there is less that 2 timestamps between min and max, the scale is defined by min and max\n      return [\n        {time: min, pos: 0},\n        {time: max, pos: 1}\n      ];\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i];\n\n      // only add points that breaks the scale linearity\n      if (Math.round((next + prev) / 2) !== curr) {\n        table.push({time: curr, pos: i / (ilen - 1)});\n      }\n    }\n    return table;\n  }\n\n  /**\n    * Generates all timestamps defined in the data.\n    * Important: this method can return ticks outside the min and max range, it's the\n    * responsibility of the calling code to clamp values if needed.\n    * @protected\n    */\n  _generate() {\n    const min = this.min;\n    const max = this.max;\n    let timestamps = super.getDataTimestamps();\n    if (!timestamps.includes(min) || !timestamps.length) {\n      timestamps.splice(0, 0, min);\n    }\n    if (!timestamps.includes(max) || timestamps.length === 1) {\n      timestamps.push(max);\n    }\n    return timestamps.sort((a, b) => a - b);\n  }\n\n  /**\n\t * Returns all timestamps\n\t * @return {number[]}\n\t * @private\n\t */\n  _getTimestampsForTable() {\n    let timestamps = this._cache.all || [];\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const data = this.getDataTimestamps();\n    const label = this.getLabelTimestamps();\n    if (data.length && label.length) {\n      // If combining labels and data (data might not contain all labels),\n      // we need to recheck uniqueness and sort\n      timestamps = this.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = this._cache.all = timestamps;\n\n    return timestamps;\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getDecimalForValue(value) {\n    return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n  }\n}\n\nexport default TimeSeriesScale;\n", "export * from './controllers/index.js';\nexport * from './core/index.js';\nexport * from './elements/index.js';\nexport * from './platform/index.js';\nexport * from './plugins/index.js';\nexport * from './scales/index.js';\n\nimport * as controllers from './controllers/index.js';\nimport * as elements from './elements/index.js';\nimport * as plugins from './plugins/index.js';\nimport * as scales from './scales/index.js';\n\nexport {\n  controllers,\n  elements,\n  plugins,\n  scales,\n};\n\nexport const registerables = [\n  controllers,\n  elements,\n  plugins,\n  scales,\n];\n", "/**\n * @module constants\n * @summary Useful constants\n * @description\n * Collection of useful date constants.\n *\n * The constants could be imported from `date-fns/constants`:\n *\n * ```ts\n * import { maxTime, minTime } from \"./constants/date-fns/constants\";\n *\n * function isAllowedTime(time) {\n *   return time <= maxTime && time >= minTime;\n * }\n * ```\n */\n\n/**\n * @constant\n * @name daysInWeek\n * @summary Days in 1 week.\n */\nexport const daysInWeek = 7;\n\n/**\n * @constant\n * @name daysInYear\n * @summary Days in 1 year.\n *\n * @description\n * How many days in a year.\n *\n * One years equals 365.2425 days according to the formula:\n *\n * > Leap year occurs every 4 years, except for years that are divisible by 100 and not divisible by 400.\n * > 1 mean year = (365+1/4-1/100+1/400) days = 365.2425 days\n */\nexport const daysInYear = 365.2425;\n\n/**\n * @constant\n * @name maxTime\n * @summary Maximum allowed time.\n *\n * @example\n * import { maxTime } from \"./constants/date-fns/constants\";\n *\n * const isValid = 8640000000000001 <= maxTime;\n * //=> false\n *\n * new Date(8640000000000001);\n * //=> Invalid Date\n */\nexport const maxTime = Math.pow(10, 8) * 24 * 60 * 60 * 1000;\n\n/**\n * @constant\n * @name minTime\n * @summary Minimum allowed time.\n *\n * @example\n * import { minTime } from \"./constants/date-fns/constants\";\n *\n * const isValid = -8640000000000001 >= minTime;\n * //=> false\n *\n * new Date(-8640000000000001)\n * //=> Invalid Date\n */\nexport const minTime = -maxTime;\n\n/**\n * @constant\n * @name millisecondsInWeek\n * @summary Milliseconds in 1 week.\n */\nexport const millisecondsInWeek = 604800000;\n\n/**\n * @constant\n * @name millisecondsInDay\n * @summary Milliseconds in 1 day.\n */\nexport const millisecondsInDay = 86400000;\n\n/**\n * @constant\n * @name millisecondsInMinute\n * @summary Milliseconds in 1 minute\n */\nexport const millisecondsInMinute = 60000;\n\n/**\n * @constant\n * @name millisecondsInHour\n * @summary Milliseconds in 1 hour\n */\nexport const millisecondsInHour = 3600000;\n\n/**\n * @constant\n * @name millisecondsInSecond\n * @summary Milliseconds in 1 second\n */\nexport const millisecondsInSecond = 1000;\n\n/**\n * @constant\n * @name minutesInYear\n * @summary Minutes in 1 year.\n */\nexport const minutesInYear = 525600;\n\n/**\n * @constant\n * @name minutesInMonth\n * @summary Minutes in 1 month.\n */\nexport const minutesInMonth = 43200;\n\n/**\n * @constant\n * @name minutesInDay\n * @summary Minutes in 1 day.\n */\nexport const minutesInDay = 1440;\n\n/**\n * @constant\n * @name minutesInHour\n * @summary Minutes in 1 hour.\n */\nexport const minutesInHour = 60;\n\n/**\n * @constant\n * @name monthsInQuarter\n * @summary Months in 1 quarter.\n */\nexport const monthsInQuarter = 3;\n\n/**\n * @constant\n * @name monthsInYear\n * @summary Months in 1 year.\n */\nexport const monthsInYear = 12;\n\n/**\n * @constant\n * @name quartersInYear\n * @summary Quarters in 1 year\n */\nexport const quartersInYear = 4;\n\n/**\n * @constant\n * @name secondsInHour\n * @summary Seconds in 1 hour.\n */\nexport const secondsInHour = 3600;\n\n/**\n * @constant\n * @name secondsInMinute\n * @summary Seconds in 1 minute.\n */\nexport const secondsInMinute = 60;\n\n/**\n * @constant\n * @name secondsInDay\n * @summary Seconds in 1 day.\n */\nexport const secondsInDay = secondsInHour * 24;\n\n/**\n * @constant\n * @name secondsInWeek\n * @summary Seconds in 1 week.\n */\nexport const secondsInWeek = secondsInDay * 7;\n\n/**\n * @constant\n * @name secondsInYear\n * @summary Seconds in 1 year.\n */\nexport const secondsInYear = secondsInDay * daysInYear;\n\n/**\n * @constant\n * @name secondsInMonth\n * @summary Seconds in 1 month\n */\nexport const secondsInMonth = secondsInYear / 12;\n\n/**\n * @constant\n * @name secondsInQuarter\n * @summary Seconds in 1 quarter.\n */\nexport const secondsInQuarter = secondsInMonth * 3;\n\n/**\n * @constant\n * @name constructFromSymbol\n * @summary Symbol enabling Date extensions to inherit properties from the reference date.\n *\n * The symbol is used to enable the `constructFrom` function to construct a date\n * using a reference date and a value. It allows to transfer extra properties\n * from the reference date to the new date. It's useful for extensions like\n * [`TZDate`](https://github.com/date-fns/tz) that accept a time zone as\n * a constructor argument.\n */\nexport const constructFromSymbol = Symbol.for(\"constructDateFrom\");\n", "import { constructFromSymbol } from \"./constants.js\";\n\n/**\n * @name constructFrom\n * @category Generic Helpers\n * @summary Constructs a date using the reference date and the value\n *\n * @description\n * The function constructs a new date using the constructor from the reference\n * date and the given value. It helps to build generic functions that accept\n * date extensions.\n *\n * It defaults to `Date` if the passed reference date is a number or a string.\n *\n * Starting from v3.7.0, it allows to construct a date using `[Symbol.for(\"constructDateFrom\")]`\n * enabling to transfer extra properties from the reference date to the new date.\n * It's useful for extensions like [`TZDate`](https://github.com/date-fns/tz)\n * that accept a time zone as a constructor argument.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The reference date to take constructor from\n * @param value - The value to create the date\n *\n * @returns Date initialized using the given date and value\n *\n * @example\n * import { constructFrom } from \"./constructFrom/date-fns\";\n *\n * // A function that clones a date preserving the original type\n * function cloneDate<DateType extends Date>(date: DateType): DateType {\n *   return constructFrom(\n *     date, // Use constructor from the given date\n *     date.getTime() // Use the date value to create a new date\n *   );\n * }\n */\nexport function constructFrom(date, value) {\n  if (typeof date === \"function\") return date(value);\n\n  if (date && typeof date === \"object\" && constructFromSymbol in date)\n    return date[constructFromSymbol](value);\n\n  if (date instanceof Date) return new date.constructor(value);\n\n  return new Date(value);\n}\n\n// Fallback for modularized imports:\nexport default constructFrom;\n", "import { constructFrom } from \"./constructFrom.js\";\n\n/**\n * @name toDate\n * @category Common Helpers\n * @summary Convert the given argument to an instance of Date.\n *\n * @description\n * Convert the given argument to an instance of Date.\n *\n * If the argument is an instance of Date, the function returns its clone.\n *\n * If the argument is a number, it is treated as a timestamp.\n *\n * If the argument is none of the above, the function returns Invalid Date.\n *\n * Starting from v3.7.0, it clones a date using `[Symbol.for(\"constructDateFrom\")]`\n * enabling to transfer extra properties from the reference date to the new date.\n * It's useful for extensions like [`TZDate`](https://github.com/date-fns/tz)\n * that accept a time zone as a constructor argument.\n *\n * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param argument - The value to convert\n *\n * @returns The parsed date in the local time zone\n *\n * @example\n * // Clone the date:\n * const result = toDate(new Date(2014, 1, 11, 11, 30, 30))\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert the timestamp to date:\n * const result = toDate(1392098430000)\n * //=> Tue Feb 11 2014 11:30:30\n */\nexport function toDate(argument, context) {\n  // [TODO] Get rid of `toDate` or `constructFrom`?\n  return constructFrom(context || argument, argument);\n}\n\n// Fallback for modularized imports:\nexport default toDate;\n", "import { constructFrom } from \"./constructFrom.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link addDays} function options.\n */\n\n/**\n * @name addDays\n * @category Day Helpers\n * @summary Add the specified number of days to the given date.\n *\n * @description\n * Add the specified number of days to the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The date to be changed\n * @param amount - The amount of days to be added.\n * @param options - An object with options\n *\n * @returns The new date with the days added\n *\n * @example\n * // Add 10 days to 1 September 2014:\n * const result = addDays(new Date(2014, 8, 1), 10)\n * //=> Thu Sep 11 2014 00:00:00\n */\nexport function addDays(date, amount, options) {\n  const _date = toDate(date, options?.in);\n  if (isNaN(amount)) return constructFrom(options?.in || date, NaN);\n\n  // If 0 days, no-op to avoid changing times in the hour before end of DST\n  if (!amount) return _date;\n\n  _date.setDate(_date.getDate() + amount);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default addDays;\n", "import { constructFrom } from \"./constructFrom.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link addMonths} function options.\n */\n\n/**\n * @name addMonths\n * @category Month Helpers\n * @summary Add the specified number of months to the given date.\n *\n * @description\n * Add the specified number of months to the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The date to be changed\n * @param amount - The amount of months to be added.\n * @param options - The options object\n *\n * @returns The new date with the months added\n *\n * @example\n * // Add 5 months to 1 September 2014:\n * const result = addMonths(new Date(2014, 8, 1), 5)\n * //=> Sun Feb 01 2015 00:00:00\n *\n * // Add one month to 30 January 2023:\n * const result = addMonths(new Date(2023, 0, 30), 1)\n * //=> Tue Feb 28 2023 00:00:00\n */\nexport function addMonths(date, amount, options) {\n  const _date = toDate(date, options?.in);\n  if (isNaN(amount)) return constructFrom(options?.in || date, NaN);\n  if (!amount) {\n    // If 0 months, no-op to avoid changing times in the hour before end of DST\n    return _date;\n  }\n  const dayOfMonth = _date.getDate();\n\n  // The JS Date object supports date math by accepting out-of-bounds values for\n  // month, day, etc. For example, new Date(2020, 0, 0) returns 31 Dec 2019 and\n  // new Date(2020, 13, 1) returns 1 Feb 2021.  This is *almost* the behavior we\n  // want except that dates will wrap around the end of a month, meaning that\n  // new Date(2020, 13, 31) will return 3 Mar 2021 not 28 Feb 2021 as desired. So\n  // we'll default to the end of the desired month by adding 1 to the desired\n  // month and using a date of 0 to back up one day to the end of the desired\n  // month.\n  const endOfDesiredMonth = constructFrom(options?.in || date, _date.getTime());\n  endOfDesiredMonth.setMonth(_date.getMonth() + amount + 1, 0);\n  const daysInMonth = endOfDesiredMonth.getDate();\n  if (dayOfMonth >= daysInMonth) {\n    // If we're already at the end of the month, then this is the correct date\n    // and we're done.\n    return endOfDesiredMonth;\n  } else {\n    // Otherwise, we now know that setting the original day-of-month value won't\n    // cause an overflow, so set the desired day-of-month. Note that we can't\n    // just set the date of `endOfDesiredMonth` because that object may have had\n    // its time changed in the unusual case where where a DST transition was on\n    // the last day of the month and its local time was in the hour skipped or\n    // repeated next to a DST transition.  So we use `date` instead which is\n    // guaranteed to still have the original time.\n    _date.setFullYear(\n      endOfDesiredMonth.getFullYear(),\n      endOfDesiredMonth.getMonth(),\n      dayOfMonth,\n    );\n    return _date;\n  }\n}\n\n// Fallback for modularized imports:\nexport default addMonths;\n", "import { constructFrom } from \"./constructFrom.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link addMilliseconds} function options.\n */\n\n/**\n * @name addMilliseconds\n * @category Millisecond Helpers\n * @summary Add the specified number of milliseconds to the given date.\n *\n * @description\n * Add the specified number of milliseconds to the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The date to be changed\n * @param amount - The amount of milliseconds to be added.\n * @param options - The options object\n *\n * @returns The new date with the milliseconds added\n *\n * @example\n * // Add 750 milliseconds to 10 July 2014 12:45:30.000:\n * const result = addMilliseconds(new Date(2014, 6, 10, 12, 45, 30, 0), 750)\n * //=> Thu Jul 10 2014 12:45:30.750\n */\nexport function addMilliseconds(date, amount, options) {\n  return constructFrom(options?.in || date, +toDate(date) + amount);\n}\n\n// Fallback for modularized imports:\nexport default addMilliseconds;\n", "import { addMilliseconds } from \"./addMilliseconds.js\";\nimport { millisecondsInHour } from \"./constants.js\";\n\n/**\n * The {@link addHours} function options.\n */\n\n/**\n * @name addHours\n * @category Hour Helpers\n * @summary Add the specified number of hours to the given date.\n *\n * @description\n * Add the specified number of hours to the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The date to be changed\n * @param amount - The amount of hours to be added\n * @param options - An object with options\n *\n * @returns The new date with the hours added\n *\n * @example\n * // Add 2 hours to 10 July 2014 23:00:00:\n * const result = addHours(new Date(2014, 6, 10, 23, 0), 2)\n * //=> Fri Jul 11 2014 01:00:00\n */\nexport function addHours(date, amount, options) {\n  return addMilliseconds(date, amount * millisecondsInHour, options);\n}\n\n// Fallback for modularized imports:\nexport default addHours;\n", "let defaultOptions = {};\n\nexport function getDefaultOptions() {\n  return defaultOptions;\n}\n\nexport function setDefaultOptions(newOptions) {\n  defaultOptions = newOptions;\n}\n", "import { getDefaultOptions } from \"./_lib/defaultOptions.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link startOfWeek} function options.\n */\n\n/**\n * @name startOfWeek\n * @category Week Helpers\n * @summary Return the start of a week for the given date.\n *\n * @description\n * Return the start of a week for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The start of a week\n *\n * @example\n * // The start of a week for 2 September 2014 11:55:00:\n * const result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sun Aug 31 2014 00:00:00\n *\n * @example\n * // If the week starts on Monday, the start of the week for 2 September 2014 11:55:00:\n * const result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0), { weekStartsOn: 1 })\n * //=> Mon Sep 01 2014 00:00:00\n */\nexport function startOfWeek(date, options) {\n  const defaultOptions = getDefaultOptions();\n  const weekStartsOn =\n    options?.weekStartsOn ??\n    options?.locale?.options?.weekStartsOn ??\n    defaultOptions.weekStartsOn ??\n    defaultOptions.locale?.options?.weekStartsOn ??\n    0;\n\n  const _date = toDate(date, options?.in);\n  const day = _date.getDay();\n  const diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n\n  _date.setDate(_date.getDate() - diff);\n  _date.setHours(0, 0, 0, 0);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfWeek;\n", "import { startOfWeek } from \"./startOfWeek.js\";\n\n/**\n * The {@link startOfISOWeek} function options.\n */\n\n/**\n * @name startOfISOWeek\n * @category ISO Week Helpers\n * @summary Return the start of an ISO week for the given date.\n *\n * @description\n * Return the start of an ISO week for the given date.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The start of an ISO week\n *\n * @example\n * // The start of an ISO week for 2 September 2014 11:55:00:\n * const result = startOfISOWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Mon Sep 01 2014 00:00:00\n */\nexport function startOfISOWeek(date, options) {\n  return startOfWeek(date, { ...options, weekStartsOn: 1 });\n}\n\n// Fallback for modularized imports:\nexport default startOfISOWeek;\n", "import { constructFrom } from \"./constructFrom.js\";\nimport { startOfISOWeek } from \"./startOfISOWeek.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link getISOWeekYear} function options.\n */\n\n/**\n * @name getISOWeekYear\n * @category ISO Week-Numbering Year Helpers\n * @summary Get the ISO week-numbering year of the given date.\n *\n * @description\n * Get the ISO week-numbering year of the given date,\n * which always starts 3 days before the year's first Thursday.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param date - The given date\n *\n * @returns The ISO week-numbering year\n *\n * @example\n * // Which ISO-week numbering year is 2 January 2005?\n * const result = getISOWeekYear(new Date(2005, 0, 2))\n * //=> 2004\n */\nexport function getISOWeekYear(date, options) {\n  const _date = toDate(date, options?.in);\n  const year = _date.getFullYear();\n\n  const fourthOfJanuaryOfNextYear = constructFrom(_date, 0);\n  fourthOfJanuaryOfNextYear.setFullYear(year + 1, 0, 4);\n  fourthOfJanuaryOfNextYear.setHours(0, 0, 0, 0);\n  const startOfNextYear = startOfISOWeek(fourthOfJanuaryOfNextYear);\n\n  const fourthOfJanuaryOfThisYear = constructFrom(_date, 0);\n  fourthOfJanuaryOfThisYear.setFullYear(year, 0, 4);\n  fourthOfJanuaryOfThisYear.setHours(0, 0, 0, 0);\n  const startOfThisYear = startOfISOWeek(fourthOfJanuaryOfThisYear);\n\n  if (_date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (_date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}\n\n// Fallback for modularized imports:\nexport default getISOWeekYear;\n", "import { toDate } from \"../toDate.js\";\n\n/**\n * Google Chrome as of 67.0.3396.87 introduced timezones with offset that includes seconds.\n * They usually appear for dates that denote time before the timezones were introduced\n * (e.g. for 'Europe/Prague' timezone the offset is GMT+00:57:44 before 1 October 1891\n * and GMT+01:00:00 after that date)\n *\n * Date#getTimezoneOffset returns the offset in minutes and would return 57 for the example above,\n * which would lead to incorrect calculations.\n *\n * This function returns the timezone offset in milliseconds that takes seconds in account.\n */\nexport function getTimezoneOffsetInMilliseconds(date) {\n  const _date = toDate(date);\n  const utcDate = new Date(\n    Date.UTC(\n      _date.getFullYear(),\n      _date.getMonth(),\n      _date.getDate(),\n      _date.getHours(),\n      _date.getMinutes(),\n      _date.getSeconds(),\n      _date.getMilliseconds(),\n    ),\n  );\n  utcDate.setUTCFullYear(_date.getFullYear());\n  return +date - +utcDate;\n}\n", "import { constructFrom } from \"../constructFrom.js\";\n\nexport function normalizeDates(context, ...dates) {\n  const normalize = constructFrom.bind(\n    null,\n    context || dates.find((date) => typeof date === \"object\"),\n  );\n  return dates.map(normalize);\n}\n", "import { toDate } from \"./toDate.js\";\n\n/**\n * The {@link startOfDay} function options.\n */\n\n/**\n * @name startOfDay\n * @category Day Helpers\n * @summary Return the start of a day for the given date.\n *\n * @description\n * Return the start of a day for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - The options\n *\n * @returns The start of a day\n *\n * @example\n * // The start of a day for 2 September 2014 11:55:00:\n * const result = startOfDay(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 02 2014 00:00:00\n */\nexport function startOfDay(date, options) {\n  const _date = toDate(date, options?.in);\n  _date.setHours(0, 0, 0, 0);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfDay;\n", "import { getTimezoneOffsetInMilliseconds } from \"./_lib/getTimezoneOffsetInMilliseconds.js\";\nimport { normalizeDates } from \"./_lib/normalizeDates.js\";\nimport { millisecondsInDay } from \"./constants.js\";\nimport { startOfDay } from \"./startOfDay.js\";\n\n/**\n * The {@link differenceInCalendarDays} function options.\n */\n\n/**\n * @name differenceInCalendarDays\n * @category Day Helpers\n * @summary Get the number of calendar days between the given dates.\n *\n * @description\n * Get the number of calendar days between the given dates. This means that the times are removed\n * from the dates and then the difference in days is calculated.\n *\n * @param laterDate - The later date\n * @param earlierDate - The earlier date\n * @param options - The options object\n *\n * @returns The number of calendar days\n *\n * @example\n * // How many calendar days are between\n * // 2 July 2011 23:00:00 and 2 July 2012 00:00:00?\n * const result = differenceInCalendarDays(\n *   new Date(2012, 6, 2, 0, 0),\n *   new Date(2011, 6, 2, 23, 0)\n * )\n * //=> 366\n * // How many calendar days are between\n * // 2 July 2011 23:59:00 and 3 July 2011 00:01:00?\n * const result = differenceInCalendarDays(\n *   new Date(2011, 6, 3, 0, 1),\n *   new Date(2011, 6, 2, 23, 59)\n * )\n * //=> 1\n */\nexport function differenceInCalendarDays(laterDate, earlierDate, options) {\n  const [laterDate_, earlierDate_] = normalizeDates(\n    options?.in,\n    laterDate,\n    earlierDate,\n  );\n\n  const laterStartOfDay = startOfDay(laterDate_);\n  const earlierStartOfDay = startOfDay(earlierDate_);\n\n  const laterTimestamp =\n    +laterStartOfDay - getTimezoneOffsetInMilliseconds(laterStartOfDay);\n  const earlierTimestamp =\n    +earlierStartOfDay - getTimezoneOffsetInMilliseconds(earlierStartOfDay);\n\n  // Round the number of days to the nearest integer because the number of\n  // milliseconds in a day is not constant (e.g. it's different in the week of\n  // the daylight saving time clock shift).\n  return Math.round((laterTimestamp - earlierTimestamp) / millisecondsInDay);\n}\n\n// Fallback for modularized imports:\nexport default differenceInCalendarDays;\n", "import { constructFrom } from \"./constructFrom.js\";\nimport { getISOWeekYear } from \"./getISOWeekYear.js\";\nimport { startOfISOWeek } from \"./startOfISOWeek.js\";\n\n/**\n * The {@link startOfISOWeekYear} function options.\n */\n\n/**\n * @name startOfISOWeekYear\n * @category ISO Week-Numbering Year Helpers\n * @summary Return the start of an ISO week-numbering year for the given date.\n *\n * @description\n * Return the start of an ISO week-numbering year,\n * which always starts 3 days before the year's first Thursday.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The start of an ISO week-numbering year\n *\n * @example\n * // The start of an ISO week-numbering year for 2 July 2005:\n * const result = startOfISOWeekYear(new Date(2005, 6, 2))\n * //=> Mon Jan 03 2005 00:00:00\n */\nexport function startOfISOWeekYear(date, options) {\n  const year = getISOWeekYear(date, options);\n  const fourthOfJanuary = constructFrom(options?.in || date, 0);\n  fourthOfJanuary.setFullYear(year, 0, 4);\n  fourthOfJanuary.setHours(0, 0, 0, 0);\n  return startOfISOWeek(fourthOfJanuary);\n}\n\n// Fallback for modularized imports:\nexport default startOfISOWeekYear;\n", "import { millisecondsInMinute } from \"./constants.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link addMinutes} function options.\n */\n\n/**\n * @name addMinutes\n * @category Minute Helpers\n * @summary Add the specified number of minutes to the given date.\n *\n * @description\n * Add the specified number of minutes to the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The date to be changed\n * @param amount - The amount of minutes to be added.\n * @param options - An object with options\n *\n * @returns The new date with the minutes added\n *\n * @example\n * // Add 30 minutes to 10 July 2014 12:00:00:\n * const result = addMinutes(new Date(2014, 6, 10, 12, 0), 30)\n * //=> Thu Jul 10 2014 12:30:00\n */\nexport function addMinutes(date, amount, options) {\n  const _date = toDate(date, options?.in);\n  _date.setTime(_date.getTime() + amount * millisecondsInMinute);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default addMinutes;\n", "import { addMonths } from \"./addMonths.js\";\n\n/**\n * The {@link addQuarters} function options.\n */\n\n/**\n * @name addQuarters\n * @category Quarter Helpers\n * @summary Add the specified number of year quarters to the given date.\n *\n * @description\n * Add the specified number of year quarters to the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The date to be changed\n * @param amount - The amount of quarters to be added.\n * @param options - An object with options\n *\n * @returns The new date with the quarters added\n *\n * @example\n * // Add 1 quarter to 1 September 2014:\n * const result = addQuarters(new Date(2014, 8, 1), 1)\n * //=; Mon Dec 01 2014 00:00:00\n */\nexport function addQuarters(date, amount, options) {\n  return addMonths(date, amount * 3, options);\n}\n\n// Fallback for modularized imports:\nexport default addQuarters;\n", "import { addMilliseconds } from \"./addMilliseconds.js\";\n\n/**\n * The {@link addSeconds} function options.\n */\n\n/**\n * @name addSeconds\n * @category Second Helpers\n * @summary Add the specified number of seconds to the given date.\n *\n * @description\n * Add the specified number of seconds to the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The date to be changed\n * @param amount - The amount of seconds to be added.\n * @param options - An object with options\n *\n * @returns The new date with the seconds added\n *\n * @example\n * // Add 30 seconds to 10 July 2014 12:45:00:\n * const result = addSeconds(new Date(2014, 6, 10, 12, 45, 0), 30)\n * //=> Thu Jul 10 2014 12:45:30\n */\nexport function addSeconds(date, amount, options) {\n  return addMilliseconds(date, amount * 1000, options);\n}\n\n// Fallback for modularized imports:\nexport default addSeconds;\n", "import { addDays } from \"./addDays.js\";\n\n/**\n * The {@link addWeeks} function options.\n */\n\n/**\n * @name addWeeks\n * @category Week Helpers\n * @summary Add the specified number of weeks to the given date.\n *\n * @description\n * Add the specified number of weeks to the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The date to be changed\n * @param amount - The amount of weeks to be added.\n * @param options - An object with options\n *\n * @returns The new date with the weeks added\n *\n * @example\n * // Add 4 weeks to 1 September 2014:\n * const result = addWeeks(new Date(2014, 8, 1), 4)\n * //=> Mon Sep 29 2014 00:00:00\n */\nexport function addWeeks(date, amount, options) {\n  return addDays(date, amount * 7, options);\n}\n\n// Fallback for modularized imports:\nexport default addWeeks;\n", "import { addMonths } from \"./addMonths.js\";\n\n/**\n * The {@link addYears} function options.\n */\n\n/**\n * @name addYears\n * @category Year Helpers\n * @summary Add the specified number of years to the given date.\n *\n * @description\n * Add the specified number of years to the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type.\n *\n * @param date - The date to be changed\n * @param amount - The amount of years to be added.\n * @param options - The options\n *\n * @returns The new date with the years added\n *\n * @example\n * // Add 5 years to 1 September 2014:\n * const result = addYears(new Date(2014, 8, 1), 5)\n * //=> Sun Sep 01 2019 00:00:00\n */\nexport function addYears(date, amount, options) {\n  return addMonths(date, amount * 12, options);\n}\n\n// Fallback for modularized imports:\nexport default addYears;\n", "import { toDate } from \"./toDate.js\";\n\n/**\n * @name compareAsc\n * @category Common Helpers\n * @summary Compare the two dates and return -1, 0 or 1.\n *\n * @description\n * Compare the two dates and return 1 if the first date is after the second,\n * -1 if the first date is before the second or 0 if dates are equal.\n *\n * @param dateLeft - The first date to compare\n * @param dateRight - The second date to compare\n *\n * @returns The result of the comparison\n *\n * @example\n * // Compare 11 February 1987 and 10 July 1989:\n * const result = compareAsc(new Date(1987, 1, 11), new Date(1989, 6, 10))\n * //=> -1\n *\n * @example\n * // Sort the array of dates:\n * const result = [\n *   new Date(1995, 6, 2),\n *   new Date(1987, 1, 11),\n *   new Date(1989, 6, 10)\n * ].sort(compareAsc)\n * //=> [\n * //   Wed Feb 11 1987 00:00:00,\n * //   Mon Jul 10 1989 00:00:00,\n * //   Sun Jul 02 1995 00:00:00\n * // ]\n */\nexport function compareAsc(dateLeft, dateRight) {\n  const diff = +toDate(dateLeft) - +toDate(dateRight);\n\n  if (diff < 0) return -1;\n  else if (diff > 0) return 1;\n\n  // Return 0 if diff is 0; return NaN if diff is NaN\n  return diff;\n}\n\n// Fallback for modularized imports:\nexport default compareAsc;\n", "/**\n * @name isDate\n * @category Common Helpers\n * @summary Is the given value a date?\n *\n * @description\n * Returns true if the given value is an instance of Date. The function works for dates transferred across iframes.\n *\n * @param value - The value to check\n *\n * @returns True if the given value is a date\n *\n * @example\n * // For a valid date:\n * const result = isDate(new Date())\n * //=> true\n *\n * @example\n * // For an invalid date:\n * const result = isDate(new Date(NaN))\n * //=> true\n *\n * @example\n * // For some value:\n * const result = isDate('2014-02-31')\n * //=> false\n *\n * @example\n * // For an object:\n * const result = isDate({})\n * //=> false\n */\nexport function isDate(value) {\n  return (\n    value instanceof Date ||\n    (typeof value === \"object\" &&\n      Object.prototype.toString.call(value) === \"[object Date]\")\n  );\n}\n\n// Fallback for modularized imports:\nexport default isDate;\n", "import { isDate } from \"./isDate.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * @name isValid\n * @category Common Helpers\n * @summary Is the given date valid?\n *\n * @description\n * Returns false if argument is Invalid Date and true otherwise.\n * Argument is converted to Date using `toDate`. See [toDate](https://date-fns.org/docs/toDate)\n * Invalid Date is a Date, whose time value is NaN.\n *\n * Time value of Date: http://es5.github.io/#x15.9.1.1\n *\n * @param date - The date to check\n *\n * @returns The date is valid\n *\n * @example\n * // For the valid date:\n * const result = isValid(new Date(2014, 1, 31))\n * //=> true\n *\n * @example\n * // For the value, convertible into a date:\n * const result = isValid(1393804800000)\n * //=> true\n *\n * @example\n * // For the invalid date:\n * const result = isValid(new Date(''))\n * //=> false\n */\nexport function isValid(date) {\n  return !((!isDate(date) && typeof date !== \"number\") || isNaN(+toDate(date)));\n}\n\n// Fallback for modularized imports:\nexport default isValid;\n", "import { normalizeDates } from \"./_lib/normalizeDates.js\";\n\n/**\n * The {@link differenceInCalendarMonths} function options.\n */\n\n/**\n * @name differenceInCalendarMonths\n * @category Month Helpers\n * @summary Get the number of calendar months between the given dates.\n *\n * @description\n * Get the number of calendar months between the given dates.\n *\n * @param laterDate - The later date\n * @param earlierDate - The earlier date\n * @param options - An object with options\n *\n * @returns The number of calendar months\n *\n * @example\n * // How many calendar months are between 31 January 2014 and 1 September 2014?\n * const result = differenceInCalendarMonths(\n *   new Date(2014, 8, 1),\n *   new Date(2014, 0, 31)\n * )\n * //=> 8\n */\nexport function differenceInCalendarMonths(laterDate, earlierDate, options) {\n  const [laterDate_, earlierDate_] = normalizeDates(\n    options?.in,\n    laterDate,\n    earlierDate,\n  );\n\n  const yearsDiff = laterDate_.getFullYear() - earlierDate_.getFullYear();\n  const monthsDiff = laterDate_.getMonth() - earlierDate_.getMonth();\n\n  return yearsDiff * 12 + monthsDiff;\n}\n\n// Fallback for modularized imports:\nexport default differenceInCalendarMonths;\n", "import { normalizeDates } from \"./_lib/normalizeDates.js\";\n\n/**\n * The {@link differenceInCalendarYears} function options.\n */\n\n/**\n * @name differenceInCalendarYears\n * @category Year Helpers\n * @summary Get the number of calendar years between the given dates.\n *\n * @description\n * Get the number of calendar years between the given dates.\n *\n * @param laterDate - The later date\n * @param earlierDate - The earlier date\n * @param options - An object with options\n\n * @returns The number of calendar years\n *\n * @example\n * // How many calendar years are between 31 December 2013 and 11 February 2015?\n * const result = differenceInCalendarYears(\n *   new Date(2015, 1, 11),\n *   new Date(2013, 11, 31)\n * );\n * //=> 2\n */\nexport function differenceInCalendarYears(laterDate, earlierDate, options) {\n  const [laterDate_, earlierDate_] = normalizeDates(\n    options?.in,\n    laterDate,\n    earlierDate,\n  );\n  return laterDate_.getFullYear() - earlierDate_.getFullYear();\n}\n\n// Fallback for modularized imports:\nexport default differenceInCalendarYears;\n", "import { normalizeDates } from \"./_lib/normalizeDates.js\";\nimport { differenceInCalendarDays } from \"./differenceInCalendarDays.js\";\n\n/**\n * The {@link differenceInDays} function options.\n */\n\n/**\n * @name differenceInDays\n * @category Day Helpers\n * @summary Get the number of full days between the given dates.\n *\n * @description\n * Get the number of full day periods between two dates. Fractional days are\n * truncated towards zero.\n *\n * One \"full day\" is the distance between a local time in one day to the same\n * local time on the next or previous day. A full day can sometimes be less than\n * or more than 24 hours if a daylight savings change happens between two dates.\n *\n * To ignore DST and only measure exact 24-hour periods, use this instead:\n * `Math.trunc(differenceInHours(dateLeft, dateRight)/24)|0`.\n *\n * @param laterDate - The later date\n * @param earlierDate - The earlier date\n * @param options - An object with options\n *\n * @returns The number of full days according to the local timezone\n *\n * @example\n * // How many full days are between\n * // 2 July 2011 23:00:00 and 2 July 2012 00:00:00?\n * const result = differenceInDays(\n *   new Date(2012, 6, 2, 0, 0),\n *   new Date(2011, 6, 2, 23, 0)\n * )\n * //=> 365\n *\n * @example\n * // How many full days are between\n * // 2 July 2011 23:59:00 and 3 July 2011 00:01:00?\n * const result = differenceInDays(\n *   new Date(2011, 6, 3, 0, 1),\n *   new Date(2011, 6, 2, 23, 59)\n * )\n * //=> 0\n *\n * @example\n * // How many full days are between\n * // 1 March 2020 0:00 and 1 June 2020 0:00 ?\n * // Note: because local time is used, the\n * // result will always be 92 days, even in\n * // time zones where DST starts and the\n * // period has only 92*24-1 hours.\n * const result = differenceInDays(\n *   new Date(2020, 5, 1),\n *   new Date(2020, 2, 1)\n * )\n * //=> 92\n */\nexport function differenceInDays(laterDate, earlierDate, options) {\n  const [laterDate_, earlierDate_] = normalizeDates(\n    options?.in,\n    laterDate,\n    earlierDate,\n  );\n\n  const sign = compareLocalAsc(laterDate_, earlierDate_);\n  const difference = Math.abs(\n    differenceInCalendarDays(laterDate_, earlierDate_),\n  );\n\n  laterDate_.setDate(laterDate_.getDate() - sign * difference);\n\n  // Math.abs(diff in full days - diff in calendar days) === 1 if last calendar day is not full\n  // If so, result must be decreased by 1 in absolute value\n  const isLastDayNotFull = Number(\n    compareLocalAsc(laterDate_, earlierDate_) === -sign,\n  );\n\n  const result = sign * (difference - isLastDayNotFull);\n  // Prevent negative zero\n  return result === 0 ? 0 : result;\n}\n\n// Like `compareAsc` but uses local time not UTC, which is needed\n// for accurate equality comparisons of UTC timestamps that end up\n// having the same representation in local time, e.g. one hour before\n// DST ends vs. the instant that DST ends.\nfunction compareLocalAsc(laterDate, earlierDate) {\n  const diff =\n    laterDate.getFullYear() - earlierDate.getFullYear() ||\n    laterDate.getMonth() - earlierDate.getMonth() ||\n    laterDate.getDate() - earlierDate.getDate() ||\n    laterDate.getHours() - earlierDate.getHours() ||\n    laterDate.getMinutes() - earlierDate.getMinutes() ||\n    laterDate.getSeconds() - earlierDate.getSeconds() ||\n    laterDate.getMilliseconds() - earlierDate.getMilliseconds();\n\n  if (diff < 0) return -1;\n  if (diff > 0) return 1;\n\n  // Return 0 if diff is 0; return NaN if diff is NaN\n  return diff;\n}\n\n// Fallback for modularized imports:\nexport default differenceInDays;\n", "export function getRoundingMethod(method) {\n  return (number) => {\n    const round = method ? Math[method] : Math.trunc;\n    const result = round(number);\n    // Prevent negative zero\n    return result === 0 ? 0 : result;\n  };\n}\n", "import { getRoundingMethod } from \"./_lib/getRoundingMethod.js\";\nimport { normalizeDates } from \"./_lib/normalizeDates.js\";\nimport { millisecondsInHour } from \"./constants.js\";\n\n/**\n * The {@link differenceInHours} function options.\n */\n\n/**\n * @name differenceInHours\n * @category Hour Helpers\n * @summary Get the number of hours between the given dates.\n *\n * @description\n * Get the number of hours between the given dates.\n *\n * @param laterDate - The later date\n * @param earlierDate - The earlier date\n * @param options - An object with options.\n *\n * @returns The number of hours\n *\n * @example\n * // How many hours are between 2 July 2014 06:50:00 and 2 July 2014 19:00:00?\n * const result = differenceInHours(\n *   new Date(2014, 6, 2, 19, 0),\n *   new Date(2014, 6, 2, 6, 50)\n * )\n * //=> 12\n */\nexport function differenceInHours(laterDate, earlierDate, options) {\n  const [laterDate_, earlierDate_] = normalizeDates(\n    options?.in,\n    laterDate,\n    earlierDate,\n  );\n  const diff = (+laterDate_ - +earlierDate_) / millisecondsInHour;\n  return getRoundingMethod(options?.roundingMethod)(diff);\n}\n\n// Fallback for modularized imports:\nexport default differenceInHours;\n", "import { toDate } from \"./toDate.js\";\n\n/**\n * @name differenceInMilliseconds\n * @category Millisecond Helpers\n * @summary Get the number of milliseconds between the given dates.\n *\n * @description\n * Get the number of milliseconds between the given dates.\n *\n * @param laterDate - The later date\n * @param earlierDate - The earlier date\n *\n * @returns The number of milliseconds\n *\n * @example\n * // How many milliseconds are between\n * // 2 July 2014 12:30:20.600 and 2 July 2014 12:30:21.700?\n * const result = differenceInMilliseconds(\n *   new Date(2014, 6, 2, 12, 30, 21, 700),\n *   new Date(2014, 6, 2, 12, 30, 20, 600)\n * )\n * //=> 1100\n */\nexport function differenceInMilliseconds(laterDate, earlierDate) {\n  return +toDate(laterDate) - +toDate(earlierDate);\n}\n\n// Fallback for modularized imports:\nexport default differenceInMilliseconds;\n", "import { getRoundingMethod } from \"./_lib/getRoundingMethod.js\";\nimport { millisecondsInMinute } from \"./constants.js\";\nimport { differenceInMilliseconds } from \"./differenceInMilliseconds.js\";\n\n/**\n * The {@link differenceInMinutes} function options.\n */\n\n/**\n * @name differenceInMinutes\n * @category Minute Helpers\n * @summary Get the number of minutes between the given dates.\n *\n * @description\n * Get the signed number of full (rounded towards 0) minutes between the given dates.\n *\n * @param dateLeft - The later date\n * @param dateRight - The earlier date\n * @param options - An object with options.\n *\n * @returns The number of minutes\n *\n * @example\n * // How many minutes are between 2 July 2014 12:07:59 and 2 July 2014 12:20:00?\n * const result = differenceInMinutes(\n *   new Date(2014, 6, 2, 12, 20, 0),\n *   new Date(2014, 6, 2, 12, 7, 59)\n * )\n * //=> 12\n *\n * @example\n * // How many minutes are between 10:01:59 and 10:00:00\n * const result = differenceInMinutes(\n *   new Date(2000, 0, 1, 10, 0, 0),\n *   new Date(2000, 0, 1, 10, 1, 59)\n * )\n * //=> -1\n */\nexport function differenceInMinutes(dateLeft, dateRight, options) {\n  const diff =\n    differenceInMilliseconds(dateLeft, dateRight) / millisecondsInMinute;\n  return getRoundingMethod(options?.roundingMethod)(diff);\n}\n\n// Fallback for modularized imports:\nexport default differenceInMinutes;\n", "import { toDate } from \"./toDate.js\";\n\n/**\n * The {@link endOfDay} function options.\n */\n\n/**\n * @name endOfDay\n * @category Day Helpers\n * @summary Return the end of a day for the given date.\n *\n * @description\n * Return the end of a day for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The end of a day\n *\n * @example\n * // The end of a day for 2 September 2014 11:55:00:\n * const result = endOfDay(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 02 2014 23:59:59.999\n */\nexport function endOfDay(date, options) {\n  const _date = toDate(date, options?.in);\n  _date.setHours(23, 59, 59, 999);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default endOfDay;\n", "import { toDate } from \"./toDate.js\";\n\n/**\n * The {@link endOfMonth} function options.\n */\n\n/**\n * @name endOfMonth\n * @category Month Helpers\n * @summary Return the end of a month for the given date.\n *\n * @description\n * Return the end of a month for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The end of a month\n *\n * @example\n * // The end of a month for 2 September 2014 11:55:00:\n * const result = endOfMonth(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 30 2014 23:59:59.999\n */\nexport function endOfMonth(date, options) {\n  const _date = toDate(date, options?.in);\n  const month = _date.getMonth();\n  _date.setFullYear(_date.getFullYear(), month + 1, 0);\n  _date.setHours(23, 59, 59, 999);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default endOfMonth;\n", "import { endOfDay } from \"./endOfDay.js\";\nimport { endOfMonth } from \"./endOfMonth.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * @name isLastDayOfMonth\n * @category Month Helpers\n * @summary Is the given date the last day of a month?\n *\n * @description\n * Is the given date the last day of a month?\n *\n * @param date - The date to check\n * @param options - An object with options\n *\n * @returns The date is the last day of a month\n *\n * @example\n * // Is 28 February 2014 the last day of a month?\n * const result = isLastDayOfMonth(new Date(2014, 1, 28))\n * //=> true\n */\nexport function isLastDayOfMonth(date, options) {\n  const _date = toDate(date, options?.in);\n  return +endOfDay(_date, options) === +endOfMonth(_date, options);\n}\n\n// Fallback for modularized imports:\nexport default isLastDayOfMonth;\n", "import { normalizeDates } from \"./_lib/normalizeDates.js\";\nimport { compareAsc } from \"./compareAsc.js\";\nimport { differenceInCalendarMonths } from \"./differenceInCalendarMonths.js\";\nimport { isLastDayOfMonth } from \"./isLastDayOfMonth.js\";\n\n/**\n * The {@link differenceInMonths} function options.\n */\n\n/**\n * @name differenceInMonths\n * @category Month Helpers\n * @summary Get the number of full months between the given dates.\n *\n * @param laterDate - The later date\n * @param earlierDate - The earlier date\n * @param options - An object with options\n *\n * @returns The number of full months\n *\n * @example\n * // How many full months are between 31 January 2014 and 1 September 2014?\n * const result = differenceInMonths(new Date(2014, 8, 1), new Date(2014, 0, 31))\n * //=> 7\n */\nexport function differenceInMonths(laterDate, earlierDate, options) {\n  const [laterDate_, workingLaterDate, earlierDate_] = normalizeDates(\n    options?.in,\n    laterDate,\n    laterDate,\n    earlierDate,\n  );\n\n  const sign = compareAsc(workingLaterDate, earlierDate_);\n  const difference = Math.abs(\n    differenceInCalendarMonths(workingLaterDate, earlierDate_),\n  );\n\n  if (difference < 1) return 0;\n\n  if (workingLaterDate.getMonth() === 1 && workingLaterDate.getDate() > 27)\n    workingLaterDate.setDate(30);\n\n  workingLaterDate.setMonth(workingLaterDate.getMonth() - sign * difference);\n\n  let isLastMonthNotFull = compareAsc(workingLaterDate, earlierDate_) === -sign;\n\n  if (\n    isLastDayOfMonth(laterDate_) &&\n    difference === 1 &&\n    compareAsc(laterDate_, earlierDate_) === 1\n  ) {\n    isLastMonthNotFull = false;\n  }\n\n  const result = sign * (difference - +isLastMonthNotFull);\n  return result === 0 ? 0 : result;\n}\n\n// Fallback for modularized imports:\nexport default differenceInMonths;\n", "import { getRoundingMethod } from \"./_lib/getRoundingMethod.js\";\nimport { differenceInMonths } from \"./differenceInMonths.js\";\n\n/**\n * The {@link differenceInQuarters} function options.\n */\n\n/**\n * @name differenceInQuarters\n * @category Quarter Helpers\n * @summary Get the number of quarters between the given dates.\n *\n * @description\n * Get the number of quarters between the given dates.\n *\n * @param laterDate - The later date\n * @param earlierDate - The earlier date\n * @param options - An object with options.\n *\n * @returns The number of full quarters\n *\n * @example\n * // How many full quarters are between 31 December 2013 and 2 July 2014?\n * const result = differenceInQuarters(new Date(2014, 6, 2), new Date(2013, 11, 31))\n * //=> 2\n */\nexport function differenceInQuarters(laterDate, earlierDate, options) {\n  const diff = differenceInMonths(laterDate, earlierDate, options) / 3;\n  return getRoundingMethod(options?.roundingMethod)(diff);\n}\n\n// Fallback for modularized imports:\nexport default differenceInQuarters;\n", "import { getRoundingMethod } from \"./_lib/getRoundingMethod.js\";\nimport { differenceInMilliseconds } from \"./differenceInMilliseconds.js\";\n\n/**\n * The {@link differenceInSeconds} function options.\n */\n\n/**\n * @name differenceInSeconds\n * @category Second Helpers\n * @summary Get the number of seconds between the given dates.\n *\n * @description\n * Get the number of seconds between the given dates.\n *\n * @param laterDate - The later date\n * @param earlierDate - The earlier date\n * @param options - An object with options.\n *\n * @returns The number of seconds\n *\n * @example\n * // How many seconds are between\n * // 2 July 2014 12:30:07.999 and 2 July 2014 12:30:20.000?\n * const result = differenceInSeconds(\n *   new Date(2014, 6, 2, 12, 30, 20, 0),\n *   new Date(2014, 6, 2, 12, 30, 7, 999)\n * )\n * //=> 12\n */\nexport function differenceInSeconds(laterDate, earlierDate, options) {\n  const diff = differenceInMilliseconds(laterDate, earlierDate) / 1000;\n  return getRoundingMethod(options?.roundingMethod)(diff);\n}\n\n// Fallback for modularized imports:\nexport default differenceInSeconds;\n", "import { getRoundingMethod } from \"./_lib/getRoundingMethod.js\";\nimport { differenceInDays } from \"./differenceInDays.js\";\n\n/**\n * The {@link differenceInWeeks} function options.\n */\n\n/**\n * @name differenceInWeeks\n * @category Week Helpers\n * @summary Get the number of full weeks between the given dates.\n *\n * @description\n * Get the number of full weeks between two dates. Fractional weeks are\n * truncated towards zero by default.\n *\n * One \"full week\" is the distance between a local time in one day to the same\n * local time 7 days earlier or later. A full week can sometimes be less than\n * or more than 7*24 hours if a daylight savings change happens between two dates.\n *\n * To ignore DST and only measure exact 7*24-hour periods, use this instead:\n * `Math.trunc(differenceInHours(dateLeft, dateRight)/(7*24))|0`.\n *\n * @param laterDate - The later date\n * @param earlierDate - The earlier date\n * @param options - An object with options\n *\n * @returns The number of full weeks\n *\n * @example\n * // How many full weeks are between 5 July 2014 and 20 July 2014?\n * const result = differenceInWeeks(new Date(2014, 6, 20), new Date(2014, 6, 5))\n * //=> 2\n *\n * @example\n * // How many full weeks are between\n * // 1 March 2020 0:00 and 6 June 2020 0:00 ?\n * // Note: because local time is used, the\n * // result will always be 8 weeks (54 days),\n * // even if DST starts and the period has\n * // only 54*24-1 hours.\n * const result = differenceInWeeks(\n *   new Date(2020, 5, 1),\n *   new Date(2020, 2, 6)\n * )\n * //=> 8\n */\nexport function differenceInWeeks(laterDate, earlierDate, options) {\n  const diff = differenceInDays(laterDate, earlierDate, options) / 7;\n  return getRoundingMethod(options?.roundingMethod)(diff);\n}\n\n// Fallback for modularized imports:\nexport default differenceInWeeks;\n", "import { normalizeDates } from \"./_lib/normalizeDates.js\";\nimport { compareAsc } from \"./compareAsc.js\";\nimport { differenceInCalendarYears } from \"./differenceInCalendarYears.js\";\n\n/**\n * The {@link differenceInYears} function options.\n */\n\n/**\n * @name differenceInYears\n * @category Year Helpers\n * @summary Get the number of full years between the given dates.\n *\n * @description\n * Get the number of full years between the given dates.\n *\n * @param laterDate - The later date\n * @param earlierDate - The earlier date\n * @param options - An object with options\n *\n * @returns The number of full years\n *\n * @example\n * // How many full years are between 31 December 2013 and 11 February 2015?\n * const result = differenceInYears(new Date(2015, 1, 11), new Date(2013, 11, 31))\n * //=> 1\n */\nexport function differenceInYears(laterDate, earlierDate, options) {\n  const [laterDate_, earlierDate_] = normalizeDates(\n    options?.in,\n    laterDate,\n    earlierDate,\n  );\n\n  // -1 if the left date is earlier than the right date\n  // 2023-12-31 - 2024-01-01 = -1\n  const sign = compareAsc(laterDate_, earlierDate_);\n\n  // First calculate the difference in calendar years\n  // 2024-01-01 - 2023-12-31 = 1 year\n  const diff = Math.abs(differenceInCalendarYears(laterDate_, earlierDate_));\n\n  // Now we need to calculate if the difference is full. To do that we set\n  // both dates to the same year and check if the both date's month and day\n  // form a full year.\n  laterDate_.setFullYear(1584);\n  earlierDate_.setFullYear(1584);\n\n  // For it to be true, when the later date is indeed later than the earlier date\n  // (2026-02-01 - 2023-12-10 = 3 years), the difference is full if\n  // the normalized later date is also later than the normalized earlier date.\n  // In our example, 1584-02-01 is earlier than 1584-12-10, so the difference\n  // is partial, hence we need to subtract 1 from the difference 3 - 1 = 2.\n  const partial = compareAsc(laterDate_, earlierDate_) === -sign;\n\n  const result = sign * (diff - +partial);\n\n  // Prevent negative zero\n  return result === 0 ? 0 : result;\n}\n\n// Fallback for modularized imports:\nexport default differenceInYears;\n", "import { toDate } from \"./toDate.js\";\n\n/**\n * The {@link startOfQuarter} function options.\n */\n\n/**\n * @name startOfQuarter\n * @category Quarter Helpers\n * @summary Return the start of a year quarter for the given date.\n *\n * @description\n * Return the start of a year quarter for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - The options\n *\n * @returns The start of a quarter\n *\n * @example\n * // The start of a quarter for 2 September 2014 11:55:00:\n * const result = startOfQuarter(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Jul 01 2014 00:00:00\n */\nexport function startOfQuarter(date, options) {\n  const _date = toDate(date, options?.in);\n  const currentMonth = _date.getMonth();\n  const month = currentMonth - (currentMonth % 3);\n  _date.setMonth(month, 1);\n  _date.setHours(0, 0, 0, 0);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfQuarter;\n", "import { toDate } from \"./toDate.js\";\n\n/**\n * The {@link startOfMonth} function options.\n */\n\n/**\n * @name startOfMonth\n * @category Month Helpers\n * @summary Return the start of a month for the given date.\n *\n * @description\n * Return the start of a month for the given date. The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments.\n * Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed,\n * or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The start of a month\n *\n * @example\n * // The start of a month for 2 September 2014 11:55:00:\n * const result = startOfMonth(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Mon Sep 01 2014 00:00:00\n */\nexport function startOfMonth(date, options) {\n  const _date = toDate(date, options?.in);\n  _date.setDate(1);\n  _date.setHours(0, 0, 0, 0);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfMonth;\n", "import { toDate } from \"./toDate.js\";\n\n/**\n * The {@link endOfYear} function options.\n */\n\n/**\n * @name endOfYear\n * @category Year Helpers\n * @summary Return the end of a year for the given date.\n *\n * @description\n * Return the end of a year for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - The options\n *\n * @returns The end of a year\n *\n * @example\n * // The end of a year for 2 September 2014 11:55:00:\n * const result = endOfYear(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Wed Dec 31 2014 23:59:59.999\n */\nexport function endOfYear(date, options) {\n  const _date = toDate(date, options?.in);\n  const year = _date.getFullYear();\n  _date.setFullYear(year + 1, 0, 0);\n  _date.setHours(23, 59, 59, 999);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default endOfYear;\n", "import { toDate } from \"./toDate.js\";\n\n/**\n * The {@link startOfYear} function options.\n */\n\n/**\n * @name startOfYear\n * @category Year Helpers\n * @summary Return the start of a year for the given date.\n *\n * @description\n * Return the start of a year for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - The options\n *\n * @returns The start of a year\n *\n * @example\n * // The start of a year for 2 September 2014 11:55:00:\n * const result = startOfYear(new Date(2014, 8, 2, 11, 55, 00))\n * //=> Wed Jan 01 2014 00:00:00\n */\nexport function startOfYear(date, options) {\n  const date_ = toDate(date, options?.in);\n  date_.setFullYear(date_.getFullYear(), 0, 1);\n  date_.setHours(0, 0, 0, 0);\n  return date_;\n}\n\n// Fallback for modularized imports:\nexport default startOfYear;\n", "import { toDate } from \"./toDate.js\";\n\n/**\n * The {@link endOfHour} function options.\n */\n\n/**\n * @name endOfHour\n * @category Hour Helpers\n * @summary Return the end of an hour for the given date.\n *\n * @description\n * Return the end of an hour for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The end of an hour\n *\n * @example\n * // The end of an hour for 2 September 2014 11:55:00:\n * const result = endOfHour(new Date(2014, 8, 2, 11, 55))\n * //=> Tue Sep 02 2014 11:59:59.999\n */\nexport function endOfHour(date, options) {\n  const _date = toDate(date, options?.in);\n  _date.setMinutes(59, 59, 999);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default endOfHour;\n", "import { getDefaultOptions } from \"./_lib/defaultOptions.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link endOfWeek} function options.\n */\n\n/**\n * @name endOfWeek\n * @category Week Helpers\n * @summary Return the end of a week for the given date.\n *\n * @description\n * Return the end of a week for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The end of a week\n *\n * @example\n * // The end of a week for 2 September 2014 11:55:00:\n * const result = endOfWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sat Sep 06 2014 23:59:59.999\n *\n * @example\n * // If the week starts on Monday, the end of the week for 2 September 2014 11:55:00:\n * const result = endOfWeek(new Date(2014, 8, 2, 11, 55, 0), { weekStartsOn: 1 })\n * //=> Sun Sep 07 2014 23:59:59.999\n */\nexport function endOfWeek(date, options) {\n  const defaultOptions = getDefaultOptions();\n  const weekStartsOn =\n    options?.weekStartsOn ??\n    options?.locale?.options?.weekStartsOn ??\n    defaultOptions.weekStartsOn ??\n    defaultOptions.locale?.options?.weekStartsOn ??\n    0;\n\n  const _date = toDate(date, options?.in);\n  const day = _date.getDay();\n  const diff = (day < weekStartsOn ? -7 : 0) + 6 - (day - weekStartsOn);\n\n  _date.setDate(_date.getDate() + diff);\n  _date.setHours(23, 59, 59, 999);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default endOfWeek;\n", "import { toDate } from \"./toDate.js\";\n\n/**\n * The {@link endOfMinute} function options.\n */\n\n/**\n * @name endOfMinute\n * @category Minute Helpers\n * @summary Return the end of a minute for the given date.\n *\n * @description\n * Return the end of a minute for the given date.\n * The result will be in the local timezone or the provided context.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The end of a minute\n *\n * @example\n * // The end of a minute for 1 December 2014 22:15:45.400:\n * const result = endOfMinute(new Date(2014, 11, 1, 22, 15, 45, 400))\n * //=> Mon Dec 01 2014 22:15:59.999\n */\nexport function endOfMinute(date, options) {\n  const _date = toDate(date, options?.in);\n  _date.setSeconds(59, 999);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default endOfMinute;\n", "import { toDate } from \"./toDate.js\";\n\n/**\n * The {@link endOfQuarter} function options.\n */\n\n/**\n * @name endOfQuarter\n * @category Quarter Helpers\n * @summary Return the end of a year quarter for the given date.\n *\n * @description\n * Return the end of a year quarter for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The end of a quarter\n *\n * @example\n * // The end of a quarter for 2 September 2014 11:55:00:\n * const result = endOfQuarter(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 30 2014 23:59:59.999\n */\nexport function endOfQuarter(date, options) {\n  const _date = toDate(date, options?.in);\n  const currentMonth = _date.getMonth();\n  const month = currentMonth - (currentMonth % 3) + 3;\n  _date.setMonth(month, 0);\n  _date.setHours(23, 59, 59, 999);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default endOfQuarter;\n", "import { toDate } from \"./toDate.js\";\n\n/**\n * The {@link endOfSecond} function options.\n */\n\n/**\n * @name endOfSecond\n * @category Second Helpers\n * @summary Return the end of a second for the given date.\n *\n * @description\n * Return the end of a second for the given date.\n * The result will be in the local timezone if no `in` option is specified.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The end of a second\n *\n * @example\n * // The end of a second for 1 December 2014 22:15:45.400:\n * const result = endOfSecond(new Date(2014, 11, 1, 22, 15, 45, 400))\n * //=> Mon Dec 01 2014 22:15:45.999\n */\nexport function endOfSecond(date, options) {\n  const _date = toDate(date, options?.in);\n  _date.setMilliseconds(999);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default endOfSecond;\n", "const formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: \"less than a second\",\n    other: \"less than {{count}} seconds\",\n  },\n\n  xSeconds: {\n    one: \"1 second\",\n    other: \"{{count}} seconds\",\n  },\n\n  halfAMinute: \"half a minute\",\n\n  lessThanXMinutes: {\n    one: \"less than a minute\",\n    other: \"less than {{count}} minutes\",\n  },\n\n  xMinutes: {\n    one: \"1 minute\",\n    other: \"{{count}} minutes\",\n  },\n\n  aboutXHours: {\n    one: \"about 1 hour\",\n    other: \"about {{count}} hours\",\n  },\n\n  xHours: {\n    one: \"1 hour\",\n    other: \"{{count}} hours\",\n  },\n\n  xDays: {\n    one: \"1 day\",\n    other: \"{{count}} days\",\n  },\n\n  aboutXWeeks: {\n    one: \"about 1 week\",\n    other: \"about {{count}} weeks\",\n  },\n\n  xWeeks: {\n    one: \"1 week\",\n    other: \"{{count}} weeks\",\n  },\n\n  aboutXMonths: {\n    one: \"about 1 month\",\n    other: \"about {{count}} months\",\n  },\n\n  xMonths: {\n    one: \"1 month\",\n    other: \"{{count}} months\",\n  },\n\n  aboutXYears: {\n    one: \"about 1 year\",\n    other: \"about {{count}} years\",\n  },\n\n  xYears: {\n    one: \"1 year\",\n    other: \"{{count}} years\",\n  },\n\n  overXYears: {\n    one: \"over 1 year\",\n    other: \"over {{count}} years\",\n  },\n\n  almostXYears: {\n    one: \"almost 1 year\",\n    other: \"almost {{count}} years\",\n  },\n};\n\nexport const formatDistance = (token, count, options) => {\n  let result;\n\n  const tokenValue = formatDistanceLocale[token];\n  if (typeof tokenValue === \"string\") {\n    result = tokenValue;\n  } else if (count === 1) {\n    result = tokenValue.one;\n  } else {\n    result = tokenValue.other.replace(\"{{count}}\", count.toString());\n  }\n\n  if (options?.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      return \"in \" + result;\n    } else {\n      return result + \" ago\";\n    }\n  }\n\n  return result;\n};\n", "export function buildFormatLongFn(args) {\n  return (options = {}) => {\n    // TODO: Remove String()\n    const width = options.width ? String(options.width) : args.defaultWidth;\n    const format = args.formats[width] || args.formats[args.defaultWidth];\n    return format;\n  };\n}\n", "import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\n\nconst dateFormats = {\n  full: \"EEEE, MMMM do, y\",\n  long: \"MMMM do, y\",\n  medium: \"MMM d, y\",\n  short: \"MM/dd/yyyy\",\n};\n\nconst timeFormats = {\n  full: \"h:mm:ss a zzzz\",\n  long: \"h:mm:ss a z\",\n  medium: \"h:mm:ss a\",\n  short: \"h:mm a\",\n};\n\nconst dateTimeFormats = {\n  full: \"{{date}} 'at' {{time}}\",\n  long: \"{{date}} 'at' {{time}}\",\n  medium: \"{{date}}, {{time}}\",\n  short: \"{{date}}, {{time}}\",\n};\n\nexport const formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: \"full\",\n  }),\n\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: \"full\",\n  }),\n\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: \"full\",\n  }),\n};\n", "const formatRelativeLocale = {\n  lastWeek: \"'last' eeee 'at' p\",\n  yesterday: \"'yesterday at' p\",\n  today: \"'today at' p\",\n  tomorrow: \"'tomorrow at' p\",\n  nextWeek: \"eeee 'at' p\",\n  other: \"P\",\n};\n\nexport const formatRelative = (token, _date, _baseDate, _options) =>\n  formatRelativeLocale[token];\n", "/**\n * The localize function argument callback which allows to convert raw value to\n * the actual type.\n *\n * @param value - The value to convert\n *\n * @returns The converted value\n */\n\n/**\n * The map of localized values for each width.\n */\n\n/**\n * The index type of the locale unit value. It types conversion of units of\n * values that don't start at 0 (i.e. quarters).\n */\n\n/**\n * Converts the unit value to the tuple of values.\n */\n\n/**\n * The tuple of localized era values. The first element represents BC,\n * the second element represents AD.\n */\n\n/**\n * The tuple of localized quarter values. The first element represents Q1.\n */\n\n/**\n * The tuple of localized day values. The first element represents Sunday.\n */\n\n/**\n * The tuple of localized month values. The first element represents January.\n */\n\nexport function buildLocalizeFn(args) {\n  return (value, options) => {\n    const context = options?.context ? String(options.context) : \"standalone\";\n\n    let valuesArray;\n    if (context === \"formatting\" && args.formattingValues) {\n      const defaultWidth = args.defaultFormattingWidth || args.defaultWidth;\n      const width = options?.width ? String(options.width) : defaultWidth;\n\n      valuesArray =\n        args.formattingValues[width] || args.formattingValues[defaultWidth];\n    } else {\n      const defaultWidth = args.defaultWidth;\n      const width = options?.width ? String(options.width) : args.defaultWidth;\n\n      valuesArray = args.values[width] || args.values[defaultWidth];\n    }\n    const index = args.argumentCallback ? args.argumentCallback(value) : value;\n\n    // @ts-expect-error - For some reason TypeScript just don't want to match it, no matter how hard we try. I challenge you to try to remove it!\n    return valuesArray[index];\n  };\n}\n", "import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\n\nconst eraValues = {\n  narrow: [\"B\", \"A\"],\n  abbreviated: [\"BC\", \"AD\"],\n  wide: [\"Before Christ\", \"Anno Domini\"],\n};\n\nconst quarterValues = {\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\n  abbreviated: [\"Q1\", \"Q2\", \"Q3\", \"Q4\"],\n  wide: [\"1st quarter\", \"2nd quarter\", \"3rd quarter\", \"4th quarter\"],\n};\n\n// Note: in English, the names of days of the week and months are capitalized.\n// If you are making a new locale based on this one, check if the same is true for the language you're working on.\n// Generally, formatted dates should look like they are in the middle of a sentence,\n// e.g. in Spanish language the weekdays and months should be in the lowercase.\nconst monthValues = {\n  narrow: [\"J\", \"F\", \"M\", \"A\", \"M\", \"J\", \"J\", \"A\", \"S\", \"O\", \"N\", \"D\"],\n  abbreviated: [\n    \"Jan\",\n    \"Feb\",\n    \"Mar\",\n    \"Apr\",\n    \"May\",\n    \"Jun\",\n    \"Jul\",\n    \"Aug\",\n    \"Sep\",\n    \"Oct\",\n    \"Nov\",\n    \"Dec\",\n  ],\n\n  wide: [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n  ],\n};\n\nconst dayValues = {\n  narrow: [\"S\", \"M\", \"T\", \"W\", \"T\", \"F\", \"S\"],\n  short: [\"Su\", \"Mo\", \"Tu\", \"We\", \"Th\", \"Fr\", \"Sa\"],\n  abbreviated: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  wide: [\n    \"Sunday\",\n    \"Monday\",\n    \"Tuesday\",\n    \"Wednesday\",\n    \"Thursday\",\n    \"Friday\",\n    \"Saturday\",\n  ],\n};\n\nconst dayPeriodValues = {\n  narrow: {\n    am: \"a\",\n    pm: \"p\",\n    midnight: \"mi\",\n    noon: \"n\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\",\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\",\n  },\n  wide: {\n    am: \"a.m.\",\n    pm: \"p.m.\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\",\n  },\n};\n\nconst formattingDayPeriodValues = {\n  narrow: {\n    am: \"a\",\n    pm: \"p\",\n    midnight: \"mi\",\n    noon: \"n\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\",\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\",\n  },\n  wide: {\n    am: \"a.m.\",\n    pm: \"p.m.\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\",\n  },\n};\n\nconst ordinalNumber = (dirtyNumber, _options) => {\n  const number = Number(dirtyNumber);\n\n  // If ordinal numbers depend on context, for example,\n  // if they are different for different grammatical genders,\n  // use `options.unit`.\n  //\n  // `unit` can be 'year', 'quarter', 'month', 'week', 'date', 'dayOfYear',\n  // 'day', 'hour', 'minute', 'second'.\n\n  const rem100 = number % 100;\n  if (rem100 > 20 || rem100 < 10) {\n    switch (rem100 % 10) {\n      case 1:\n        return number + \"st\";\n      case 2:\n        return number + \"nd\";\n      case 3:\n        return number + \"rd\";\n    }\n  }\n  return number + \"th\";\n};\n\nexport const localize = {\n  ordinalNumber,\n\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: \"wide\",\n  }),\n\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: \"wide\",\n    argumentCallback: (quarter) => quarter - 1,\n  }),\n\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: \"wide\",\n  }),\n\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: \"wide\",\n  }),\n\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: \"wide\",\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: \"wide\",\n  }),\n};\n", "export function buildMatchFn(args) {\n  return (string, options = {}) => {\n    const width = options.width;\n\n    const matchPattern =\n      (width && args.matchPatterns[width]) ||\n      args.matchPatterns[args.defaultMatchWidth];\n    const matchResult = string.match(matchPattern);\n\n    if (!matchResult) {\n      return null;\n    }\n    const matchedString = matchResult[0];\n\n    const parsePatterns =\n      (width && args.parsePatterns[width]) ||\n      args.parsePatterns[args.defaultParseWidth];\n\n    const key = Array.isArray(parsePatterns)\n      ? findIndex(parsePatterns, (pattern) => pattern.test(matchedString))\n      : // [TODO] -- I challenge you to fix the type\n        findKey(parsePatterns, (pattern) => pattern.test(matchedString));\n\n    let value;\n\n    value = args.valueCallback ? args.valueCallback(key) : key;\n    value = options.valueCallback\n      ? // [TODO] -- I challenge you to fix the type\n        options.valueCallback(value)\n      : value;\n\n    const rest = string.slice(matchedString.length);\n\n    return { value, rest };\n  };\n}\n\nfunction findKey(object, predicate) {\n  for (const key in object) {\n    if (\n      Object.prototype.hasOwnProperty.call(object, key) &&\n      predicate(object[key])\n    ) {\n      return key;\n    }\n  }\n  return undefined;\n}\n\nfunction findIndex(array, predicate) {\n  for (let key = 0; key < array.length; key++) {\n    if (predicate(array[key])) {\n      return key;\n    }\n  }\n  return undefined;\n}\n", "export function buildMatchPatternFn(args) {\n  return (string, options = {}) => {\n    const matchResult = string.match(args.matchPattern);\n    if (!matchResult) return null;\n    const matchedString = matchResult[0];\n\n    const parseResult = string.match(args.parsePattern);\n    if (!parseResult) return null;\n    let value = args.valueCallback\n      ? args.valueCallback(parseResult[0])\n      : parseResult[0];\n\n    // [TODO] I challenge you to fix the type\n    value = options.valueCallback ? options.valueCallback(value) : value;\n\n    const rest = string.slice(matchedString.length);\n\n    return { value, rest };\n  };\n}\n", "import { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\n\nconst matchOrdinalNumberPattern = /^(\\d+)(th|st|nd|rd)?/i;\nconst parseOrdinalNumberPattern = /\\d+/i;\n\nconst matchEraPatterns = {\n  narrow: /^(b|a)/i,\n  abbreviated: /^(b\\.?\\s?c\\.?|b\\.?\\s?c\\.?\\s?e\\.?|a\\.?\\s?d\\.?|c\\.?\\s?e\\.?)/i,\n  wide: /^(before christ|before common era|anno domini|common era)/i,\n};\nconst parseEraPatterns = {\n  any: [/^b/i, /^(a|c)/i],\n};\n\nconst matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^q[1234]/i,\n  wide: /^[1234](th|st|nd|rd)? quarter/i,\n};\nconst parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i],\n};\n\nconst matchMonthPatterns = {\n  narrow: /^[jfmasond]/i,\n  abbreviated: /^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,\n  wide: /^(january|february|march|april|may|june|july|august|september|october|november|december)/i,\n};\nconst parseMonthPatterns = {\n  narrow: [\n    /^j/i,\n    /^f/i,\n    /^m/i,\n    /^a/i,\n    /^m/i,\n    /^j/i,\n    /^j/i,\n    /^a/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i,\n  ],\n\n  any: [\n    /^ja/i,\n    /^f/i,\n    /^mar/i,\n    /^ap/i,\n    /^may/i,\n    /^jun/i,\n    /^jul/i,\n    /^au/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i,\n  ],\n};\n\nconst matchDayPatterns = {\n  narrow: /^[smtwf]/i,\n  short: /^(su|mo|tu|we|th|fr|sa)/i,\n  abbreviated: /^(sun|mon|tue|wed|thu|fri|sat)/i,\n  wide: /^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i,\n};\nconst parseDayPatterns = {\n  narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],\n  any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i],\n};\n\nconst matchDayPeriodPatterns = {\n  narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,\n  any: /^([ap]\\.?\\s?m\\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i,\n};\nconst parseDayPeriodPatterns = {\n  any: {\n    am: /^a/i,\n    pm: /^p/i,\n    midnight: /^mi/i,\n    noon: /^no/i,\n    morning: /morning/i,\n    afternoon: /afternoon/i,\n    evening: /evening/i,\n    night: /night/i,\n  },\n};\n\nexport const match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: (value) => parseInt(value, 10),\n  }),\n\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: \"any\",\n    valueCallback: (index) => index + 1,\n  }),\n\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: \"any\",\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: \"any\",\n  }),\n};\n", "import { formatDistance } from \"./en-US/_lib/formatDistance.js\";\nimport { formatLong } from \"./en-US/_lib/formatLong.js\";\nimport { formatRelative } from \"./en-US/_lib/formatRelative.js\";\nimport { localize } from \"./en-US/_lib/localize.js\";\nimport { match } from \"./en-US/_lib/match.js\";\n\n/**\n * @category Locales\n * @summary English locale (United States).\n * @language English\n * @iso-639-2 eng\n * @author Sasha Koss [@kossnocorp](https://github.com/kossnocorp)\n * @author Lesha Koss [@leshakoss](https://github.com/leshakoss)\n */\nexport const enUS = {\n  code: \"en-US\",\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 0 /* Sunday */,\n    firstWeekContainsDate: 1,\n  },\n};\n\n// Fallback for modularized imports:\nexport default enUS;\n", "import { differenceInCalendarDays } from \"./differenceInCalendarDays.js\";\nimport { startOfYear } from \"./startOfYear.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link getDayOfYear} function options.\n */\n\n/**\n * @name getDayOfYear\n * @category Day Helpers\n * @summary Get the day of the year of the given date.\n *\n * @description\n * Get the day of the year of the given date.\n *\n * @param date - The given date\n * @param options - The options\n *\n * @returns The day of year\n *\n * @example\n * // Which day of the year is 2 July 2014?\n * const result = getDayOfYear(new Date(2014, 6, 2))\n * //=> 183\n */\nexport function getDayOfYear(date, options) {\n  const _date = toDate(date, options?.in);\n  const diff = differenceInCalendarDays(_date, startOfYear(_date));\n  const dayOfYear = diff + 1;\n  return dayOfYear;\n}\n\n// Fallback for modularized imports:\nexport default getDayOfYear;\n", "import { millisecondsInWeek } from \"./constants.js\";\nimport { startOfISOWeek } from \"./startOfISOWeek.js\";\nimport { startOfISOWeekYear } from \"./startOfISOWeekYear.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link getISOWeek} function options.\n */\n\n/**\n * @name getISOWeek\n * @category ISO Week Helpers\n * @summary Get the ISO week of the given date.\n *\n * @description\n * Get the ISO week of the given date.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param date - The given date\n * @param options - The options\n *\n * @returns The ISO week\n *\n * @example\n * // Which week of the ISO-week numbering year is 2 January 2005?\n * const result = getISOWeek(new Date(2005, 0, 2))\n * //=> 53\n */\nexport function getISOWeek(date, options) {\n  const _date = toDate(date, options?.in);\n  const diff = +startOfISOWeek(_date) - +startOfISOWeekYear(_date);\n\n  // Round the number of weeks to the nearest integer because the number of\n  // milliseconds in a week is not constant (e.g. it's different in the week of\n  // the daylight saving time clock shift).\n  return Math.round(diff / millisecondsInWeek) + 1;\n}\n\n// Fallback for modularized imports:\nexport default getISOWeek;\n", "import { getDefaultOptions } from \"./_lib/defaultOptions.js\";\nimport { constructFrom } from \"./constructFrom.js\";\nimport { startOfWeek } from \"./startOfWeek.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link getWeekYear} function options.\n */\n\n/**\n * @name getWeekYear\n * @category Week-Numbering Year Helpers\n * @summary Get the local week-numbering year of the given date.\n *\n * @description\n * Get the local week-numbering year of the given date.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n *\n * @param date - The given date\n * @param options - An object with options.\n *\n * @returns The local week-numbering year\n *\n * @example\n * // Which week numbering year is 26 December 2004 with the default settings?\n * const result = getWeekYear(new Date(2004, 11, 26))\n * //=> 2005\n *\n * @example\n * // Which week numbering year is 26 December 2004 if week starts on Saturday?\n * const result = getWeekYear(new Date(2004, 11, 26), { weekStartsOn: 6 })\n * //=> 2004\n *\n * @example\n * // Which week numbering year is 26 December 2004 if the first week contains 4 January?\n * const result = getWeekYear(new Date(2004, 11, 26), { firstWeekContainsDate: 4 })\n * //=> 2004\n */\nexport function getWeekYear(date, options) {\n  const _date = toDate(date, options?.in);\n  const year = _date.getFullYear();\n\n  const defaultOptions = getDefaultOptions();\n  const firstWeekContainsDate =\n    options?.firstWeekContainsDate ??\n    options?.locale?.options?.firstWeekContainsDate ??\n    defaultOptions.firstWeekContainsDate ??\n    defaultOptions.locale?.options?.firstWeekContainsDate ??\n    1;\n\n  const firstWeekOfNextYear = constructFrom(options?.in || date, 0);\n  firstWeekOfNextYear.setFullYear(year + 1, 0, firstWeekContainsDate);\n  firstWeekOfNextYear.setHours(0, 0, 0, 0);\n  const startOfNextYear = startOfWeek(firstWeekOfNextYear, options);\n\n  const firstWeekOfThisYear = constructFrom(options?.in || date, 0);\n  firstWeekOfThisYear.setFullYear(year, 0, firstWeekContainsDate);\n  firstWeekOfThisYear.setHours(0, 0, 0, 0);\n  const startOfThisYear = startOfWeek(firstWeekOfThisYear, options);\n\n  if (+_date >= +startOfNextYear) {\n    return year + 1;\n  } else if (+_date >= +startOfThisYear) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}\n\n// Fallback for modularized imports:\nexport default getWeekYear;\n", "import { getDefaultOptions } from \"./_lib/defaultOptions.js\";\nimport { constructFrom } from \"./constructFrom.js\";\nimport { getWeekYear } from \"./getWeekYear.js\";\nimport { startOfWeek } from \"./startOfWeek.js\";\n\n/**\n * The {@link startOfWeekYear} function options.\n */\n\n/**\n * @name startOfWeekYear\n * @category Week-Numbering Year Helpers\n * @summary Return the start of a local week-numbering year for the given date.\n *\n * @description\n * Return the start of a local week-numbering year.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type.\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The start of a week-numbering year\n *\n * @example\n * // The start of an a week-numbering year for 2 July 2005 with default settings:\n * const result = startOfWeekYear(new Date(2005, 6, 2))\n * //=> Sun Dec 26 2004 00:00:00\n *\n * @example\n * // The start of a week-numbering year for 2 July 2005\n * // if Monday is the first day of week\n * // and 4 January is always in the first week of the year:\n * const result = startOfWeekYear(new Date(2005, 6, 2), {\n *   weekStartsOn: 1,\n *   firstWeekContainsDate: 4\n * })\n * //=> Mon Jan 03 2005 00:00:00\n */\nexport function startOfWeekYear(date, options) {\n  const defaultOptions = getDefaultOptions();\n  const firstWeekContainsDate =\n    options?.firstWeekContainsDate ??\n    options?.locale?.options?.firstWeekContainsDate ??\n    defaultOptions.firstWeekContainsDate ??\n    defaultOptions.locale?.options?.firstWeekContainsDate ??\n    1;\n\n  const year = getWeekYear(date, options);\n  const firstWeek = constructFrom(options?.in || date, 0);\n  firstWeek.setFullYear(year, 0, firstWeekContainsDate);\n  firstWeek.setHours(0, 0, 0, 0);\n  const _date = startOfWeek(firstWeek, options);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfWeekYear;\n", "import { millisecondsInWeek } from \"./constants.js\";\nimport { startOfWeek } from \"./startOfWeek.js\";\nimport { startOfWeekYear } from \"./startOfWeekYear.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link getWeek} function options.\n */\n\n/**\n * @name getWeek\n * @category Week Helpers\n * @summary Get the local week index of the given date.\n *\n * @description\n * Get the local week index of the given date.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n *\n * @param date - The given date\n * @param options - An object with options\n *\n * @returns The week\n *\n * @example\n * // Which week of the local week numbering year is 2 January 2005 with default options?\n * const result = getWeek(new Date(2005, 0, 2))\n * //=> 2\n *\n * @example\n * // Which week of the local week numbering year is 2 January 2005,\n * // if Monday is the first day of the week,\n * // and the first week of the year always contains 4 January?\n * const result = getWeek(new Date(2005, 0, 2), {\n *   weekStartsOn: 1,\n *   firstWeekContainsDate: 4\n * })\n * //=> 53\n */\nexport function getWeek(date, options) {\n  const _date = toDate(date, options?.in);\n  const diff = +startOfWeek(_date, options) - +startOfWeekYear(_date, options);\n\n  // Round the number of weeks to the nearest integer because the number of\n  // milliseconds in a week is not constant (e.g. it's different in the week of\n  // the daylight saving time clock shift).\n  return Math.round(diff / millisecondsInWeek) + 1;\n}\n\n// Fallback for modularized imports:\nexport default getWeek;\n", "export function addLeadingZeros(number, targetLength) {\n  const sign = number < 0 ? \"-\" : \"\";\n  const output = Math.abs(number).toString().padStart(targetLength, \"0\");\n  return sign + output;\n}\n", "import { addLeadingZeros } from \"../addLeadingZeros.js\";\n\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* |                                |\n * |  d  | Day of month                   |  D  |                                |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  m  | Minute                         |  M  | Month                          |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  y  | Year (abs)                     |  Y  |                                |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n */\n\nexport const lightFormatters = {\n  // Year\n  y(date, token) {\n    // From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_tokens\n    // | Year     |     y | yy |   yyy |  yyyy | yyyyy |\n    // |----------|-------|----|-------|-------|-------|\n    // | AD 1     |     1 | 01 |   001 |  0001 | 00001 |\n    // | AD 12    |    12 | 12 |   012 |  0012 | 00012 |\n    // | AD 123   |   123 | 23 |   123 |  0123 | 00123 |\n    // | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |\n    // | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |\n\n    const signedYear = date.getFullYear();\n    // Returns 1 for 1 BC (which is year 0 in JavaScript)\n    const year = signedYear > 0 ? signedYear : 1 - signedYear;\n    return addLeadingZeros(token === \"yy\" ? year % 100 : year, token.length);\n  },\n\n  // Month\n  M(date, token) {\n    const month = date.getMonth();\n    return token === \"M\" ? String(month + 1) : addLeadingZeros(month + 1, 2);\n  },\n\n  // Day of the month\n  d(date, token) {\n    return addLeadingZeros(date.getDate(), token.length);\n  },\n\n  // AM or PM\n  a(date, token) {\n    const dayPeriodEnumValue = date.getHours() / 12 >= 1 ? \"pm\" : \"am\";\n\n    switch (token) {\n      case \"a\":\n      case \"aa\":\n        return dayPeriodEnumValue.toUpperCase();\n      case \"aaa\":\n        return dayPeriodEnumValue;\n      case \"aaaaa\":\n        return dayPeriodEnumValue[0];\n      case \"aaaa\":\n      default:\n        return dayPeriodEnumValue === \"am\" ? \"a.m.\" : \"p.m.\";\n    }\n  },\n\n  // Hour [1-12]\n  h(date, token) {\n    return addLeadingZeros(date.getHours() % 12 || 12, token.length);\n  },\n\n  // Hour [0-23]\n  H(date, token) {\n    return addLeadingZeros(date.getHours(), token.length);\n  },\n\n  // Minute\n  m(date, token) {\n    return addLeadingZeros(date.getMinutes(), token.length);\n  },\n\n  // Second\n  s(date, token) {\n    return addLeadingZeros(date.getSeconds(), token.length);\n  },\n\n  // Fraction of second\n  S(date, token) {\n    const numberOfDigits = token.length;\n    const milliseconds = date.getMilliseconds();\n    const fractionalSeconds = Math.trunc(\n      milliseconds * Math.pow(10, numberOfDigits - 3),\n    );\n    return addLeadingZeros(fractionalSeconds, token.length);\n  },\n};\n", "import { getDayOfYear } from \"../../getDayOfYear.js\";\nimport { getISOWeek } from \"../../getISOWeek.js\";\nimport { getISOWeekYear } from \"../../getISOWeekYear.js\";\nimport { getWeek } from \"../../getWeek.js\";\nimport { getWeekYear } from \"../../getWeekYear.js\";\n\nimport { addLeadingZeros } from \"../addLeadingZeros.js\";\nimport { lightFormatters } from \"./lightFormatters.js\";\n\nconst dayPeriodEnum = {\n  am: \"am\",\n  pm: \"pm\",\n  midnight: \"midnight\",\n  noon: \"noon\",\n  morning: \"morning\",\n  afternoon: \"afternoon\",\n  evening: \"evening\",\n  night: \"night\",\n};\n\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* | Milliseconds in day            |\n * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |\n * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |\n * |  d  | Day of month                   |  D  | Day of year                    |\n * |  e  | Local day of week              |  E  | Day of week                    |\n * |  f  |                                |  F* | Day of week in month           |\n * |  g* | Modified Julian day            |  G  | Era                            |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  i! | ISO day of week                |  I! | ISO week of year               |\n * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |\n * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |\n * |  l* | (deprecated)                   |  L  | Stand-alone month              |\n * |  m  | Minute                         |  M  | Month                          |\n * |  n  |                                |  N  |                                |\n * |  o! | Ordinal number modifier        |  O  | Timezone (GMT)                 |\n * |  p! | Long localized time            |  P! | Long localized date            |\n * |  q  | Stand-alone quarter            |  Q  | Quarter                        |\n * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |\n * |  u  | Extended year                  |  U* | Cyclic year                    |\n * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |\n * |  w  | Local week of year             |  W* | Week of month                  |\n * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |\n * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |\n * |  z  | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n *\n * Letters marked by ! are non-standard, but implemented by date-fns:\n * - `o` modifies the previous token to turn it into an ordinal (see `format` docs)\n * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,\n *   i.e. 7 for Sunday, 1 for Monday, etc.\n * - `I` is ISO week of year, as opposed to `w` which is local week of year.\n * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.\n *   `R` is supposed to be used in conjunction with `I` and `i`\n *   for universal ISO week-numbering date, whereas\n *   `Y` is supposed to be used in conjunction with `w` and `e`\n *   for week-numbering date specific to the locale.\n * - `P` is long localized date format\n * - `p` is long localized time format\n */\n\nexport const formatters = {\n  // Era\n  G: function (date, token, localize) {\n    const era = date.getFullYear() > 0 ? 1 : 0;\n    switch (token) {\n      // AD, BC\n      case \"G\":\n      case \"GG\":\n      case \"GGG\":\n        return localize.era(era, { width: \"abbreviated\" });\n      // A, B\n      case \"GGGGG\":\n        return localize.era(era, { width: \"narrow\" });\n      // Anno Domini, Before Christ\n      case \"GGGG\":\n      default:\n        return localize.era(era, { width: \"wide\" });\n    }\n  },\n\n  // Year\n  y: function (date, token, localize) {\n    // Ordinal number\n    if (token === \"yo\") {\n      const signedYear = date.getFullYear();\n      // Returns 1 for 1 BC (which is year 0 in JavaScript)\n      const year = signedYear > 0 ? signedYear : 1 - signedYear;\n      return localize.ordinalNumber(year, { unit: \"year\" });\n    }\n\n    return lightFormatters.y(date, token);\n  },\n\n  // Local week-numbering year\n  Y: function (date, token, localize, options) {\n    const signedWeekYear = getWeekYear(date, options);\n    // Returns 1 for 1 BC (which is year 0 in JavaScript)\n    const weekYear = signedWeekYear > 0 ? signedWeekYear : 1 - signedWeekYear;\n\n    // Two digit year\n    if (token === \"YY\") {\n      const twoDigitYear = weekYear % 100;\n      return addLeadingZeros(twoDigitYear, 2);\n    }\n\n    // Ordinal number\n    if (token === \"Yo\") {\n      return localize.ordinalNumber(weekYear, { unit: \"year\" });\n    }\n\n    // Padding\n    return addLeadingZeros(weekYear, token.length);\n  },\n\n  // ISO week-numbering year\n  R: function (date, token) {\n    const isoWeekYear = getISOWeekYear(date);\n\n    // Padding\n    return addLeadingZeros(isoWeekYear, token.length);\n  },\n\n  // Extended year. This is a single number designating the year of this calendar system.\n  // The main difference between `y` and `u` localizers are B.C. years:\n  // | Year | `y` | `u` |\n  // |------|-----|-----|\n  // | AC 1 |   1 |   1 |\n  // | BC 1 |   1 |   0 |\n  // | BC 2 |   2 |  -1 |\n  // Also `yy` always returns the last two digits of a year,\n  // while `uu` pads single digit years to 2 characters and returns other years unchanged.\n  u: function (date, token) {\n    const year = date.getFullYear();\n    return addLeadingZeros(year, token.length);\n  },\n\n  // Quarter\n  Q: function (date, token, localize) {\n    const quarter = Math.ceil((date.getMonth() + 1) / 3);\n    switch (token) {\n      // 1, 2, 3, 4\n      case \"Q\":\n        return String(quarter);\n      // 01, 02, 03, 04\n      case \"QQ\":\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n      case \"Qo\":\n        return localize.ordinalNumber(quarter, { unit: \"quarter\" });\n      // Q1, Q2, Q3, Q4\n      case \"QQQ\":\n        return localize.quarter(quarter, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n      case \"QQQQQ\":\n        return localize.quarter(quarter, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // 1st quarter, 2nd quarter, ...\n      case \"QQQQ\":\n      default:\n        return localize.quarter(quarter, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Stand-alone quarter\n  q: function (date, token, localize) {\n    const quarter = Math.ceil((date.getMonth() + 1) / 3);\n    switch (token) {\n      // 1, 2, 3, 4\n      case \"q\":\n        return String(quarter);\n      // 01, 02, 03, 04\n      case \"qq\":\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n      case \"qo\":\n        return localize.ordinalNumber(quarter, { unit: \"quarter\" });\n      // Q1, Q2, Q3, Q4\n      case \"qqq\":\n        return localize.quarter(quarter, {\n          width: \"abbreviated\",\n          context: \"standalone\",\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n      case \"qqqqq\":\n        return localize.quarter(quarter, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // 1st quarter, 2nd quarter, ...\n      case \"qqqq\":\n      default:\n        return localize.quarter(quarter, {\n          width: \"wide\",\n          context: \"standalone\",\n        });\n    }\n  },\n\n  // Month\n  M: function (date, token, localize) {\n    const month = date.getMonth();\n    switch (token) {\n      case \"M\":\n      case \"MM\":\n        return lightFormatters.M(date, token);\n      // 1st, 2nd, ..., 12th\n      case \"Mo\":\n        return localize.ordinalNumber(month + 1, { unit: \"month\" });\n      // Jan, Feb, ..., Dec\n      case \"MMM\":\n        return localize.month(month, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // J, F, ..., D\n      case \"MMMMM\":\n        return localize.month(month, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // January, February, ..., December\n      case \"MMMM\":\n      default:\n        return localize.month(month, { width: \"wide\", context: \"formatting\" });\n    }\n  },\n\n  // Stand-alone month\n  L: function (date, token, localize) {\n    const month = date.getMonth();\n    switch (token) {\n      // 1, 2, ..., 12\n      case \"L\":\n        return String(month + 1);\n      // 01, 02, ..., 12\n      case \"LL\":\n        return addLeadingZeros(month + 1, 2);\n      // 1st, 2nd, ..., 12th\n      case \"Lo\":\n        return localize.ordinalNumber(month + 1, { unit: \"month\" });\n      // Jan, Feb, ..., Dec\n      case \"LLL\":\n        return localize.month(month, {\n          width: \"abbreviated\",\n          context: \"standalone\",\n        });\n      // J, F, ..., D\n      case \"LLLLL\":\n        return localize.month(month, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // January, February, ..., December\n      case \"LLLL\":\n      default:\n        return localize.month(month, { width: \"wide\", context: \"standalone\" });\n    }\n  },\n\n  // Local week of year\n  w: function (date, token, localize, options) {\n    const week = getWeek(date, options);\n\n    if (token === \"wo\") {\n      return localize.ordinalNumber(week, { unit: \"week\" });\n    }\n\n    return addLeadingZeros(week, token.length);\n  },\n\n  // ISO week of year\n  I: function (date, token, localize) {\n    const isoWeek = getISOWeek(date);\n\n    if (token === \"Io\") {\n      return localize.ordinalNumber(isoWeek, { unit: \"week\" });\n    }\n\n    return addLeadingZeros(isoWeek, token.length);\n  },\n\n  // Day of the month\n  d: function (date, token, localize) {\n    if (token === \"do\") {\n      return localize.ordinalNumber(date.getDate(), { unit: \"date\" });\n    }\n\n    return lightFormatters.d(date, token);\n  },\n\n  // Day of year\n  D: function (date, token, localize) {\n    const dayOfYear = getDayOfYear(date);\n\n    if (token === \"Do\") {\n      return localize.ordinalNumber(dayOfYear, { unit: \"dayOfYear\" });\n    }\n\n    return addLeadingZeros(dayOfYear, token.length);\n  },\n\n  // Day of week\n  E: function (date, token, localize) {\n    const dayOfWeek = date.getDay();\n    switch (token) {\n      // Tue\n      case \"E\":\n      case \"EE\":\n      case \"EEE\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // T\n      case \"EEEEE\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // Tu\n      case \"EEEEEE\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"formatting\",\n        });\n      // Tuesday\n      case \"EEEE\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Local day of week\n  e: function (date, token, localize, options) {\n    const dayOfWeek = date.getDay();\n    const localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n    switch (token) {\n      // Numerical value (Nth day of week with current locale or weekStartsOn)\n      case \"e\":\n        return String(localDayOfWeek);\n      // Padded numerical value\n      case \"ee\":\n        return addLeadingZeros(localDayOfWeek, 2);\n      // 1st, 2nd, ..., 7th\n      case \"eo\":\n        return localize.ordinalNumber(localDayOfWeek, { unit: \"day\" });\n      case \"eee\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // T\n      case \"eeeee\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // Tu\n      case \"eeeeee\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"formatting\",\n        });\n      // Tuesday\n      case \"eeee\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Stand-alone local day of week\n  c: function (date, token, localize, options) {\n    const dayOfWeek = date.getDay();\n    const localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n    switch (token) {\n      // Numerical value (same as in `e`)\n      case \"c\":\n        return String(localDayOfWeek);\n      // Padded numerical value\n      case \"cc\":\n        return addLeadingZeros(localDayOfWeek, token.length);\n      // 1st, 2nd, ..., 7th\n      case \"co\":\n        return localize.ordinalNumber(localDayOfWeek, { unit: \"day\" });\n      case \"ccc\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"standalone\",\n        });\n      // T\n      case \"ccccc\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // Tu\n      case \"cccccc\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"standalone\",\n        });\n      // Tuesday\n      case \"cccc\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"standalone\",\n        });\n    }\n  },\n\n  // ISO day of week\n  i: function (date, token, localize) {\n    const dayOfWeek = date.getDay();\n    const isoDayOfWeek = dayOfWeek === 0 ? 7 : dayOfWeek;\n    switch (token) {\n      // 2\n      case \"i\":\n        return String(isoDayOfWeek);\n      // 02\n      case \"ii\":\n        return addLeadingZeros(isoDayOfWeek, token.length);\n      // 2nd\n      case \"io\":\n        return localize.ordinalNumber(isoDayOfWeek, { unit: \"day\" });\n      // Tue\n      case \"iii\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // T\n      case \"iiiii\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // Tu\n      case \"iiiiii\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"formatting\",\n        });\n      // Tuesday\n      case \"iiii\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // AM or PM\n  a: function (date, token, localize) {\n    const hours = date.getHours();\n    const dayPeriodEnumValue = hours / 12 >= 1 ? \"pm\" : \"am\";\n\n    switch (token) {\n      case \"a\":\n      case \"aa\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      case \"aaa\":\n        return localize\n          .dayPeriod(dayPeriodEnumValue, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          })\n          .toLowerCase();\n      case \"aaaaa\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"aaaa\":\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // AM, PM, midnight, noon\n  b: function (date, token, localize) {\n    const hours = date.getHours();\n    let dayPeriodEnumValue;\n    if (hours === 12) {\n      dayPeriodEnumValue = dayPeriodEnum.noon;\n    } else if (hours === 0) {\n      dayPeriodEnumValue = dayPeriodEnum.midnight;\n    } else {\n      dayPeriodEnumValue = hours / 12 >= 1 ? \"pm\" : \"am\";\n    }\n\n    switch (token) {\n      case \"b\":\n      case \"bb\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      case \"bbb\":\n        return localize\n          .dayPeriod(dayPeriodEnumValue, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          })\n          .toLowerCase();\n      case \"bbbbb\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"bbbb\":\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // in the morning, in the afternoon, in the evening, at night\n  B: function (date, token, localize) {\n    const hours = date.getHours();\n    let dayPeriodEnumValue;\n    if (hours >= 17) {\n      dayPeriodEnumValue = dayPeriodEnum.evening;\n    } else if (hours >= 12) {\n      dayPeriodEnumValue = dayPeriodEnum.afternoon;\n    } else if (hours >= 4) {\n      dayPeriodEnumValue = dayPeriodEnum.morning;\n    } else {\n      dayPeriodEnumValue = dayPeriodEnum.night;\n    }\n\n    switch (token) {\n      case \"B\":\n      case \"BB\":\n      case \"BBB\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      case \"BBBBB\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"BBBB\":\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Hour [1-12]\n  h: function (date, token, localize) {\n    if (token === \"ho\") {\n      let hours = date.getHours() % 12;\n      if (hours === 0) hours = 12;\n      return localize.ordinalNumber(hours, { unit: \"hour\" });\n    }\n\n    return lightFormatters.h(date, token);\n  },\n\n  // Hour [0-23]\n  H: function (date, token, localize) {\n    if (token === \"Ho\") {\n      return localize.ordinalNumber(date.getHours(), { unit: \"hour\" });\n    }\n\n    return lightFormatters.H(date, token);\n  },\n\n  // Hour [0-11]\n  K: function (date, token, localize) {\n    const hours = date.getHours() % 12;\n\n    if (token === \"Ko\") {\n      return localize.ordinalNumber(hours, { unit: \"hour\" });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n\n  // Hour [1-24]\n  k: function (date, token, localize) {\n    let hours = date.getHours();\n    if (hours === 0) hours = 24;\n\n    if (token === \"ko\") {\n      return localize.ordinalNumber(hours, { unit: \"hour\" });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n\n  // Minute\n  m: function (date, token, localize) {\n    if (token === \"mo\") {\n      return localize.ordinalNumber(date.getMinutes(), { unit: \"minute\" });\n    }\n\n    return lightFormatters.m(date, token);\n  },\n\n  // Second\n  s: function (date, token, localize) {\n    if (token === \"so\") {\n      return localize.ordinalNumber(date.getSeconds(), { unit: \"second\" });\n    }\n\n    return lightFormatters.s(date, token);\n  },\n\n  // Fraction of second\n  S: function (date, token) {\n    return lightFormatters.S(date, token);\n  },\n\n  // Timezone (ISO-8601. If offset is 0, output is always `'Z'`)\n  X: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    if (timezoneOffset === 0) {\n      return \"Z\";\n    }\n\n    switch (token) {\n      // Hours and optional minutes\n      case \"X\":\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XX`\n      case \"XXXX\":\n      case \"XX\": // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XXX`\n      case \"XXXXX\":\n      case \"XXX\": // Hours and minutes with `:` delimiter\n      default:\n        return formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Timezone (ISO-8601. If offset is 0, output is `'+00:00'` or equivalent)\n  x: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    switch (token) {\n      // Hours and optional minutes\n      case \"x\":\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xx`\n      case \"xxxx\":\n      case \"xx\": // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xxx`\n      case \"xxxxx\":\n      case \"xxx\": // Hours and minutes with `:` delimiter\n      default:\n        return formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Timezone (GMT)\n  O: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case \"O\":\n      case \"OO\":\n      case \"OOO\":\n        return \"GMT\" + formatTimezoneShort(timezoneOffset, \":\");\n      // Long\n      case \"OOOO\":\n      default:\n        return \"GMT\" + formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Timezone (specific non-location)\n  z: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case \"z\":\n      case \"zz\":\n      case \"zzz\":\n        return \"GMT\" + formatTimezoneShort(timezoneOffset, \":\");\n      // Long\n      case \"zzzz\":\n      default:\n        return \"GMT\" + formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Seconds timestamp\n  t: function (date, token, _localize) {\n    const timestamp = Math.trunc(+date / 1000);\n    return addLeadingZeros(timestamp, token.length);\n  },\n\n  // Milliseconds timestamp\n  T: function (date, token, _localize) {\n    return addLeadingZeros(+date, token.length);\n  },\n};\n\nfunction formatTimezoneShort(offset, delimiter = \"\") {\n  const sign = offset > 0 ? \"-\" : \"+\";\n  const absOffset = Math.abs(offset);\n  const hours = Math.trunc(absOffset / 60);\n  const minutes = absOffset % 60;\n  if (minutes === 0) {\n    return sign + String(hours);\n  }\n  return sign + String(hours) + delimiter + addLeadingZeros(minutes, 2);\n}\n\nfunction formatTimezoneWithOptionalMinutes(offset, delimiter) {\n  if (offset % 60 === 0) {\n    const sign = offset > 0 ? \"-\" : \"+\";\n    return sign + addLeadingZeros(Math.abs(offset) / 60, 2);\n  }\n  return formatTimezone(offset, delimiter);\n}\n\nfunction formatTimezone(offset, delimiter = \"\") {\n  const sign = offset > 0 ? \"-\" : \"+\";\n  const absOffset = Math.abs(offset);\n  const hours = addLeadingZeros(Math.trunc(absOffset / 60), 2);\n  const minutes = addLeadingZeros(absOffset % 60, 2);\n  return sign + hours + delimiter + minutes;\n}\n", "const dateLongFormatter = (pattern, formatLong) => {\n  switch (pattern) {\n    case \"P\":\n      return formatLong.date({ width: \"short\" });\n    case \"PP\":\n      return formatLong.date({ width: \"medium\" });\n    case \"PPP\":\n      return formatLong.date({ width: \"long\" });\n    case \"PPPP\":\n    default:\n      return formatLong.date({ width: \"full\" });\n  }\n};\n\nconst timeLongFormatter = (pattern, formatLong) => {\n  switch (pattern) {\n    case \"p\":\n      return formatLong.time({ width: \"short\" });\n    case \"pp\":\n      return formatLong.time({ width: \"medium\" });\n    case \"ppp\":\n      return formatLong.time({ width: \"long\" });\n    case \"pppp\":\n    default:\n      return formatLong.time({ width: \"full\" });\n  }\n};\n\nconst dateTimeLongFormatter = (pattern, formatLong) => {\n  const matchResult = pattern.match(/(P+)(p+)?/) || [];\n  const datePattern = matchResult[1];\n  const timePattern = matchResult[2];\n\n  if (!timePattern) {\n    return dateLongFormatter(pattern, formatLong);\n  }\n\n  let dateTimeFormat;\n\n  switch (datePattern) {\n    case \"P\":\n      dateTimeFormat = formatLong.dateTime({ width: \"short\" });\n      break;\n    case \"PP\":\n      dateTimeFormat = formatLong.dateTime({ width: \"medium\" });\n      break;\n    case \"PPP\":\n      dateTimeFormat = formatLong.dateTime({ width: \"long\" });\n      break;\n    case \"PPPP\":\n    default:\n      dateTimeFormat = formatLong.dateTime({ width: \"full\" });\n      break;\n  }\n\n  return dateTimeFormat\n    .replace(\"{{date}}\", dateLongFormatter(datePattern, formatLong))\n    .replace(\"{{time}}\", timeLongFormatter(timePattern, formatLong));\n};\n\nexport const longFormatters = {\n  p: timeLongFormatter,\n  P: dateTimeLongFormatter,\n};\n", "const dayOfYearTokenRE = /^D+$/;\nconst weekYearTokenRE = /^Y+$/;\n\nconst throwTokens = [\"D\", \"DD\", \"YY\", \"YYYY\"];\n\nexport function isProtectedDayOfYearToken(token) {\n  return dayOfYearTokenRE.test(token);\n}\n\nexport function isProtectedWeekYearToken(token) {\n  return weekYearTokenRE.test(token);\n}\n\nexport function warnOrThrowProtectedError(token, format, input) {\n  const _message = message(token, format, input);\n  console.warn(_message);\n  if (throwTokens.includes(token)) throw new RangeError(_message);\n}\n\nfunction message(token, format, input) {\n  const subject = token[0] === \"Y\" ? \"years\" : \"days of the month\";\n  return `Use \\`${token.toLowerCase()}\\` instead of \\`${token}\\` (in \\`${format}\\`) for formatting ${subject} to the input \\`${input}\\`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md`;\n}\n", "import { defaultLocale } from \"./_lib/defaultLocale.js\";\nimport { getDefaultOptions } from \"./_lib/defaultOptions.js\";\nimport { formatters } from \"./_lib/format/formatters.js\";\nimport { longFormatters } from \"./_lib/format/longFormatters.js\";\nimport {\n  isProtectedDayOfYearToken,\n  isProtectedWeekYearToken,\n  warnOrThrowProtectedError,\n} from \"./_lib/protectedTokens.js\";\nimport { isValid } from \"./isValid.js\";\nimport { toDate } from \"./toDate.js\";\n\n// Rexports of internal for libraries to use.\n// See: https://github.com/date-fns/date-fns/issues/3638#issuecomment-1877082874\nexport { formatters, longFormatters };\n\n// This RegExp consists of three parts separated by `|`:\n// - [yYQqMLwIdDecihHKkms]o matches any available ordinal number token\n//   (one of the certain letters followed by `o`)\n// - (\\w)\\1* matches any sequences of the same letter\n// - '' matches two quote characters in a row\n// - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),\n//   except a single quote symbol, which ends the sequence.\n//   Two quote characters do not end the sequence.\n//   If there is no matching single quote\n//   then the sequence will continue until the end of the string.\n// - . matches any single character unmatched by previous parts of the RegExps\nconst formattingTokensRegExp =\n  /[yYQqMLwIdDecihHKkms]o|(\\w)\\1*|''|'(''|[^'])+('|$)|./g;\n\n// This RegExp catches symbols escaped by quotes, and also\n// sequences of symbols P, p, and the combinations like `PPPPPPPppppp`\nconst longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;\n\nconst escapedStringRegExp = /^'([^]*?)'?$/;\nconst doubleQuoteRegExp = /''/g;\nconst unescapedLatinCharacterRegExp = /[a-zA-Z]/;\n\nexport { format as formatDate };\n\n/**\n * The {@link format} function options.\n */\n\n/**\n * @name format\n * @alias formatDate\n * @category Common Helpers\n * @summary Format the date.\n *\n * @description\n * Return the formatted date string in the given format. The result may vary by locale.\n *\n * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.\n * > See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * The characters wrapped between two single quotes characters (') are escaped.\n * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.\n * (see the last example)\n *\n * Format of the string is based on Unicode Technical Standard #35:\n * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * with a few additions (see note 7 below the table).\n *\n * Accepted patterns:\n * | Unit                            | Pattern | Result examples                   | Notes |\n * |---------------------------------|---------|-----------------------------------|-------|\n * | Era                             | G..GGG  | AD, BC                            |       |\n * |                                 | GGGG    | Anno Domini, Before Christ        | 2     |\n * |                                 | GGGGG   | A, B                              |       |\n * | Calendar year                   | y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | yo      | 44th, 1st, 0th, 17th              | 5,7   |\n * |                                 | yy      | 44, 01, 00, 17                    | 5     |\n * |                                 | yyy     | 044, 001, 1900, 2017              | 5     |\n * |                                 | yyyy    | 0044, 0001, 1900, 2017            | 5     |\n * |                                 | yyyyy   | ...                               | 3,5   |\n * | Local week-numbering year       | Y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | Yo      | 44th, 1st, 1900th, 2017th         | 5,7   |\n * |                                 | YY      | 44, 01, 00, 17                    | 5,8   |\n * |                                 | YYY     | 044, 001, 1900, 2017              | 5     |\n * |                                 | YYYY    | 0044, 0001, 1900, 2017            | 5,8   |\n * |                                 | YYYYY   | ...                               | 3,5   |\n * | ISO week-numbering year         | R       | -43, 0, 1, 1900, 2017             | 5,7   |\n * |                                 | RR      | -43, 00, 01, 1900, 2017           | 5,7   |\n * |                                 | RRR     | -043, 000, 001, 1900, 2017        | 5,7   |\n * |                                 | RRRR    | -0043, 0000, 0001, 1900, 2017     | 5,7   |\n * |                                 | RRRRR   | ...                               | 3,5,7 |\n * | Extended year                   | u       | -43, 0, 1, 1900, 2017             | 5     |\n * |                                 | uu      | -43, 01, 1900, 2017               | 5     |\n * |                                 | uuu     | -043, 001, 1900, 2017             | 5     |\n * |                                 | uuuu    | -0043, 0001, 1900, 2017           | 5     |\n * |                                 | uuuuu   | ...                               | 3,5   |\n * | Quarter (formatting)            | Q       | 1, 2, 3, 4                        |       |\n * |                                 | Qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | QQ      | 01, 02, 03, 04                    |       |\n * |                                 | QQQ     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | QQQQQ   | 1, 2, 3, 4                        | 4     |\n * | Quarter (stand-alone)           | q       | 1, 2, 3, 4                        |       |\n * |                                 | qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | qq      | 01, 02, 03, 04                    |       |\n * |                                 | qqq     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | qqqqq   | 1, 2, 3, 4                        | 4     |\n * | Month (formatting)              | M       | 1, 2, ..., 12                     |       |\n * |                                 | Mo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | MM      | 01, 02, ..., 12                   |       |\n * |                                 | MMM     | Jan, Feb, ..., Dec                |       |\n * |                                 | MMMM    | January, February, ..., December  | 2     |\n * |                                 | MMMMM   | J, F, ..., D                      |       |\n * | Month (stand-alone)             | L       | 1, 2, ..., 12                     |       |\n * |                                 | Lo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | LL      | 01, 02, ..., 12                   |       |\n * |                                 | LLL     | Jan, Feb, ..., Dec                |       |\n * |                                 | LLLL    | January, February, ..., December  | 2     |\n * |                                 | LLLLL   | J, F, ..., D                      |       |\n * | Local week of year              | w       | 1, 2, ..., 53                     |       |\n * |                                 | wo      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | ww      | 01, 02, ..., 53                   |       |\n * | ISO week of year                | I       | 1, 2, ..., 53                     | 7     |\n * |                                 | Io      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | II      | 01, 02, ..., 53                   | 7     |\n * | Day of month                    | d       | 1, 2, ..., 31                     |       |\n * |                                 | do      | 1st, 2nd, ..., 31st               | 7     |\n * |                                 | dd      | 01, 02, ..., 31                   |       |\n * | Day of year                     | D       | 1, 2, ..., 365, 366               | 9     |\n * |                                 | Do      | 1st, 2nd, ..., 365th, 366th       | 7     |\n * |                                 | DD      | 01, 02, ..., 365, 366             | 9     |\n * |                                 | DDD     | 001, 002, ..., 365, 366           |       |\n * |                                 | DDDD    | ...                               | 3     |\n * | Day of week (formatting)        | E..EEE  | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | EEEEE   | M, T, W, T, F, S, S               |       |\n * |                                 | EEEEEE  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | ISO day of week (formatting)    | i       | 1, 2, 3, ..., 7                   | 7     |\n * |                                 | io      | 1st, 2nd, ..., 7th                | 7     |\n * |                                 | ii      | 01, 02, ..., 07                   | 7     |\n * |                                 | iii     | Mon, Tue, Wed, ..., Sun           | 7     |\n * |                                 | iiii    | Monday, Tuesday, ..., Sunday      | 2,7   |\n * |                                 | iiiii   | M, T, W, T, F, S, S               | 7     |\n * |                                 | iiiiii  | Mo, Tu, We, Th, Fr, Sa, Su        | 7     |\n * | Local day of week (formatting)  | e       | 2, 3, 4, ..., 1                   |       |\n * |                                 | eo      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | ee      | 02, 03, ..., 01                   |       |\n * |                                 | eee     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | eeee    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | eeeee   | M, T, W, T, F, S, S               |       |\n * |                                 | eeeeee  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | Local day of week (stand-alone) | c       | 2, 3, 4, ..., 1                   |       |\n * |                                 | co      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | cc      | 02, 03, ..., 01                   |       |\n * |                                 | ccc     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | cccc    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | ccccc   | M, T, W, T, F, S, S               |       |\n * |                                 | cccccc  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | AM, PM                          | a..aa   | AM, PM                            |       |\n * |                                 | aaa     | am, pm                            |       |\n * |                                 | aaaa    | a.m., p.m.                        | 2     |\n * |                                 | aaaaa   | a, p                              |       |\n * | AM, PM, noon, midnight          | b..bb   | AM, PM, noon, midnight            |       |\n * |                                 | bbb     | am, pm, noon, midnight            |       |\n * |                                 | bbbb    | a.m., p.m., noon, midnight        | 2     |\n * |                                 | bbbbb   | a, p, n, mi                       |       |\n * | Flexible day period             | B..BBB  | at night, in the morning, ...     |       |\n * |                                 | BBBB    | at night, in the morning, ...     | 2     |\n * |                                 | BBBBB   | at night, in the morning, ...     |       |\n * | Hour [1-12]                     | h       | 1, 2, ..., 11, 12                 |       |\n * |                                 | ho      | 1st, 2nd, ..., 11th, 12th         | 7     |\n * |                                 | hh      | 01, 02, ..., 11, 12               |       |\n * | Hour [0-23]                     | H       | 0, 1, 2, ..., 23                  |       |\n * |                                 | Ho      | 0th, 1st, 2nd, ..., 23rd          | 7     |\n * |                                 | HH      | 00, 01, 02, ..., 23               |       |\n * | Hour [0-11]                     | K       | 1, 2, ..., 11, 0                  |       |\n * |                                 | Ko      | 1st, 2nd, ..., 11th, 0th          | 7     |\n * |                                 | KK      | 01, 02, ..., 11, 00               |       |\n * | Hour [1-24]                     | k       | 24, 1, 2, ..., 23                 |       |\n * |                                 | ko      | 24th, 1st, 2nd, ..., 23rd         | 7     |\n * |                                 | kk      | 24, 01, 02, ..., 23               |       |\n * | Minute                          | m       | 0, 1, ..., 59                     |       |\n * |                                 | mo      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | mm      | 00, 01, ..., 59                   |       |\n * | Second                          | s       | 0, 1, ..., 59                     |       |\n * |                                 | so      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | ss      | 00, 01, ..., 59                   |       |\n * | Fraction of second              | S       | 0, 1, ..., 9                      |       |\n * |                                 | SS      | 00, 01, ..., 99                   |       |\n * |                                 | SSS     | 000, 001, ..., 999                |       |\n * |                                 | SSSS    | ...                               | 3     |\n * | Timezone (ISO-8601 w/ Z)        | X       | -08, +0530, Z                     |       |\n * |                                 | XX      | -0800, +0530, Z                   |       |\n * |                                 | XXX     | -08:00, +05:30, Z                 |       |\n * |                                 | XXXX    | -0800, +0530, Z, +123456          | 2     |\n * |                                 | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |\n * | Timezone (ISO-8601 w/o Z)       | x       | -08, +0530, +00                   |       |\n * |                                 | xx      | -0800, +0530, +0000               |       |\n * |                                 | xxx     | -08:00, +05:30, +00:00            | 2     |\n * |                                 | xxxx    | -0800, +0530, +0000, +123456      |       |\n * |                                 | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |\n * | Timezone (GMT)                  | O...OOO | GMT-8, GMT+5:30, GMT+0            |       |\n * |                                 | OOOO    | GMT-08:00, GMT+05:30, GMT+00:00   | 2     |\n * | Timezone (specific non-locat.)  | z...zzz | GMT-8, GMT+5:30, GMT+0            | 6     |\n * |                                 | zzzz    | GMT-08:00, GMT+05:30, GMT+00:00   | 2,6   |\n * | Seconds timestamp               | t       | 512969520                         | 7     |\n * |                                 | tt      | ...                               | 3,7   |\n * | Milliseconds timestamp          | T       | 512969520900                      | 7     |\n * |                                 | TT      | ...                               | 3,7   |\n * | Long localized date             | P       | 04/29/1453                        | 7     |\n * |                                 | PP      | Apr 29, 1453                      | 7     |\n * |                                 | PPP     | April 29th, 1453                  | 7     |\n * |                                 | PPPP    | Friday, April 29th, 1453          | 2,7   |\n * | Long localized time             | p       | 12:00 AM                          | 7     |\n * |                                 | pp      | 12:00:00 AM                       | 7     |\n * |                                 | ppp     | 12:00:00 AM GMT+2                 | 7     |\n * |                                 | pppp    | 12:00:00 AM GMT+02:00             | 2,7   |\n * | Combination of date and time    | Pp      | 04/29/1453, 12:00 AM              | 7     |\n * |                                 | PPpp    | Apr 29, 1453, 12:00:00 AM         | 7     |\n * |                                 | PPPppp  | April 29th, 1453 at ...           | 7     |\n * |                                 | PPPPpppp| Friday, April 29th, 1453 at ...   | 2,7   |\n * Notes:\n * 1. \"Formatting\" units (e.g. formatting quarter) in the default en-US locale\n *    are the same as \"stand-alone\" units, but are different in some languages.\n *    \"Formatting\" units are declined according to the rules of the language\n *    in the context of a date. \"Stand-alone\" units are always nominative singular:\n *\n *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`\n *\n *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`\n *\n * 2. Any sequence of the identical letters is a pattern, unless it is escaped by\n *    the single quote characters (see below).\n *    If the sequence is longer than listed in table (e.g. `EEEEEEEEEEE`)\n *    the output will be the same as default pattern for this unit, usually\n *    the longest one (in case of ISO weekdays, `EEEE`). Default patterns for units\n *    are marked with \"2\" in the last column of the table.\n *\n *    `format(new Date(2017, 10, 6), 'MMM') //=> 'Nov'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMM') //=> 'N'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMMM') //=> 'November'`\n *\n * 3. Some patterns could be unlimited length (such as `yyyyyyyy`).\n *    The output will be padded with zeros to match the length of the pattern.\n *\n *    `format(new Date(2017, 10, 6), 'yyyyyyyy') //=> '00002017'`\n *\n * 4. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.\n *    These tokens represent the shortest form of the quarter.\n *\n * 5. The main difference between `y` and `u` patterns are B.C. years:\n *\n *    | Year | `y` | `u` |\n *    |------|-----|-----|\n *    | AC 1 |   1 |   1 |\n *    | BC 1 |   1 |   0 |\n *    | BC 2 |   2 |  -1 |\n *\n *    Also `yy` always returns the last two digits of a year,\n *    while `uu` pads single digit years to 2 characters and returns other years unchanged:\n *\n *    | Year | `yy` | `uu` |\n *    |------|------|------|\n *    | 1    |   01 |   01 |\n *    | 14   |   14 |   14 |\n *    | 376  |   76 |  376 |\n *    | 1453 |   53 | 1453 |\n *\n *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),\n *    except local week-numbering years are dependent on `options.weekStartsOn`\n *    and `options.firstWeekContainsDate` (compare [getISOWeekYear](https://date-fns.org/docs/getISOWeekYear)\n *    and [getWeekYear](https://date-fns.org/docs/getWeekYear)).\n *\n * 6. Specific non-location timezones are currently unavailable in `date-fns`,\n *    so right now these tokens fall back to GMT timezones.\n *\n * 7. These patterns are not in the Unicode Technical Standard #35:\n *    - `i`: ISO day of week\n *    - `I`: ISO week of year\n *    - `R`: ISO week-numbering year\n *    - `t`: seconds timestamp\n *    - `T`: milliseconds timestamp\n *    - `o`: ordinal number modifier\n *    - `P`: long localized date\n *    - `p`: long localized time\n *\n * 8. `YY` and `YYYY` tokens represent week-numbering years but they are often confused with years.\n *    You should enable `options.useAdditionalWeekYearTokens` to use them. See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * 9. `D` and `DD` tokens represent days of the year but they are often confused with days of the month.\n *    You should enable `options.useAdditionalDayOfYearTokens` to use them. See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * @param date - The original date\n * @param format - The string of tokens\n * @param options - An object with options\n *\n * @returns The formatted date string\n *\n * @throws `date` must not be Invalid Date\n * @throws `options.locale` must contain `localize` property\n * @throws `options.locale` must contain `formatLong` property\n * @throws use `yyyy` instead of `YYYY` for formatting years using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `yy` instead of `YY` for formatting years using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `d` instead of `D` for formatting days of the month using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `dd` instead of `DD` for formatting days of the month using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws format string contains an unescaped latin alphabet character\n *\n * @example\n * // Represent 11 February 2014 in middle-endian format:\n * const result = format(new Date(2014, 1, 11), 'MM/dd/yyyy')\n * //=> '02/11/2014'\n *\n * @example\n * // Represent 2 July 2014 in Esperanto:\n * import { eoLocale } from 'date-fns/locale/eo'\n * const result = format(new Date(2014, 6, 2), \"do 'de' MMMM yyyy\", {\n *   locale: eoLocale\n * })\n * //=> '2-a de julio 2014'\n *\n * @example\n * // Escape string by single quote characters:\n * const result = format(new Date(2014, 6, 2, 15), \"h 'o''clock'\")\n * //=> \"3 o'clock\"\n */\nexport function format(date, formatStr, options) {\n  const defaultOptions = getDefaultOptions();\n  const locale = options?.locale ?? defaultOptions.locale ?? defaultLocale;\n\n  const firstWeekContainsDate =\n    options?.firstWeekContainsDate ??\n    options?.locale?.options?.firstWeekContainsDate ??\n    defaultOptions.firstWeekContainsDate ??\n    defaultOptions.locale?.options?.firstWeekContainsDate ??\n    1;\n\n  const weekStartsOn =\n    options?.weekStartsOn ??\n    options?.locale?.options?.weekStartsOn ??\n    defaultOptions.weekStartsOn ??\n    defaultOptions.locale?.options?.weekStartsOn ??\n    0;\n\n  const originalDate = toDate(date, options?.in);\n\n  if (!isValid(originalDate)) {\n    throw new RangeError(\"Invalid time value\");\n  }\n\n  let parts = formatStr\n    .match(longFormattingTokensRegExp)\n    .map((substring) => {\n      const firstCharacter = substring[0];\n      if (firstCharacter === \"p\" || firstCharacter === \"P\") {\n        const longFormatter = longFormatters[firstCharacter];\n        return longFormatter(substring, locale.formatLong);\n      }\n      return substring;\n    })\n    .join(\"\")\n    .match(formattingTokensRegExp)\n    .map((substring) => {\n      // Replace two single quote characters with one single quote character\n      if (substring === \"''\") {\n        return { isToken: false, value: \"'\" };\n      }\n\n      const firstCharacter = substring[0];\n      if (firstCharacter === \"'\") {\n        return { isToken: false, value: cleanEscapedString(substring) };\n      }\n\n      if (formatters[firstCharacter]) {\n        return { isToken: true, value: substring };\n      }\n\n      if (firstCharacter.match(unescapedLatinCharacterRegExp)) {\n        throw new RangeError(\n          \"Format string contains an unescaped latin alphabet character `\" +\n            firstCharacter +\n            \"`\",\n        );\n      }\n\n      return { isToken: false, value: substring };\n    });\n\n  // invoke localize preprocessor (only for french locales at the moment)\n  if (locale.localize.preprocessor) {\n    parts = locale.localize.preprocessor(originalDate, parts);\n  }\n\n  const formatterOptions = {\n    firstWeekContainsDate,\n    weekStartsOn,\n    locale,\n  };\n\n  return parts\n    .map((part) => {\n      if (!part.isToken) return part.value;\n\n      const token = part.value;\n\n      if (\n        (!options?.useAdditionalWeekYearTokens &&\n          isProtectedWeekYearToken(token)) ||\n        (!options?.useAdditionalDayOfYearTokens &&\n          isProtectedDayOfYearToken(token))\n      ) {\n        warnOrThrowProtectedError(token, formatStr, String(date));\n      }\n\n      const formatter = formatters[token[0]];\n      return formatter(originalDate, token, locale.localize, formatterOptions);\n    })\n    .join(\"\");\n}\n\nfunction cleanEscapedString(input) {\n  const matched = input.match(escapedStringRegExp);\n\n  if (!matched) {\n    return input;\n  }\n\n  return matched[1].replace(doubleQuoteRegExp, \"'\");\n}\n\n// Fallback for modularized imports:\nexport default format;\n", "import { getDefaultOptions as getInternalDefaultOptions } from \"./_lib/defaultOptions.js\";\n\n/**\n * @name getDefaultOptions\n * @category Common Helpers\n * @summary Get default options.\n * @pure false\n *\n * @description\n * Returns an object that contains defaults for\n * `options.locale`, `options.weekStartsOn` and `options.firstWeekContainsDate`\n * arguments for all functions.\n *\n * You can change these with [setDefaultOptions](https://date-fns.org/docs/setDefaultOptions).\n *\n * @returns The default options\n *\n * @example\n * const result = getDefaultOptions()\n * //=> {}\n *\n * @example\n * setDefaultOptions({ weekStarsOn: 1, firstWeekContainsDate: 4 })\n * const result = getDefaultOptions()\n * //=> { weekStarsOn: 1, firstWeekContainsDate: 4 }\n */\nexport function getDefaultOptions() {\n  return Object.assign({}, getInternalDefaultOptions());\n}\n\n// Fallback for modularized imports:\nexport default getDefaultOptions;\n", "import { toDate } from \"./toDate.js\";\n\n/**\n * The {@link getISODay} function options.\n */\n\n/**\n * @name getISODay\n * @category Weekday Helpers\n * @summary Get the day of the ISO week of the given date.\n *\n * @description\n * Get the day of the ISO week of the given date,\n * which is 7 for Sunday, 1 for Monday etc.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param date - The given date\n * @param options - An object with options\n *\n * @returns The day of ISO week\n *\n * @example\n * // Which day of the ISO week is 26 February 2012?\n * const result = getISODay(new Date(2012, 1, 26))\n * //=> 7\n */\nexport function getISODay(date, options) {\n  const day = toDate(date, options?.in).getDay();\n  return day === 0 ? 7 : day;\n}\n\n// Fallback for modularized imports:\nexport default getISODay;\n", "import { constructFrom } from \"./constructFrom.js\";\n\n/**\n * @name transpose\n * @category Generic Helpers\n * @summary Transpose the date to the given constructor.\n *\n * @description\n * The function transposes the date to the given constructor. It helps you\n * to transpose the date in the system time zone to say `UTCDate` or any other\n * date extension.\n *\n * @typeParam InputDate - The input `Date` type derived from the passed argument.\n * @typeParam ResultDate - The result `Date` type derived from the passed constructor.\n *\n * @param date - The date to use values from\n * @param constructor - The date constructor to use\n *\n * @returns Date transposed to the given constructor\n *\n * @example\n * // Create July 10, 2022 00:00 in locale time zone\n * const date = new Date(2022, 6, 10)\n * //=> 'Sun Jul 10 2022 00:00:00 GMT+0800 (Singapore Standard Time)'\n *\n * @example\n * // Transpose the date to July 10, 2022 00:00 in UTC\n * transpose(date, UTCDate)\n * //=> 'Sun Jul 10 2022 00:00:00 GMT+0000 (Coordinated Universal Time)'\n */\nexport function transpose(date, constructor) {\n  const date_ = isConstructor(constructor)\n    ? new constructor(0)\n    : constructFrom(constructor, 0);\n  date_.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n  date_.setHours(\n    date.getHours(),\n    date.getMinutes(),\n    date.getSeconds(),\n    date.getMilliseconds(),\n  );\n  return date_;\n}\n\nfunction isConstructor(constructor) {\n  return (\n    typeof constructor === \"function\" &&\n    constructor.prototype?.constructor === constructor\n  );\n}\n\n// Fallback for modularized imports:\nexport default transpose;\n", "import { constructFrom } from \"../../constructFrom.js\";\nimport { transpose } from \"../../transpose.js\";\n\nconst TIMEZONE_UNIT_PRIORITY = 10;\n\nexport class Setter {\n  subPriority = 0;\n\n  validate(_utcDate, _options) {\n    return true;\n  }\n}\n\nexport class ValueSetter extends Setter {\n  constructor(\n    value,\n\n    validateValue,\n\n    setValue,\n\n    priority,\n    subPriority,\n  ) {\n    super();\n    this.value = value;\n    this.validateValue = validateValue;\n    this.setValue = setValue;\n    this.priority = priority;\n    if (subPriority) {\n      this.subPriority = subPriority;\n    }\n  }\n\n  validate(date, options) {\n    return this.validateValue(date, this.value, options);\n  }\n\n  set(date, flags, options) {\n    return this.setValue(date, flags, this.value, options);\n  }\n}\n\nexport class DateTimezoneSetter extends Setter {\n  priority = TIMEZONE_UNIT_PRIORITY;\n  subPriority = -1;\n\n  constructor(context, reference) {\n    super();\n    this.context = context || ((date) => constructFrom(reference, date));\n  }\n\n  set(date, flags) {\n    if (flags.timestampIsSet) return date;\n    return constructFrom(date, transpose(date, this.context));\n  }\n}\n", "import { ValueSetter } from \"./Setter.js\";\n\nexport class Parser {\n  run(dateString, token, match, options) {\n    const result = this.parse(dateString, token, match, options);\n    if (!result) {\n      return null;\n    }\n\n    return {\n      setter: new ValueSetter(\n        result.value,\n        this.validate,\n        this.set,\n        this.priority,\n        this.subPriority,\n      ),\n      rest: result.rest,\n    };\n  }\n\n  validate(_utcDate, _value, _options) {\n    return true;\n  }\n}\n", "import { Parser } from \"../Parser.js\";\n\nexport class EraParser extends Parser {\n  priority = 140;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      // AD, BC\n      case \"G\":\n      case \"GG\":\n      case \"GGG\":\n        return (\n          match.era(dateString, { width: \"abbreviated\" }) ||\n          match.era(dateString, { width: \"narrow\" })\n        );\n\n      // A, B\n      case \"GGGGG\":\n        return match.era(dateString, { width: \"narrow\" });\n      // Anno Domini, Before Christ\n      case \"GGGG\":\n      default:\n        return (\n          match.era(dateString, { width: \"wide\" }) ||\n          match.era(dateString, { width: \"abbreviated\" }) ||\n          match.era(dateString, { width: \"narrow\" })\n        );\n    }\n  }\n\n  set(date, flags, value) {\n    flags.era = value;\n    date.setFullYear(value, 0, 1);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\"R\", \"u\", \"t\", \"T\"];\n}\n", "export const numericPatterns = {\n  month: /^(1[0-2]|0?\\d)/, // 0 to 12\n  date: /^(3[0-1]|[0-2]?\\d)/, // 0 to 31\n  dayOfYear: /^(36[0-6]|3[0-5]\\d|[0-2]?\\d?\\d)/, // 0 to 366\n  week: /^(5[0-3]|[0-4]?\\d)/, // 0 to 53\n  hour23h: /^(2[0-3]|[0-1]?\\d)/, // 0 to 23\n  hour24h: /^(2[0-4]|[0-1]?\\d)/, // 0 to 24\n  hour11h: /^(1[0-1]|0?\\d)/, // 0 to 11\n  hour12h: /^(1[0-2]|0?\\d)/, // 0 to 12\n  minute: /^[0-5]?\\d/, // 0 to 59\n  second: /^[0-5]?\\d/, // 0 to 59\n\n  singleDigit: /^\\d/, // 0 to 9\n  twoDigits: /^\\d{1,2}/, // 0 to 99\n  threeDigits: /^\\d{1,3}/, // 0 to 999\n  fourDigits: /^\\d{1,4}/, // 0 to 9999\n\n  anyDigitsSigned: /^-?\\d+/,\n  singleDigitSigned: /^-?\\d/, // 0 to 9, -0 to -9\n  twoDigitsSigned: /^-?\\d{1,2}/, // 0 to 99, -0 to -99\n  threeDigitsSigned: /^-?\\d{1,3}/, // 0 to 999, -0 to -999\n  fourDigitsSigned: /^-?\\d{1,4}/, // 0 to 9999, -0 to -9999\n};\n\nexport const timezonePatterns = {\n  basicOptionalMinutes: /^([+-])(\\d{2})(\\d{2})?|Z/,\n  basic: /^([+-])(\\d{2})(\\d{2})|Z/,\n  basicOptionalSeconds: /^([+-])(\\d{2})(\\d{2})((\\d{2}))?|Z/,\n  extended: /^([+-])(\\d{2}):(\\d{2})|Z/,\n  extendedOptionalSeconds: /^([+-])(\\d{2}):(\\d{2})(:(\\d{2}))?|Z/,\n};\n", "import {\n  millisecondsInHour,\n  millisecondsInMinute,\n  millisecondsInSecond,\n} from \"../../constants.js\";\n\nimport { numericPatterns } from \"./constants.js\";\n\nexport function mapValue(parseFnResult, mapFn) {\n  if (!parseFnResult) {\n    return parseFnResult;\n  }\n\n  return {\n    value: mapFn(parseFnResult.value),\n    rest: parseFnResult.rest,\n  };\n}\n\nexport function parseNumericPattern(pattern, dateString) {\n  const matchResult = dateString.match(pattern);\n\n  if (!matchResult) {\n    return null;\n  }\n\n  return {\n    value: parseInt(matchResult[0], 10),\n    rest: dateString.slice(matchResult[0].length),\n  };\n}\n\nexport function parseTimezonePattern(pattern, dateString) {\n  const matchResult = dateString.match(pattern);\n\n  if (!matchResult) {\n    return null;\n  }\n\n  // Input is 'Z'\n  if (matchResult[0] === \"Z\") {\n    return {\n      value: 0,\n      rest: dateString.slice(1),\n    };\n  }\n\n  const sign = matchResult[1] === \"+\" ? 1 : -1;\n  const hours = matchResult[2] ? parseInt(matchResult[2], 10) : 0;\n  const minutes = matchResult[3] ? parseInt(matchResult[3], 10) : 0;\n  const seconds = matchResult[5] ? parseInt(matchResult[5], 10) : 0;\n\n  return {\n    value:\n      sign *\n      (hours * millisecondsInHour +\n        minutes * millisecondsInMinute +\n        seconds * millisecondsInSecond),\n    rest: dateString.slice(matchResult[0].length),\n  };\n}\n\nexport function parseAnyDigitsSigned(dateString) {\n  return parseNumericPattern(numericPatterns.anyDigitsSigned, dateString);\n}\n\nexport function parseNDigits(n, dateString) {\n  switch (n) {\n    case 1:\n      return parseNumericPattern(numericPatterns.singleDigit, dateString);\n    case 2:\n      return parseNumericPattern(numericPatterns.twoDigits, dateString);\n    case 3:\n      return parseNumericPattern(numericPatterns.threeDigits, dateString);\n    case 4:\n      return parseNumericPattern(numericPatterns.fourDigits, dateString);\n    default:\n      return parseNumericPattern(new RegExp(\"^\\\\d{1,\" + n + \"}\"), dateString);\n  }\n}\n\nexport function parseNDigitsSigned(n, dateString) {\n  switch (n) {\n    case 1:\n      return parseNumericPattern(numericPatterns.singleDigitSigned, dateString);\n    case 2:\n      return parseNumericPattern(numericPatterns.twoDigitsSigned, dateString);\n    case 3:\n      return parseNumericPattern(numericPatterns.threeDigitsSigned, dateString);\n    case 4:\n      return parseNumericPattern(numericPatterns.fourDigitsSigned, dateString);\n    default:\n      return parseNumericPattern(new RegExp(\"^-?\\\\d{1,\" + n + \"}\"), dateString);\n  }\n}\n\nexport function dayPeriodEnumToHours(dayPeriod) {\n  switch (dayPeriod) {\n    case \"morning\":\n      return 4;\n    case \"evening\":\n      return 17;\n    case \"pm\":\n    case \"noon\":\n    case \"afternoon\":\n      return 12;\n    case \"am\":\n    case \"midnight\":\n    case \"night\":\n    default:\n      return 0;\n  }\n}\n\nexport function normalizeTwoDigitYear(twoDigitYear, currentYear) {\n  const isCommonEra = currentYear > 0;\n  // Absolute number of the current year:\n  // 1 -> 1 AC\n  // 0 -> 1 BC\n  // -1 -> 2 BC\n  const absCurrentYear = isCommonEra ? currentYear : 1 - currentYear;\n\n  let result;\n  if (absCurrentYear <= 50) {\n    result = twoDigitYear || 100;\n  } else {\n    const rangeEnd = absCurrentYear + 50;\n    const rangeEndCentury = Math.trunc(rangeEnd / 100) * 100;\n    const isPreviousCentury = twoDigitYear >= rangeEnd % 100;\n    result = twoDigitYear + rangeEndCentury - (isPreviousCentury ? 100 : 0);\n  }\n\n  return isCommonEra ? result : 1 - result;\n}\n\nexport function isLeapYearIndex(year) {\n  return year % 400 === 0 || (year % 4 === 0 && year % 100 !== 0);\n}\n", "import { Parser } from \"../Parser.js\";\n\nimport { mapValue, normalizeTwoDigitYear, parseNDigits } from \"../utils.js\";\n\n// From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_Patterns\n// | Year     |     y | yy |   yyy |  yyyy | yyyyy |\n// |----------|-------|----|-------|-------|-------|\n// | AD 1     |     1 | 01 |   001 |  0001 | 00001 |\n// | AD 12    |    12 | 12 |   012 |  0012 | 00012 |\n// | AD 123   |   123 | 23 |   123 |  0123 | 00123 |\n// | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |\n// | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |\nexport class YearParser extends Parser {\n  priority = 130;\n  incompatibleTokens = [\"Y\", \"R\", \"u\", \"w\", \"I\", \"i\", \"e\", \"c\", \"t\", \"T\"];\n\n  parse(dateString, token, match) {\n    const valueCallback = (year) => ({\n      year,\n      isTwoDigitYear: token === \"yy\",\n    });\n\n    switch (token) {\n      case \"y\":\n        return mapValue(parseNDigits(4, dateString), valueCallback);\n      case \"yo\":\n        return mapValue(\n          match.ordinalNumber(dateString, {\n            unit: \"year\",\n          }),\n          valueCallback,\n        );\n      default:\n        return mapValue(parseNDigits(token.length, dateString), valueCallback);\n    }\n  }\n\n  validate(_date, value) {\n    return value.isTwoDigitYear || value.year > 0;\n  }\n\n  set(date, flags, value) {\n    const currentYear = date.getFullYear();\n\n    if (value.isTwoDigitYear) {\n      const normalizedTwoDigitYear = normalizeTwoDigitYear(\n        value.year,\n        currentYear,\n      );\n      date.setFullYear(normalizedTwoDigitYear, 0, 1);\n      date.setHours(0, 0, 0, 0);\n      return date;\n    }\n\n    const year =\n      !(\"era\" in flags) || flags.era === 1 ? value.year : 1 - value.year;\n    date.setFullYear(year, 0, 1);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n}\n", "import { getWeekYear } from \"../../../getWeekYear.js\";\n\nimport { startOfWeek } from \"../../../startOfWeek.js\";\nimport { Parser } from \"../Parser.js\";\n\nimport { mapValue, normalizeTwoDigitYear, parseNDigits } from \"../utils.js\";\n\n// Local week-numbering year\nexport class LocalWeekYearParser extends Parser {\n  priority = 130;\n\n  parse(dateString, token, match) {\n    const valueCallback = (year) => ({\n      year,\n      isTwoDigitYear: token === \"YY\",\n    });\n\n    switch (token) {\n      case \"Y\":\n        return mapValue(parseNDigits(4, dateString), valueCallback);\n      case \"Yo\":\n        return mapValue(\n          match.ordinalNumber(dateString, {\n            unit: \"year\",\n          }),\n          valueCallback,\n        );\n      default:\n        return mapValue(parseNDigits(token.length, dateString), valueCallback);\n    }\n  }\n\n  validate(_date, value) {\n    return value.isTwoDigitYear || value.year > 0;\n  }\n\n  set(date, flags, value, options) {\n    const currentYear = getWeekYear(date, options);\n\n    if (value.isTwoDigitYear) {\n      const normalizedTwoDigitYear = normalizeTwoDigitYear(\n        value.year,\n        currentYear,\n      );\n      date.setFullYear(\n        normalizedTwoDigitYear,\n        0,\n        options.firstWeekContainsDate,\n      );\n      date.setHours(0, 0, 0, 0);\n      return startOfWeek(date, options);\n    }\n\n    const year =\n      !(\"era\" in flags) || flags.era === 1 ? value.year : 1 - value.year;\n    date.setFullYear(year, 0, options.firstWeekContainsDate);\n    date.setHours(0, 0, 0, 0);\n    return startOfWeek(date, options);\n  }\n\n  incompatibleTokens = [\n    \"y\",\n    \"R\",\n    \"u\",\n    \"Q\",\n    \"q\",\n    \"M\",\n    \"L\",\n    \"I\",\n    \"d\",\n    \"D\",\n    \"i\",\n    \"t\",\n    \"T\",\n  ];\n}\n", "import { startOfISOWeek } from \"../../../startOfISOWeek.js\";\nimport { constructFrom } from \"../../../constructFrom.js\";\nimport { Parser } from \"../Parser.js\";\n\nimport { parseNDigitsSigned } from \"../utils.js\";\n\n// ISO week-numbering year\nexport class ISOWeekYearParser extends Parser {\n  priority = 130;\n\n  parse(dateString, token) {\n    if (token === \"R\") {\n      return parseNDigitsSigned(4, dateString);\n    }\n\n    return parseNDigitsSigned(token.length, dateString);\n  }\n\n  set(date, _flags, value) {\n    const firstWeekOfYear = constructFrom(date, 0);\n    firstWeekOfYear.setFullYear(value, 0, 4);\n    firstWeekOfYear.setHours(0, 0, 0, 0);\n    return startOfISOWeek(firstWeekOfYear);\n  }\n\n  incompatibleTokens = [\n    \"G\",\n    \"y\",\n    \"Y\",\n    \"u\",\n    \"Q\",\n    \"q\",\n    \"M\",\n    \"L\",\n    \"w\",\n    \"d\",\n    \"D\",\n    \"e\",\n    \"c\",\n    \"t\",\n    \"T\",\n  ];\n}\n", "import { Parser } from \"../Parser.js\";\n\nimport { parseNDigitsSigned } from \"../utils.js\";\n\nexport class ExtendedYearParser extends Parser {\n  priority = 130;\n\n  parse(dateString, token) {\n    if (token === \"u\") {\n      return parseNDigitsSigned(4, dateString);\n    }\n\n    return parseNDigitsSigned(token.length, dateString);\n  }\n\n  set(date, _flags, value) {\n    date.setFullYear(value, 0, 1);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\"G\", \"y\", \"Y\", \"R\", \"w\", \"I\", \"i\", \"e\", \"c\", \"t\", \"T\"];\n}\n", "import { Parser } from \"../Parser.js\";\n\nimport { parseNDigits } from \"../utils.js\";\n\nexport class QuarterParser extends Parser {\n  priority = 120;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      // 1, 2, 3, 4\n      case \"Q\":\n      case \"QQ\": // 01, 02, 03, 04\n        return parseNDigits(token.length, dateString);\n      // 1st, 2nd, 3rd, 4th\n      case \"Qo\":\n        return match.ordinalNumber(dateString, { unit: \"quarter\" });\n      // Q1, Q2, Q3, Q4\n      case \"QQQ\":\n        return (\n          match.quarter(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.quarter(dateString, {\n            width: \"narrow\",\n            context: \"formatting\",\n          })\n        );\n\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n      case \"QQQQQ\":\n        return match.quarter(dateString, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // 1st quarter, 2nd quarter, ...\n      case \"QQQQ\":\n      default:\n        return (\n          match.quarter(dateString, {\n            width: \"wide\",\n            context: \"formatting\",\n          }) ||\n          match.quarter(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.quarter(dateString, {\n            width: \"narrow\",\n            context: \"formatting\",\n          })\n        );\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 1 && value <= 4;\n  }\n\n  set(date, _flags, value) {\n    date.setMonth((value - 1) * 3, 1);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\n    \"Y\",\n    \"R\",\n    \"q\",\n    \"M\",\n    \"L\",\n    \"w\",\n    \"I\",\n    \"d\",\n    \"D\",\n    \"i\",\n    \"e\",\n    \"c\",\n    \"t\",\n    \"T\",\n  ];\n}\n", "import { Parser } from \"../Parser.js\";\n\nimport { parseNDigits } from \"../utils.js\";\n\nexport class StandAloneQuarterParser extends Parser {\n  priority = 120;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      // 1, 2, 3, 4\n      case \"q\":\n      case \"qq\": // 01, 02, 03, 04\n        return parseNDigits(token.length, dateString);\n      // 1st, 2nd, 3rd, 4th\n      case \"qo\":\n        return match.ordinalNumber(dateString, { unit: \"quarter\" });\n      // Q1, Q2, Q3, Q4\n      case \"qqq\":\n        return (\n          match.quarter(dateString, {\n            width: \"abbreviated\",\n            context: \"standalone\",\n          }) ||\n          match.quarter(dateString, {\n            width: \"narrow\",\n            context: \"standalone\",\n          })\n        );\n\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n      case \"qqqqq\":\n        return match.quarter(dateString, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // 1st quarter, 2nd quarter, ...\n      case \"qqqq\":\n      default:\n        return (\n          match.quarter(dateString, {\n            width: \"wide\",\n            context: \"standalone\",\n          }) ||\n          match.quarter(dateString, {\n            width: \"abbreviated\",\n            context: \"standalone\",\n          }) ||\n          match.quarter(dateString, {\n            width: \"narrow\",\n            context: \"standalone\",\n          })\n        );\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 1 && value <= 4;\n  }\n\n  set(date, _flags, value) {\n    date.setMonth((value - 1) * 3, 1);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\n    \"Y\",\n    \"R\",\n    \"Q\",\n    \"M\",\n    \"L\",\n    \"w\",\n    \"I\",\n    \"d\",\n    \"D\",\n    \"i\",\n    \"e\",\n    \"c\",\n    \"t\",\n    \"T\",\n  ];\n}\n", "import { numericPatterns } from \"../constants.js\";\nimport { Parser } from \"../Parser.js\";\n\nimport { mapValue, parseNDigits, parseNumericPattern } from \"../utils.js\";\n\nexport class MonthParser extends Parser {\n  incompatibleTokens = [\n    \"Y\",\n    \"R\",\n    \"q\",\n    \"Q\",\n    \"L\",\n    \"w\",\n    \"I\",\n    \"D\",\n    \"i\",\n    \"e\",\n    \"c\",\n    \"t\",\n    \"T\",\n  ];\n\n  priority = 110;\n\n  parse(dateString, token, match) {\n    const valueCallback = (value) => value - 1;\n\n    switch (token) {\n      // 1, 2, ..., 12\n      case \"M\":\n        return mapValue(\n          parseNumericPattern(numericPatterns.month, dateString),\n          valueCallback,\n        );\n      // 01, 02, ..., 12\n      case \"MM\":\n        return mapValue(parseNDigits(2, dateString), valueCallback);\n      // 1st, 2nd, ..., 12th\n      case \"Mo\":\n        return mapValue(\n          match.ordinalNumber(dateString, {\n            unit: \"month\",\n          }),\n          valueCallback,\n        );\n      // Jan, Feb, ..., Dec\n      case \"MMM\":\n        return (\n          match.month(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.month(dateString, { width: \"narrow\", context: \"formatting\" })\n        );\n\n      // J, F, ..., D\n      case \"MMMMM\":\n        return match.month(dateString, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // January, February, ..., December\n      case \"MMMM\":\n      default:\n        return (\n          match.month(dateString, { width: \"wide\", context: \"formatting\" }) ||\n          match.month(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.month(dateString, { width: \"narrow\", context: \"formatting\" })\n        );\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 0 && value <= 11;\n  }\n\n  set(date, _flags, value) {\n    date.setMonth(value, 1);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n}\n", "import { numericPatterns } from \"../constants.js\";\nimport { Parser } from \"../Parser.js\";\n\nimport { mapValue, parseNDigits, parseNumericPattern } from \"../utils.js\";\n\nexport class StandAloneMonthParser extends Parser {\n  priority = 110;\n\n  parse(dateString, token, match) {\n    const valueCallback = (value) => value - 1;\n\n    switch (token) {\n      // 1, 2, ..., 12\n      case \"L\":\n        return mapValue(\n          parseNumericPattern(numericPatterns.month, dateString),\n          valueCallback,\n        );\n      // 01, 02, ..., 12\n      case \"LL\":\n        return mapValue(parseNDigits(2, dateString), valueCallback);\n      // 1st, 2nd, ..., 12th\n      case \"Lo\":\n        return mapValue(\n          match.ordinalNumber(dateString, {\n            unit: \"month\",\n          }),\n          valueCallback,\n        );\n      // Jan, Feb, ..., Dec\n      case \"LLL\":\n        return (\n          match.month(dateString, {\n            width: \"abbreviated\",\n            context: \"standalone\",\n          }) ||\n          match.month(dateString, { width: \"narrow\", context: \"standalone\" })\n        );\n\n      // J, F, ..., D\n      case \"LLLLL\":\n        return match.month(dateString, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // January, February, ..., December\n      case \"LLLL\":\n      default:\n        return (\n          match.month(dateString, { width: \"wide\", context: \"standalone\" }) ||\n          match.month(dateString, {\n            width: \"abbreviated\",\n            context: \"standalone\",\n          }) ||\n          match.month(dateString, { width: \"narrow\", context: \"standalone\" })\n        );\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 0 && value <= 11;\n  }\n\n  set(date, _flags, value) {\n    date.setMonth(value, 1);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\n    \"Y\",\n    \"R\",\n    \"q\",\n    \"Q\",\n    \"M\",\n    \"w\",\n    \"I\",\n    \"D\",\n    \"i\",\n    \"e\",\n    \"c\",\n    \"t\",\n    \"T\",\n  ];\n}\n", "import { getWeek } from \"./getWeek.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link setWeek} function options.\n */\n\n/**\n * @name setWeek\n * @category Week Helpers\n * @summary Set the local week to the given date.\n *\n * @description\n * Set the local week to the given date, saving the weekday number.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The date to be changed\n * @param week - The week of the new date\n * @param options - An object with options\n *\n * @returns The new date with the local week set\n *\n * @example\n * // Set the 1st week to 2 January 2005 with default options:\n * const result = setWeek(new Date(2005, 0, 2), 1)\n * //=> Sun Dec 26 2004 00:00:00\n *\n * @example\n * // Set the 1st week to 2 January 2005,\n * // if Monday is the first day of the week,\n * // and the first week of the year always contains 4 January:\n * const result = setWeek(new Date(2005, 0, 2), 1, {\n *   weekStartsOn: 1,\n *   firstWeekContainsDate: 4\n * })\n * //=> Sun Jan 4 2004 00:00:00\n */\nexport function setWeek(date, week, options) {\n  const date_ = toDate(date, options?.in);\n  const diff = getWeek(date_, options) - week;\n  date_.setDate(date_.getDate() - diff * 7);\n  return toDate(date_, options?.in);\n}\n\n// Fallback for modularized imports:\nexport default setWeek;\n", "import { setWeek } from \"../../../setWeek.js\";\nimport { startOfWeek } from \"../../../startOfWeek.js\";\nimport { numericPatterns } from \"../constants.js\";\nimport { Parser } from \"../Parser.js\";\n\nimport { parseNDigits, parseNumericPattern } from \"../utils.js\";\n\n// Local week of year\nexport class LocalWeekParser extends Parser {\n  priority = 100;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"w\":\n        return parseNumericPattern(numericPatterns.week, dateString);\n      case \"wo\":\n        return match.ordinalNumber(dateString, { unit: \"week\" });\n      default:\n        return parseNDigits(token.length, dateString);\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 1 && value <= 53;\n  }\n\n  set(date, _flags, value, options) {\n    return startOfWeek(setWeek(date, value, options), options);\n  }\n\n  incompatibleTokens = [\n    \"y\",\n    \"R\",\n    \"u\",\n    \"q\",\n    \"Q\",\n    \"M\",\n    \"L\",\n    \"I\",\n    \"d\",\n    \"D\",\n    \"i\",\n    \"t\",\n    \"T\",\n  ];\n}\n", "import { getISOWeek } from \"./getISOWeek.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link setISOWeek} function options.\n */\n\n/**\n * @name setISOWeek\n * @category ISO Week Helpers\n * @summary Set the ISO week to the given date.\n *\n * @description\n * Set the ISO week to the given date, saving the weekday number.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The `Date` type of the context function.\n *\n * @param date - The date to be changed\n * @param week - The ISO week of the new date\n * @param options - An object with options\n *\n * @returns The new date with the ISO week set\n *\n * @example\n * // Set the 53rd ISO week to 7 August 2004:\n * const result = setISOWeek(new Date(2004, 7, 7), 53)\n * //=> Sat Jan 01 2005 00:00:00\n */\nexport function setISOWeek(date, week, options) {\n  const _date = toDate(date, options?.in);\n  const diff = getISOWeek(_date, options) - week;\n  _date.setDate(_date.getDate() - diff * 7);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default setISOWeek;\n", "import { setISOWeek } from \"../../../setISOWeek.js\";\nimport { startOfISOWeek } from \"../../../startOfISOWeek.js\";\nimport { numericPatterns } from \"../constants.js\";\nimport { Parser } from \"../Parser.js\";\n\nimport { parseNDigits, parseNumericPattern } from \"../utils.js\";\n\n// ISO week of year\nexport class ISOWeekParser extends Parser {\n  priority = 100;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"I\":\n        return parseNumericPattern(numericPatterns.week, dateString);\n      case \"Io\":\n        return match.ordinalNumber(dateString, { unit: \"week\" });\n      default:\n        return parseNDigits(token.length, dateString);\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 1 && value <= 53;\n  }\n\n  set(date, _flags, value) {\n    return startOfISOWeek(setISOWeek(date, value));\n  }\n\n  incompatibleTokens = [\n    \"y\",\n    \"Y\",\n    \"u\",\n    \"q\",\n    \"Q\",\n    \"M\",\n    \"L\",\n    \"w\",\n    \"d\",\n    \"D\",\n    \"e\",\n    \"c\",\n    \"t\",\n    \"T\",\n  ];\n}\n", "import { numericPatterns } from \"../constants.js\";\nimport { Parser } from \"../Parser.js\";\n\nimport {\n  isLeapYearIndex,\n  parseNDigits,\n  parseNumericPattern,\n} from \"../utils.js\";\n\nconst DAYS_IN_MONTH = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\nconst DAYS_IN_MONTH_LEAP_YEAR = [\n  31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31,\n];\n\n// Day of the month\nexport class DateParser extends Parser {\n  priority = 90;\n  subPriority = 1;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"d\":\n        return parseNumericPattern(numericPatterns.date, dateString);\n      case \"do\":\n        return match.ordinalNumber(dateString, { unit: \"date\" });\n      default:\n        return parseNDigits(token.length, dateString);\n    }\n  }\n\n  validate(date, value) {\n    const year = date.getFullYear();\n    const isLeapYear = isLeapYearIndex(year);\n    const month = date.getMonth();\n    if (isLeapYear) {\n      return value >= 1 && value <= DAYS_IN_MONTH_LEAP_YEAR[month];\n    } else {\n      return value >= 1 && value <= DAYS_IN_MONTH[month];\n    }\n  }\n\n  set(date, _flags, value) {\n    date.setDate(value);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\n    \"Y\",\n    \"R\",\n    \"q\",\n    \"Q\",\n    \"w\",\n    \"I\",\n    \"D\",\n    \"i\",\n    \"e\",\n    \"c\",\n    \"t\",\n    \"T\",\n  ];\n}\n", "import { numericPatterns } from \"../constants.js\";\nimport { Parser } from \"../Parser.js\";\n\nimport {\n  isLeapYearIndex,\n  parseNDigits,\n  parseNumericPattern,\n} from \"../utils.js\";\n\nexport class DayOfYearParser extends Parser {\n  priority = 90;\n\n  subpriority = 1;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"D\":\n      case \"DD\":\n        return parseNumericPattern(numericPatterns.dayOfYear, dateString);\n      case \"Do\":\n        return match.ordinalNumber(dateString, { unit: \"date\" });\n      default:\n        return parseNDigits(token.length, dateString);\n    }\n  }\n\n  validate(date, value) {\n    const year = date.getFullYear();\n    const isLeapYear = isLeapYearIndex(year);\n    if (isLeapYear) {\n      return value >= 1 && value <= 366;\n    } else {\n      return value >= 1 && value <= 365;\n    }\n  }\n\n  set(date, _flags, value) {\n    date.setMonth(0, value);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\n    \"Y\",\n    \"R\",\n    \"q\",\n    \"Q\",\n    \"M\",\n    \"L\",\n    \"w\",\n    \"I\",\n    \"d\",\n    \"E\",\n    \"i\",\n    \"e\",\n    \"c\",\n    \"t\",\n    \"T\",\n  ];\n}\n", "import { getDefaultOptions } from \"./_lib/defaultOptions.js\";\nimport { addDays } from \"./addDays.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link setDay} function options.\n */\n\n/**\n * @name setDay\n * @category Weekday Helpers\n * @summary Set the day of the week to the given date.\n *\n * @description\n * Set the day of the week to the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The date to be changed\n * @param day - The day of the week of the new date\n * @param options - An object with options.\n *\n * @returns The new date with the day of the week set\n *\n * @example\n * // Set week day to Sunday, with the default weekStartsOn of Sunday:\n * const result = setDay(new Date(2014, 8, 1), 0)\n * //=> Sun Aug 31 2014 00:00:00\n *\n * @example\n * // Set week day to Sunday, with a weekStartsOn of Monday:\n * const result = setDay(new Date(2014, 8, 1), 0, { weekStartsOn: 1 })\n * //=> Sun Sep 07 2014 00:00:00\n */\nexport function setDay(date, day, options) {\n  const defaultOptions = getDefaultOptions();\n  const weekStartsOn =\n    options?.weekStartsOn ??\n    options?.locale?.options?.weekStartsOn ??\n    defaultOptions.weekStartsOn ??\n    defaultOptions.locale?.options?.weekStartsOn ??\n    0;\n\n  const date_ = toDate(date, options?.in);\n  const currentDay = date_.getDay();\n\n  const remainder = day % 7;\n  const dayIndex = (remainder + 7) % 7;\n\n  const delta = 7 - weekStartsOn;\n  const diff =\n    day < 0 || day > 6\n      ? day - ((currentDay + delta) % 7)\n      : ((dayIndex + delta) % 7) - ((currentDay + delta) % 7);\n  return addDays(date_, diff, options);\n}\n\n// Fallback for modularized imports:\nexport default setDay;\n", "import { setDay } from \"../../../setDay.js\";\nimport { Parser } from \"../Parser.js\";\n\n// Day of week\nexport class DayParser extends Parser {\n  priority = 90;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      // Tue\n      case \"E\":\n      case \"EE\":\n      case \"EEE\":\n        return (\n          match.day(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.day(dateString, { width: \"short\", context: \"formatting\" }) ||\n          match.day(dateString, { width: \"narrow\", context: \"formatting\" })\n        );\n\n      // T\n      case \"EEEEE\":\n        return match.day(dateString, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // Tu\n      case \"EEEEEE\":\n        return (\n          match.day(dateString, { width: \"short\", context: \"formatting\" }) ||\n          match.day(dateString, { width: \"narrow\", context: \"formatting\" })\n        );\n\n      // Tuesday\n      case \"EEEE\":\n      default:\n        return (\n          match.day(dateString, { width: \"wide\", context: \"formatting\" }) ||\n          match.day(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.day(dateString, { width: \"short\", context: \"formatting\" }) ||\n          match.day(dateString, { width: \"narrow\", context: \"formatting\" })\n        );\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 0 && value <= 6;\n  }\n\n  set(date, _flags, value, options) {\n    date = setDay(date, value, options);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\"D\", \"i\", \"e\", \"c\", \"t\", \"T\"];\n}\n", "import { setDay } from \"../../../setDay.js\";\nimport { Parser } from \"../Parser.js\";\n\nimport { mapValue, parseNDigits } from \"../utils.js\";\n\n// Local day of week\nexport class LocalDayParser extends Parser {\n  priority = 90;\n  parse(dateString, token, match, options) {\n    const valueCallback = (value) => {\n      // We want here floor instead of trunc, so we get -7 for value 0 instead of 0\n      const wholeWeekDays = Math.floor((value - 1) / 7) * 7;\n      return ((value + options.weekStartsOn + 6) % 7) + wholeWeekDays;\n    };\n\n    switch (token) {\n      // 3\n      case \"e\":\n      case \"ee\": // 03\n        return mapValue(parseNDigits(token.length, dateString), valueCallback);\n      // 3rd\n      case \"eo\":\n        return mapValue(\n          match.ordinalNumber(dateString, {\n            unit: \"day\",\n          }),\n          valueCallback,\n        );\n      // Tue\n      case \"eee\":\n        return (\n          match.day(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.day(dateString, { width: \"short\", context: \"formatting\" }) ||\n          match.day(dateString, { width: \"narrow\", context: \"formatting\" })\n        );\n\n      // T\n      case \"eeeee\":\n        return match.day(dateString, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // Tu\n      case \"eeeeee\":\n        return (\n          match.day(dateString, { width: \"short\", context: \"formatting\" }) ||\n          match.day(dateString, { width: \"narrow\", context: \"formatting\" })\n        );\n\n      // Tuesday\n      case \"eeee\":\n      default:\n        return (\n          match.day(dateString, { width: \"wide\", context: \"formatting\" }) ||\n          match.day(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.day(dateString, { width: \"short\", context: \"formatting\" }) ||\n          match.day(dateString, { width: \"narrow\", context: \"formatting\" })\n        );\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 0 && value <= 6;\n  }\n\n  set(date, _flags, value, options) {\n    date = setDay(date, value, options);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\n    \"y\",\n    \"R\",\n    \"u\",\n    \"q\",\n    \"Q\",\n    \"M\",\n    \"L\",\n    \"I\",\n    \"d\",\n    \"D\",\n    \"E\",\n    \"i\",\n    \"c\",\n    \"t\",\n    \"T\",\n  ];\n}\n", "import { setDay } from \"../../../setDay.js\";\nimport { Parser } from \"../Parser.js\";\n\nimport { mapValue, parseNDigits } from \"../utils.js\";\n\n// Stand-alone local day of week\nexport class StandAloneLocalDayParser extends Parser {\n  priority = 90;\n\n  parse(dateString, token, match, options) {\n    const valueCallback = (value) => {\n      // We want here floor instead of trunc, so we get -7 for value 0 instead of 0\n      const wholeWeekDays = Math.floor((value - 1) / 7) * 7;\n      return ((value + options.weekStartsOn + 6) % 7) + wholeWeekDays;\n    };\n\n    switch (token) {\n      // 3\n      case \"c\":\n      case \"cc\": // 03\n        return mapValue(parseNDigits(token.length, dateString), valueCallback);\n      // 3rd\n      case \"co\":\n        return mapValue(\n          match.ordinalNumber(dateString, {\n            unit: \"day\",\n          }),\n          valueCallback,\n        );\n      // Tue\n      case \"ccc\":\n        return (\n          match.day(dateString, {\n            width: \"abbreviated\",\n            context: \"standalone\",\n          }) ||\n          match.day(dateString, { width: \"short\", context: \"standalone\" }) ||\n          match.day(dateString, { width: \"narrow\", context: \"standalone\" })\n        );\n\n      // T\n      case \"ccccc\":\n        return match.day(dateString, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // Tu\n      case \"cccccc\":\n        return (\n          match.day(dateString, { width: \"short\", context: \"standalone\" }) ||\n          match.day(dateString, { width: \"narrow\", context: \"standalone\" })\n        );\n\n      // Tuesday\n      case \"cccc\":\n      default:\n        return (\n          match.day(dateString, { width: \"wide\", context: \"standalone\" }) ||\n          match.day(dateString, {\n            width: \"abbreviated\",\n            context: \"standalone\",\n          }) ||\n          match.day(dateString, { width: \"short\", context: \"standalone\" }) ||\n          match.day(dateString, { width: \"narrow\", context: \"standalone\" })\n        );\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 0 && value <= 6;\n  }\n\n  set(date, _flags, value, options) {\n    date = setDay(date, value, options);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\n    \"y\",\n    \"R\",\n    \"u\",\n    \"q\",\n    \"Q\",\n    \"M\",\n    \"L\",\n    \"I\",\n    \"d\",\n    \"D\",\n    \"E\",\n    \"i\",\n    \"e\",\n    \"t\",\n    \"T\",\n  ];\n}\n", "import { addDays } from \"./addDays.js\";\nimport { getISODay } from \"./getISODay.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link setISODay} function options.\n */\n\n/**\n * @name setISODay\n * @category Weekday Helpers\n * @summary Set the day of the ISO week to the given date.\n *\n * @description\n * Set the day of the ISO week to the given date.\n * ISO week starts with Monday.\n * 7 is the index of Sunday, 1 is the index of Monday, etc.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The date to be changed\n * @param day - The day of the ISO week of the new date\n * @param options - An object with options\n *\n * @returns The new date with the day of the ISO week set\n *\n * @example\n * // Set Sunday to 1 September 2014:\n * const result = setISODay(new Date(2014, 8, 1), 7)\n * //=> Sun Sep 07 2014 00:00:00\n */\nexport function setISODay(date, day, options) {\n  const date_ = toDate(date, options?.in);\n  const currentDay = getISODay(date_, options);\n  const diff = day - currentDay;\n  return addDays(date_, diff, options);\n}\n\n// Fallback for modularized imports:\nexport default setISODay;\n", "import { setISODay } from \"../../../setISODay.js\";\nimport { Parser } from \"../Parser.js\";\n\nimport { mapValue, parseNDigits } from \"../utils.js\";\n\n// ISO day of week\nexport class ISODayParser extends Parser {\n  priority = 90;\n\n  parse(dateString, token, match) {\n    const valueCallback = (value) => {\n      if (value === 0) {\n        return 7;\n      }\n      return value;\n    };\n\n    switch (token) {\n      // 2\n      case \"i\":\n      case \"ii\": // 02\n        return parseNDigits(token.length, dateString);\n      // 2nd\n      case \"io\":\n        return match.ordinalNumber(dateString, { unit: \"day\" });\n      // Tue\n      case \"iii\":\n        return mapValue(\n          match.day(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n            match.day(dateString, {\n              width: \"short\",\n              context: \"formatting\",\n            }) ||\n            match.day(dateString, {\n              width: \"narrow\",\n              context: \"formatting\",\n            }),\n          valueCallback,\n        );\n      // T\n      case \"iiiii\":\n        return mapValue(\n          match.day(dateString, {\n            width: \"narrow\",\n            context: \"formatting\",\n          }),\n          valueCallback,\n        );\n      // Tu\n      case \"iiiiii\":\n        return mapValue(\n          match.day(dateString, {\n            width: \"short\",\n            context: \"formatting\",\n          }) ||\n            match.day(dateString, {\n              width: \"narrow\",\n              context: \"formatting\",\n            }),\n          valueCallback,\n        );\n      // Tuesday\n      case \"iiii\":\n      default:\n        return mapValue(\n          match.day(dateString, {\n            width: \"wide\",\n            context: \"formatting\",\n          }) ||\n            match.day(dateString, {\n              width: \"abbreviated\",\n              context: \"formatting\",\n            }) ||\n            match.day(dateString, {\n              width: \"short\",\n              context: \"formatting\",\n            }) ||\n            match.day(dateString, {\n              width: \"narrow\",\n              context: \"formatting\",\n            }),\n          valueCallback,\n        );\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 1 && value <= 7;\n  }\n\n  set(date, _flags, value) {\n    date = setISODay(date, value);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\n    \"y\",\n    \"Y\",\n    \"u\",\n    \"q\",\n    \"Q\",\n    \"M\",\n    \"L\",\n    \"w\",\n    \"d\",\n    \"D\",\n    \"E\",\n    \"e\",\n    \"c\",\n    \"t\",\n    \"T\",\n  ];\n}\n", "import { Parser } from \"../Parser.js\";\n\nimport { dayPeriodEnumToHours } from \"../utils.js\";\n\nexport class AMPMParser extends Parser {\n  priority = 80;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"a\":\n      case \"aa\":\n      case \"aaa\":\n        return (\n          match.dayPeriod(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.dayPeriod(dateString, {\n            width: \"narrow\",\n            context: \"formatting\",\n          })\n        );\n\n      case \"aaaaa\":\n        return match.dayPeriod(dateString, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"aaaa\":\n      default:\n        return (\n          match.dayPeriod(dateString, {\n            width: \"wide\",\n            context: \"formatting\",\n          }) ||\n          match.dayPeriod(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.dayPeriod(dateString, {\n            width: \"narrow\",\n            context: \"formatting\",\n          })\n        );\n    }\n  }\n\n  set(date, _flags, value) {\n    date.setHours(dayPeriodEnumToHours(value), 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\"b\", \"B\", \"H\", \"k\", \"t\", \"T\"];\n}\n", "import { Parser } from \"../Parser.js\";\n\nimport { dayPeriodEnumToHours } from \"../utils.js\";\n\nexport class AMPMMidnightParser extends Parser {\n  priority = 80;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"b\":\n      case \"bb\":\n      case \"bbb\":\n        return (\n          match.dayPeriod(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.dayPeriod(dateString, {\n            width: \"narrow\",\n            context: \"formatting\",\n          })\n        );\n\n      case \"bbbbb\":\n        return match.dayPeriod(dateString, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"bbbb\":\n      default:\n        return (\n          match.dayPeriod(dateString, {\n            width: \"wide\",\n            context: \"formatting\",\n          }) ||\n          match.dayPeriod(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.dayPeriod(dateString, {\n            width: \"narrow\",\n            context: \"formatting\",\n          })\n        );\n    }\n  }\n\n  set(date, _flags, value) {\n    date.setHours(dayPeriodEnumToHours(value), 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\"a\", \"B\", \"H\", \"k\", \"t\", \"T\"];\n}\n", "import { Parser } from \"../Parser.js\";\n\nimport { dayPeriodEnumToHours } from \"../utils.js\";\n\n// in the morning, in the afternoon, in the evening, at night\nexport class DayPeriodParser extends Parser {\n  priority = 80;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"B\":\n      case \"BB\":\n      case \"BBB\":\n        return (\n          match.dayPeriod(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.dayPeriod(dateString, {\n            width: \"narrow\",\n            context: \"formatting\",\n          })\n        );\n\n      case \"BBBBB\":\n        return match.dayPeriod(dateString, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"BBBB\":\n      default:\n        return (\n          match.dayPeriod(dateString, {\n            width: \"wide\",\n            context: \"formatting\",\n          }) ||\n          match.dayPeriod(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.dayPeriod(dateString, {\n            width: \"narrow\",\n            context: \"formatting\",\n          })\n        );\n    }\n  }\n\n  set(date, _flags, value) {\n    date.setHours(dayPeriodEnumToHours(value), 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\"a\", \"b\", \"t\", \"T\"];\n}\n", "import { numericPatterns } from \"../constants.js\";\nimport { Parser } from \"../Parser.js\";\n\nimport { parseNDigits, parseNumericPattern } from \"../utils.js\";\n\nexport class Hour1to12Parser extends Parser {\n  priority = 70;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"h\":\n        return parseNumericPattern(numericPatterns.hour12h, dateString);\n      case \"ho\":\n        return match.ordinalNumber(dateString, { unit: \"hour\" });\n      default:\n        return parseNDigits(token.length, dateString);\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 1 && value <= 12;\n  }\n\n  set(date, _flags, value) {\n    const isPM = date.getHours() >= 12;\n    if (isPM && value < 12) {\n      date.setHours(value + 12, 0, 0, 0);\n    } else if (!isPM && value === 12) {\n      date.setHours(0, 0, 0, 0);\n    } else {\n      date.setHours(value, 0, 0, 0);\n    }\n    return date;\n  }\n\n  incompatibleTokens = [\"H\", \"K\", \"k\", \"t\", \"T\"];\n}\n", "import { numericPatterns } from \"../constants.js\";\nimport { Parser } from \"../Parser.js\";\n\nimport { parseNDigits, parseNumericPattern } from \"../utils.js\";\n\nexport class Hour0to23Parser extends Parser {\n  priority = 70;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"H\":\n        return parseNumericPattern(numericPatterns.hour23h, dateString);\n      case \"Ho\":\n        return match.ordinalNumber(dateString, { unit: \"hour\" });\n      default:\n        return parseNDigits(token.length, dateString);\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 0 && value <= 23;\n  }\n\n  set(date, _flags, value) {\n    date.setHours(value, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\"a\", \"b\", \"h\", \"K\", \"k\", \"t\", \"T\"];\n}\n", "import { numericPatterns } from \"../constants.js\";\nimport { Parser } from \"../Parser.js\";\n\nimport { parseNDigits, parseNumericPattern } from \"../utils.js\";\n\nexport class Hour0To11Parser extends Parser {\n  priority = 70;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"K\":\n        return parseNumericPattern(numericPatterns.hour11h, dateString);\n      case \"Ko\":\n        return match.ordinalNumber(dateString, { unit: \"hour\" });\n      default:\n        return parseNDigits(token.length, dateString);\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 0 && value <= 11;\n  }\n\n  set(date, _flags, value) {\n    const isPM = date.getHours() >= 12;\n    if (isPM && value < 12) {\n      date.setHours(value + 12, 0, 0, 0);\n    } else {\n      date.setHours(value, 0, 0, 0);\n    }\n    return date;\n  }\n\n  incompatibleTokens = [\"h\", \"H\", \"k\", \"t\", \"T\"];\n}\n", "import { numericPatterns } from \"../constants.js\";\nimport { Parser } from \"../Parser.js\";\n\nimport { parseNDigits, parseNumericPattern } from \"../utils.js\";\n\nexport class Hour1To24Parser extends Parser {\n  priority = 70;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"k\":\n        return parseNumericPattern(numericPatterns.hour24h, dateString);\n      case \"ko\":\n        return match.ordinalNumber(dateString, { unit: \"hour\" });\n      default:\n        return parseNDigits(token.length, dateString);\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 1 && value <= 24;\n  }\n\n  set(date, _flags, value) {\n    const hours = value <= 24 ? value % 24 : value;\n    date.setHours(hours, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\"a\", \"b\", \"h\", \"H\", \"K\", \"t\", \"T\"];\n}\n", "import { numericPatterns } from \"../constants.js\";\nimport { Parser } from \"../Parser.js\";\n\nimport { parseNDigits, parseNumericPattern } from \"../utils.js\";\n\nexport class MinuteParser extends Parser {\n  priority = 60;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"m\":\n        return parseNumericPattern(numericPatterns.minute, dateString);\n      case \"mo\":\n        return match.ordinalNumber(dateString, { unit: \"minute\" });\n      default:\n        return parseNDigits(token.length, dateString);\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 0 && value <= 59;\n  }\n\n  set(date, _flags, value) {\n    date.setMinutes(value, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\"t\", \"T\"];\n}\n", "import { numericPatterns } from \"../constants.js\";\nimport { Parser } from \"../Parser.js\";\n\nimport { parseNDigits, parseNumericPattern } from \"../utils.js\";\n\nexport class SecondParser extends Parser {\n  priority = 50;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"s\":\n        return parseNumericPattern(numericPatterns.second, dateString);\n      case \"so\":\n        return match.ordinalNumber(dateString, { unit: \"second\" });\n      default:\n        return parseNDigits(token.length, dateString);\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 0 && value <= 59;\n  }\n\n  set(date, _flags, value) {\n    date.setSeconds(value, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\"t\", \"T\"];\n}\n", "import { Parser } from \"../Parser.js\";\n\nimport { mapValue, parseNDigits } from \"../utils.js\";\n\nexport class FractionOfSecondParser extends Parser {\n  priority = 30;\n\n  parse(dateString, token) {\n    const valueCallback = (value) =>\n      Math.trunc(value * Math.pow(10, -token.length + 3));\n    return mapValue(parseNDigits(token.length, dateString), valueCallback);\n  }\n\n  set(date, _flags, value) {\n    date.setMilliseconds(value);\n    return date;\n  }\n\n  incompatibleTokens = [\"t\", \"T\"];\n}\n", "import { constructFrom } from \"../../../constructFrom.js\";\nimport { getTimezoneOffsetInMilliseconds } from \"../../../_lib/getTimezoneOffsetInMilliseconds.js\";\nimport { timezonePatterns } from \"../constants.js\";\nimport { Parser } from \"../Parser.js\";\n\nimport { parseTimezonePattern } from \"../utils.js\";\n\n// Timezone (ISO-8601. +00:00 is `'Z'`)\nexport class ISOTimezoneWithZParser extends Parser {\n  priority = 10;\n\n  parse(dateString, token) {\n    switch (token) {\n      case \"X\":\n        return parseTimezonePattern(\n          timezonePatterns.basicOptionalMinutes,\n          dateString,\n        );\n      case \"XX\":\n        return parseTimezonePattern(timezonePatterns.basic, dateString);\n      case \"XXXX\":\n        return parseTimezonePattern(\n          timezonePatterns.basicOptionalSeconds,\n          dateString,\n        );\n      case \"XXXXX\":\n        return parseTimezonePattern(\n          timezonePatterns.extendedOptionalSeconds,\n          dateString,\n        );\n      case \"XXX\":\n      default:\n        return parseTimezonePattern(timezonePatterns.extended, dateString);\n    }\n  }\n\n  set(date, flags, value) {\n    if (flags.timestampIsSet) return date;\n    return constructFrom(\n      date,\n      date.getTime() - getTimezoneOffsetInMilliseconds(date) - value,\n    );\n  }\n\n  incompatibleTokens = [\"t\", \"T\", \"x\"];\n}\n", "import { constructFrom } from \"../../../constructFrom.js\";\nimport { getTimezoneOffsetInMilliseconds } from \"../../../_lib/getTimezoneOffsetInMilliseconds.js\";\nimport { timezonePatterns } from \"../constants.js\";\nimport { Parser } from \"../Parser.js\";\n\nimport { parseTimezonePattern } from \"../utils.js\";\n\n// Timezone (ISO-8601)\nexport class ISOTimezoneParser extends Parser {\n  priority = 10;\n\n  parse(dateString, token) {\n    switch (token) {\n      case \"x\":\n        return parseTimezonePattern(\n          timezonePatterns.basicOptionalMinutes,\n          dateString,\n        );\n      case \"xx\":\n        return parseTimezonePattern(timezonePatterns.basic, dateString);\n      case \"xxxx\":\n        return parseTimezonePattern(\n          timezonePatterns.basicOptionalSeconds,\n          dateString,\n        );\n      case \"xxxxx\":\n        return parseTimezonePattern(\n          timezonePatterns.extendedOptionalSeconds,\n          dateString,\n        );\n      case \"xxx\":\n      default:\n        return parseTimezonePattern(timezonePatterns.extended, dateString);\n    }\n  }\n\n  set(date, flags, value) {\n    if (flags.timestampIsSet) return date;\n    return constructFrom(\n      date,\n      date.getTime() - getTimezoneOffsetInMilliseconds(date) - value,\n    );\n  }\n\n  incompatibleTokens = [\"t\", \"T\", \"X\"];\n}\n", "import { constructFrom } from \"../../../constructFrom.js\";\nimport { Parser } from \"../Parser.js\";\n\nimport { parseAnyDigitsSigned } from \"../utils.js\";\n\nexport class TimestampSecondsParser extends Parser {\n  priority = 40;\n\n  parse(dateString) {\n    return parseAnyDigitsSigned(dateString);\n  }\n\n  set(date, _flags, value) {\n    return [constructFrom(date, value * 1000), { timestampIsSet: true }];\n  }\n\n  incompatibleTokens = \"*\";\n}\n", "import { constructFrom } from \"../../../constructFrom.js\";\nimport { Parser } from \"../Parser.js\";\n\nimport { parseAnyDigitsSigned } from \"../utils.js\";\n\nexport class TimestampMillisecondsParser extends Parser {\n  priority = 20;\n\n  parse(dateString) {\n    return parseAnyDigitsSigned(dateString);\n  }\n\n  set(date, _flags, value) {\n    return [constructFrom(date, value), { timestampIsSet: true }];\n  }\n\n  incompatibleTokens = \"*\";\n}\n", "import { EraParser } from \"./parsers/EraParser.js\";\nimport { YearParser } from \"./parsers/YearParser.js\";\nimport { LocalWeekYearParser } from \"./parsers/LocalWeekYearParser.js\";\nimport { ISOWeekYearParser } from \"./parsers/ISOWeekYearParser.js\";\nimport { ExtendedYearParser } from \"./parsers/ExtendedYearParser.js\";\nimport { QuarterParser } from \"./parsers/QuarterParser.js\";\nimport { StandAloneQuarterParser } from \"./parsers/StandAloneQuarterParser.js\";\nimport { MonthParser } from \"./parsers/MonthParser.js\";\nimport { StandAloneMonthParser } from \"./parsers/StandAloneMonthParser.js\";\nimport { LocalWeekParser } from \"./parsers/LocalWeekParser.js\";\nimport { ISOWeekParser } from \"./parsers/ISOWeekParser.js\";\nimport { DateParser } from \"./parsers/DateParser.js\";\nimport { DayOfYearParser } from \"./parsers/DayOfYearParser.js\";\nimport { DayParser } from \"./parsers/DayParser.js\";\nimport { LocalDayParser } from \"./parsers/LocalDayParser.js\";\nimport { StandAloneLocalDayParser } from \"./parsers/StandAloneLocalDayParser.js\";\nimport { ISODayParser } from \"./parsers/ISODayParser.js\";\nimport { AMPMParser } from \"./parsers/AMPMParser.js\";\nimport { AMPMMidnightParser } from \"./parsers/AMPMMidnightParser.js\";\nimport { DayPeriodParser } from \"./parsers/DayPeriodParser.js\";\nimport { Hour1to12Parser } from \"./parsers/Hour1to12Parser.js\";\nimport { Hour0to23Parser } from \"./parsers/Hour0to23Parser.js\";\nimport { Hour0To11Parser } from \"./parsers/Hour0To11Parser.js\";\nimport { Hour1To24Parser } from \"./parsers/Hour1To24Parser.js\";\nimport { MinuteParser } from \"./parsers/MinuteParser.js\";\nimport { SecondParser } from \"./parsers/SecondParser.js\";\nimport { FractionOfSecondParser } from \"./parsers/FractionOfSecondParser.js\";\nimport { ISOTimezoneWithZParser } from \"./parsers/ISOTimezoneWithZParser.js\";\nimport { ISOTimezoneParser } from \"./parsers/ISOTimezoneParser.js\";\nimport { TimestampSecondsParser } from \"./parsers/TimestampSecondsParser.js\";\nimport { TimestampMillisecondsParser } from \"./parsers/TimestampMillisecondsParser.js\";\n\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* | Milliseconds in day            |\n * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |\n * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |\n * |  d  | Day of month                   |  D  | Day of year                    |\n * |  e  | Local day of week              |  E  | Day of week                    |\n * |  f  |                                |  F* | Day of week in month           |\n * |  g* | Modified Julian day            |  G  | Era                            |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  i! | ISO day of week                |  I! | ISO week of year               |\n * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |\n * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |\n * |  l* | (deprecated)                   |  L  | Stand-alone month              |\n * |  m  | Minute                         |  M  | Month                          |\n * |  n  |                                |  N  |                                |\n * |  o! | Ordinal number modifier        |  O* | Timezone (GMT)                 |\n * |  p  |                                |  P  |                                |\n * |  q  | Stand-alone quarter            |  Q  | Quarter                        |\n * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |\n * |  u  | Extended year                  |  U* | Cyclic year                    |\n * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |\n * |  w  | Local week of year             |  W* | Week of month                  |\n * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |\n * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |\n * |  z* | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n *\n * Letters marked by ! are non-standard, but implemented by date-fns:\n * - `o` modifies the previous token to turn it into an ordinal (see `parse` docs)\n * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,\n *   i.e. 7 for Sunday, 1 for Monday, etc.\n * - `I` is ISO week of year, as opposed to `w` which is local week of year.\n * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.\n *   `R` is supposed to be used in conjunction with `I` and `i`\n *   for universal ISO week-numbering date, whereas\n *   `Y` is supposed to be used in conjunction with `w` and `e`\n *   for week-numbering date specific to the locale.\n */\nexport const parsers = {\n  G: new EraParser(),\n  y: new YearParser(),\n  Y: new LocalWeekYearParser(),\n  R: new ISOWeekYearParser(),\n  u: new ExtendedYearParser(),\n  Q: new QuarterParser(),\n  q: new StandAloneQuarterParser(),\n  M: new MonthParser(),\n  L: new StandAloneMonthParser(),\n  w: new LocalWeekParser(),\n  I: new ISOWeekParser(),\n  d: new DateParser(),\n  D: new DayOfYearParser(),\n  E: new DayParser(),\n  e: new LocalDayParser(),\n  c: new StandAloneLocalDayParser(),\n  i: new ISODayParser(),\n  a: new AMPMParser(),\n  b: new AMPMMidnightParser(),\n  B: new DayPeriodParser(),\n  h: new Hour1to12Parser(),\n  H: new Hour0to23Parser(),\n  K: new Hour0To11Parser(),\n  k: new Hour1To24Parser(),\n  m: new MinuteParser(),\n  s: new SecondParser(),\n  S: new FractionOfSecondParser(),\n  X: new ISOTimezoneWithZParser(),\n  x: new ISOTimezoneParser(),\n  t: new TimestampSecondsParser(),\n  T: new TimestampMillisecondsParser(),\n};\n", "import { defaultLocale } from \"./_lib/defaultLocale.js\";\nimport { longFormatters } from \"./_lib/format/longFormatters.js\";\nimport {\n  isProtectedDayOfYearToken,\n  isProtectedWeekYearToken,\n  warnOrThrowProtectedError,\n} from \"./_lib/protectedTokens.js\";\nimport { constructFrom } from \"./constructFrom.js\";\nimport { getDefaultOptions } from \"./getDefaultOptions.js\";\nimport { toDate } from \"./toDate.js\";\n\nimport { DateTimezoneSetter } from \"./parse/_lib/Setter.js\";\nimport { parsers } from \"./parse/_lib/parsers.js\";\n\n// Rexports of internal for libraries to use.\n// See: https://github.com/date-fns/date-fns/issues/3638#issuecomment-1877082874\nexport { longFormatters, parsers };\n\n/**\n * The {@link parse} function options.\n */\n\n// This RegExp consists of three parts separated by `|`:\n// - [yYQqMLwIdDecihHKkms]o matches any available ordinal number token\n//   (one of the certain letters followed by `o`)\n// - (\\w)\\1* matches any sequences of the same letter\n// - '' matches two quote characters in a row\n// - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),\n//   except a single quote symbol, which ends the sequence.\n//   Two quote characters do not end the sequence.\n//   If there is no matching single quote\n//   then the sequence will continue until the end of the string.\n// - . matches any single character unmatched by previous parts of the RegExps\nconst formattingTokensRegExp =\n  /[yYQqMLwIdDecihHKkms]o|(\\w)\\1*|''|'(''|[^'])+('|$)|./g;\n\n// This RegExp catches symbols escaped by quotes, and also\n// sequences of symbols P, p, and the combinations like `PPPPPPPppppp`\nconst longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;\n\nconst escapedStringRegExp = /^'([^]*?)'?$/;\nconst doubleQuoteRegExp = /''/g;\n\nconst notWhitespaceRegExp = /\\S/;\nconst unescapedLatinCharacterRegExp = /[a-zA-Z]/;\n\n/**\n * @name parse\n * @category Common Helpers\n * @summary Parse the date.\n *\n * @description\n * Return the date parsed from string using the given format string.\n *\n * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.\n * > See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * The characters in the format string wrapped between two single quotes characters (') are escaped.\n * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.\n *\n * Format of the format string is based on Unicode Technical Standard #35:\n * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * with a few additions (see note 5 below the table).\n *\n * Not all tokens are compatible. Combinations that don't make sense or could lead to bugs are prohibited\n * and will throw `RangeError`. For example usage of 24-hour format token with AM/PM token will throw an exception:\n *\n * ```javascript\n * parse('23 AM', 'HH a', new Date())\n * //=> RangeError: The format string mustn't contain `HH` and `a` at the same time\n * ```\n *\n * See the compatibility table: https://docs.google.com/spreadsheets/d/e/2PACX-1vQOPU3xUhplll6dyoMmVUXHKl_8CRDs6_ueLmex3SoqwhuolkuN3O05l4rqx5h1dKX8eb46Ul-CCSrq/pubhtml?gid=0&single=true\n *\n * Accepted format string patterns:\n * | Unit                            |Prior| Pattern | Result examples                   | Notes |\n * |---------------------------------|-----|---------|-----------------------------------|-------|\n * | Era                             | 140 | G..GGG  | AD, BC                            |       |\n * |                                 |     | GGGG    | Anno Domini, Before Christ        | 2     |\n * |                                 |     | GGGGG   | A, B                              |       |\n * | Calendar year                   | 130 | y       | 44, 1, 1900, 2017, 9999           | 4     |\n * |                                 |     | yo      | 44th, 1st, 1900th, 9999999th      | 4,5   |\n * |                                 |     | yy      | 44, 01, 00, 17                    | 4     |\n * |                                 |     | yyy     | 044, 001, 123, 999                | 4     |\n * |                                 |     | yyyy    | 0044, 0001, 1900, 2017            | 4     |\n * |                                 |     | yyyyy   | ...                               | 2,4   |\n * | Local week-numbering year       | 130 | Y       | 44, 1, 1900, 2017, 9000           | 4     |\n * |                                 |     | Yo      | 44th, 1st, 1900th, 9999999th      | 4,5   |\n * |                                 |     | YY      | 44, 01, 00, 17                    | 4,6   |\n * |                                 |     | YYY     | 044, 001, 123, 999                | 4     |\n * |                                 |     | YYYY    | 0044, 0001, 1900, 2017            | 4,6   |\n * |                                 |     | YYYYY   | ...                               | 2,4   |\n * | ISO week-numbering year         | 130 | R       | -43, 1, 1900, 2017, 9999, -9999   | 4,5   |\n * |                                 |     | RR      | -43, 01, 00, 17                   | 4,5   |\n * |                                 |     | RRR     | -043, 001, 123, 999, -999         | 4,5   |\n * |                                 |     | RRRR    | -0043, 0001, 2017, 9999, -9999    | 4,5   |\n * |                                 |     | RRRRR   | ...                               | 2,4,5 |\n * | Extended year                   | 130 | u       | -43, 1, 1900, 2017, 9999, -999    | 4     |\n * |                                 |     | uu      | -43, 01, 99, -99                  | 4     |\n * |                                 |     | uuu     | -043, 001, 123, 999, -999         | 4     |\n * |                                 |     | uuuu    | -0043, 0001, 2017, 9999, -9999    | 4     |\n * |                                 |     | uuuuu   | ...                               | 2,4   |\n * | Quarter (formatting)            | 120 | Q       | 1, 2, 3, 4                        |       |\n * |                                 |     | Qo      | 1st, 2nd, 3rd, 4th                | 5     |\n * |                                 |     | QQ      | 01, 02, 03, 04                    |       |\n * |                                 |     | QQQ     | Q1, Q2, Q3, Q4                    |       |\n * |                                 |     | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 |     | QQQQQ   | 1, 2, 3, 4                        | 4     |\n * | Quarter (stand-alone)           | 120 | q       | 1, 2, 3, 4                        |       |\n * |                                 |     | qo      | 1st, 2nd, 3rd, 4th                | 5     |\n * |                                 |     | qq      | 01, 02, 03, 04                    |       |\n * |                                 |     | qqq     | Q1, Q2, Q3, Q4                    |       |\n * |                                 |     | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 |     | qqqqq   | 1, 2, 3, 4                        | 3     |\n * | Month (formatting)              | 110 | M       | 1, 2, ..., 12                     |       |\n * |                                 |     | Mo      | 1st, 2nd, ..., 12th               | 5     |\n * |                                 |     | MM      | 01, 02, ..., 12                   |       |\n * |                                 |     | MMM     | Jan, Feb, ..., Dec                |       |\n * |                                 |     | MMMM    | January, February, ..., December  | 2     |\n * |                                 |     | MMMMM   | J, F, ..., D                      |       |\n * | Month (stand-alone)             | 110 | L       | 1, 2, ..., 12                     |       |\n * |                                 |     | Lo      | 1st, 2nd, ..., 12th               | 5     |\n * |                                 |     | LL      | 01, 02, ..., 12                   |       |\n * |                                 |     | LLL     | Jan, Feb, ..., Dec                |       |\n * |                                 |     | LLLL    | January, February, ..., December  | 2     |\n * |                                 |     | LLLLL   | J, F, ..., D                      |       |\n * | Local week of year              | 100 | w       | 1, 2, ..., 53                     |       |\n * |                                 |     | wo      | 1st, 2nd, ..., 53th               | 5     |\n * |                                 |     | ww      | 01, 02, ..., 53                   |       |\n * | ISO week of year                | 100 | I       | 1, 2, ..., 53                     | 5     |\n * |                                 |     | Io      | 1st, 2nd, ..., 53th               | 5     |\n * |                                 |     | II      | 01, 02, ..., 53                   | 5     |\n * | Day of month                    |  90 | d       | 1, 2, ..., 31                     |       |\n * |                                 |     | do      | 1st, 2nd, ..., 31st               | 5     |\n * |                                 |     | dd      | 01, 02, ..., 31                   |       |\n * | Day of year                     |  90 | D       | 1, 2, ..., 365, 366               | 7     |\n * |                                 |     | Do      | 1st, 2nd, ..., 365th, 366th       | 5     |\n * |                                 |     | DD      | 01, 02, ..., 365, 366             | 7     |\n * |                                 |     | DDD     | 001, 002, ..., 365, 366           |       |\n * |                                 |     | DDDD    | ...                               | 2     |\n * | Day of week (formatting)        |  90 | E..EEE  | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 |     | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 |     | EEEEE   | M, T, W, T, F, S, S               |       |\n * |                                 |     | EEEEEE  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | ISO day of week (formatting)    |  90 | i       | 1, 2, 3, ..., 7                   | 5     |\n * |                                 |     | io      | 1st, 2nd, ..., 7th                | 5     |\n * |                                 |     | ii      | 01, 02, ..., 07                   | 5     |\n * |                                 |     | iii     | Mon, Tue, Wed, ..., Sun           | 5     |\n * |                                 |     | iiii    | Monday, Tuesday, ..., Sunday      | 2,5   |\n * |                                 |     | iiiii   | M, T, W, T, F, S, S               | 5     |\n * |                                 |     | iiiiii  | Mo, Tu, We, Th, Fr, Sa, Su        | 5     |\n * | Local day of week (formatting)  |  90 | e       | 2, 3, 4, ..., 1                   |       |\n * |                                 |     | eo      | 2nd, 3rd, ..., 1st                | 5     |\n * |                                 |     | ee      | 02, 03, ..., 01                   |       |\n * |                                 |     | eee     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 |     | eeee    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 |     | eeeee   | M, T, W, T, F, S, S               |       |\n * |                                 |     | eeeeee  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | Local day of week (stand-alone) |  90 | c       | 2, 3, 4, ..., 1                   |       |\n * |                                 |     | co      | 2nd, 3rd, ..., 1st                | 5     |\n * |                                 |     | cc      | 02, 03, ..., 01                   |       |\n * |                                 |     | ccc     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 |     | cccc    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 |     | ccccc   | M, T, W, T, F, S, S               |       |\n * |                                 |     | cccccc  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | AM, PM                          |  80 | a..aaa  | AM, PM                            |       |\n * |                                 |     | aaaa    | a.m., p.m.                        | 2     |\n * |                                 |     | aaaaa   | a, p                              |       |\n * | AM, PM, noon, midnight          |  80 | b..bbb  | AM, PM, noon, midnight            |       |\n * |                                 |     | bbbb    | a.m., p.m., noon, midnight        | 2     |\n * |                                 |     | bbbbb   | a, p, n, mi                       |       |\n * | Flexible day period             |  80 | B..BBB  | at night, in the morning, ...     |       |\n * |                                 |     | BBBB    | at night, in the morning, ...     | 2     |\n * |                                 |     | BBBBB   | at night, in the morning, ...     |       |\n * | Hour [1-12]                     |  70 | h       | 1, 2, ..., 11, 12                 |       |\n * |                                 |     | ho      | 1st, 2nd, ..., 11th, 12th         | 5     |\n * |                                 |     | hh      | 01, 02, ..., 11, 12               |       |\n * | Hour [0-23]                     |  70 | H       | 0, 1, 2, ..., 23                  |       |\n * |                                 |     | Ho      | 0th, 1st, 2nd, ..., 23rd          | 5     |\n * |                                 |     | HH      | 00, 01, 02, ..., 23               |       |\n * | Hour [0-11]                     |  70 | K       | 1, 2, ..., 11, 0                  |       |\n * |                                 |     | Ko      | 1st, 2nd, ..., 11th, 0th          | 5     |\n * |                                 |     | KK      | 01, 02, ..., 11, 00               |       |\n * | Hour [1-24]                     |  70 | k       | 24, 1, 2, ..., 23                 |       |\n * |                                 |     | ko      | 24th, 1st, 2nd, ..., 23rd         | 5     |\n * |                                 |     | kk      | 24, 01, 02, ..., 23               |       |\n * | Minute                          |  60 | m       | 0, 1, ..., 59                     |       |\n * |                                 |     | mo      | 0th, 1st, ..., 59th               | 5     |\n * |                                 |     | mm      | 00, 01, ..., 59                   |       |\n * | Second                          |  50 | s       | 0, 1, ..., 59                     |       |\n * |                                 |     | so      | 0th, 1st, ..., 59th               | 5     |\n * |                                 |     | ss      | 00, 01, ..., 59                   |       |\n * | Seconds timestamp               |  40 | t       | 512969520                         |       |\n * |                                 |     | tt      | ...                               | 2     |\n * | Fraction of second              |  30 | S       | 0, 1, ..., 9                      |       |\n * |                                 |     | SS      | 00, 01, ..., 99                   |       |\n * |                                 |     | SSS     | 000, 001, ..., 999                |       |\n * |                                 |     | SSSS    | ...                               | 2     |\n * | Milliseconds timestamp          |  20 | T       | 512969520900                      |       |\n * |                                 |     | TT      | ...                               | 2     |\n * | Timezone (ISO-8601 w/ Z)        |  10 | X       | -08, +0530, Z                     |       |\n * |                                 |     | XX      | -0800, +0530, Z                   |       |\n * |                                 |     | XXX     | -08:00, +05:30, Z                 |       |\n * |                                 |     | XXXX    | -0800, +0530, Z, +123456          | 2     |\n * |                                 |     | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |\n * | Timezone (ISO-8601 w/o Z)       |  10 | x       | -08, +0530, +00                   |       |\n * |                                 |     | xx      | -0800, +0530, +0000               |       |\n * |                                 |     | xxx     | -08:00, +05:30, +00:00            | 2     |\n * |                                 |     | xxxx    | -0800, +0530, +0000, +123456      |       |\n * |                                 |     | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |\n * | Long localized date             |  NA | P       | 05/29/1453                        | 5,8   |\n * |                                 |     | PP      | May 29, 1453                      |       |\n * |                                 |     | PPP     | May 29th, 1453                    |       |\n * |                                 |     | PPPP    | Sunday, May 29th, 1453            | 2,5,8 |\n * | Long localized time             |  NA | p       | 12:00 AM                          | 5,8   |\n * |                                 |     | pp      | 12:00:00 AM                       |       |\n * | Combination of date and time    |  NA | Pp      | 05/29/1453, 12:00 AM              |       |\n * |                                 |     | PPpp    | May 29, 1453, 12:00:00 AM         |       |\n * |                                 |     | PPPpp   | May 29th, 1453 at ...             |       |\n * |                                 |     | PPPPpp  | Sunday, May 29th, 1453 at ...     | 2,5,8 |\n * Notes:\n * 1. \"Formatting\" units (e.g. formatting quarter) in the default en-US locale\n *    are the same as \"stand-alone\" units, but are different in some languages.\n *    \"Formatting\" units are declined according to the rules of the language\n *    in the context of a date. \"Stand-alone\" units are always nominative singular.\n *    In `format` function, they will produce different result:\n *\n *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`\n *\n *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`\n *\n *    `parse` will try to match both formatting and stand-alone units interchangeably.\n *\n * 2. Any sequence of the identical letters is a pattern, unless it is escaped by\n *    the single quote characters (see below).\n *    If the sequence is longer than listed in table:\n *    - for numerical units (`yyyyyyyy`) `parse` will try to match a number\n *      as wide as the sequence\n *    - for text units (`MMMMMMMM`) `parse` will try to match the widest variation of the unit.\n *      These variations are marked with \"2\" in the last column of the table.\n *\n * 3. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.\n *    These tokens represent the shortest form of the quarter.\n *\n * 4. The main difference between `y` and `u` patterns are B.C. years:\n *\n *    | Year | `y` | `u` |\n *    |------|-----|-----|\n *    | AC 1 |   1 |   1 |\n *    | BC 1 |   1 |   0 |\n *    | BC 2 |   2 |  -1 |\n *\n *    Also `yy` will try to guess the century of two digit year by proximity with `referenceDate`:\n *\n *    `parse('50', 'yy', new Date(2018, 0, 1)) //=> Sat Jan 01 2050 00:00:00`\n *\n *    `parse('75', 'yy', new Date(2018, 0, 1)) //=> Wed Jan 01 1975 00:00:00`\n *\n *    while `uu` will just assign the year as is:\n *\n *    `parse('50', 'uu', new Date(2018, 0, 1)) //=> Sat Jan 01 0050 00:00:00`\n *\n *    `parse('75', 'uu', new Date(2018, 0, 1)) //=> Tue Jan 01 0075 00:00:00`\n *\n *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),\n *    except local week-numbering years are dependent on `options.weekStartsOn`\n *    and `options.firstWeekContainsDate` (compare [setISOWeekYear](https://date-fns.org/docs/setISOWeekYear)\n *    and [setWeekYear](https://date-fns.org/docs/setWeekYear)).\n *\n * 5. These patterns are not in the Unicode Technical Standard #35:\n *    - `i`: ISO day of week\n *    - `I`: ISO week of year\n *    - `R`: ISO week-numbering year\n *    - `o`: ordinal number modifier\n *    - `P`: long localized date\n *    - `p`: long localized time\n *\n * 6. `YY` and `YYYY` tokens represent week-numbering years but they are often confused with years.\n *    You should enable `options.useAdditionalWeekYearTokens` to use them. See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * 7. `D` and `DD` tokens represent days of the year but they are often confused with days of the month.\n *    You should enable `options.useAdditionalDayOfYearTokens` to use them. See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * 8. `P+` tokens do not have a defined priority since they are merely aliases to other tokens based\n *    on the given locale.\n *\n *    using `en-US` locale: `P` => `MM/dd/yyyy`\n *    using `en-US` locale: `p` => `hh:mm a`\n *    using `pt-BR` locale: `P` => `dd/MM/yyyy`\n *    using `pt-BR` locale: `p` => `HH:mm`\n *\n * Values will be assigned to the date in the descending order of its unit's priority.\n * Units of an equal priority overwrite each other in the order of appearance.\n *\n * If no values of higher priority are parsed (e.g. when parsing string 'January 1st' without a year),\n * the values will be taken from 3rd argument `referenceDate` which works as a context of parsing.\n *\n * `referenceDate` must be passed for correct work of the function.\n * If you're not sure which `referenceDate` to supply, create a new instance of Date:\n * `parse('02/11/2014', 'MM/dd/yyyy', new Date())`\n * In this case parsing will be done in the context of the current date.\n * If `referenceDate` is `Invalid Date` or a value not convertible to valid `Date`,\n * then `Invalid Date` will be returned.\n *\n * The result may vary by locale.\n *\n * If `formatString` matches with `dateString` but does not provides tokens, `referenceDate` will be returned.\n *\n * If parsing failed, `Invalid Date` will be returned.\n * Invalid Date is a Date, whose time value is NaN.\n * Time value of Date: http://es5.github.io/#x15.9.1.1\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param dateStr - The string to parse\n * @param formatStr - The string of tokens\n * @param referenceDate - defines values missing from the parsed dateString\n * @param options - An object with options.\n *   see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *   see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * @returns The parsed date\n *\n * @throws `options.locale` must contain `match` property\n * @throws use `yyyy` instead of `YYYY` for formatting years using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `yy` instead of `YY` for formatting years using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `d` instead of `D` for formatting days of the month using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `dd` instead of `DD` for formatting days of the month using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws format string contains an unescaped latin alphabet character\n *\n * @example\n * // Parse 11 February 2014 from middle-endian format:\n * var result = parse('02/11/2014', 'MM/dd/yyyy', new Date())\n * //=> Tue Feb 11 2014 00:00:00\n *\n * @example\n * // Parse 28th of February in Esperanto locale in the context of 2010 year:\n * import eo from 'date-fns/locale/eo'\n * var result = parse('28-a de februaro', \"do 'de' MMMM\", new Date(2010, 0, 1), {\n *   locale: eo\n * })\n * //=> Sun Feb 28 2010 00:00:00\n */\nexport function parse(dateStr, formatStr, referenceDate, options) {\n  const invalidDate = () => constructFrom(options?.in || referenceDate, NaN);\n  const defaultOptions = getDefaultOptions();\n  const locale = options?.locale ?? defaultOptions.locale ?? defaultLocale;\n\n  const firstWeekContainsDate =\n    options?.firstWeekContainsDate ??\n    options?.locale?.options?.firstWeekContainsDate ??\n    defaultOptions.firstWeekContainsDate ??\n    defaultOptions.locale?.options?.firstWeekContainsDate ??\n    1;\n\n  const weekStartsOn =\n    options?.weekStartsOn ??\n    options?.locale?.options?.weekStartsOn ??\n    defaultOptions.weekStartsOn ??\n    defaultOptions.locale?.options?.weekStartsOn ??\n    0;\n\n  if (!formatStr)\n    return dateStr ? invalidDate() : toDate(referenceDate, options?.in);\n\n  const subFnOptions = {\n    firstWeekContainsDate,\n    weekStartsOn,\n    locale,\n  };\n\n  // If timezone isn't specified, it will try to use the context or\n  // the reference date and fallback to the system time zone.\n  const setters = [new DateTimezoneSetter(options?.in, referenceDate)];\n\n  const tokens = formatStr\n    .match(longFormattingTokensRegExp)\n    .map((substring) => {\n      const firstCharacter = substring[0];\n      if (firstCharacter in longFormatters) {\n        const longFormatter = longFormatters[firstCharacter];\n        return longFormatter(substring, locale.formatLong);\n      }\n      return substring;\n    })\n    .join(\"\")\n    .match(formattingTokensRegExp);\n\n  const usedTokens = [];\n\n  for (let token of tokens) {\n    if (\n      !options?.useAdditionalWeekYearTokens &&\n      isProtectedWeekYearToken(token)\n    ) {\n      warnOrThrowProtectedError(token, formatStr, dateStr);\n    }\n    if (\n      !options?.useAdditionalDayOfYearTokens &&\n      isProtectedDayOfYearToken(token)\n    ) {\n      warnOrThrowProtectedError(token, formatStr, dateStr);\n    }\n\n    const firstCharacter = token[0];\n    const parser = parsers[firstCharacter];\n    if (parser) {\n      const { incompatibleTokens } = parser;\n      if (Array.isArray(incompatibleTokens)) {\n        const incompatibleToken = usedTokens.find(\n          (usedToken) =>\n            incompatibleTokens.includes(usedToken.token) ||\n            usedToken.token === firstCharacter,\n        );\n        if (incompatibleToken) {\n          throw new RangeError(\n            `The format string mustn't contain \\`${incompatibleToken.fullToken}\\` and \\`${token}\\` at the same time`,\n          );\n        }\n      } else if (parser.incompatibleTokens === \"*\" && usedTokens.length > 0) {\n        throw new RangeError(\n          `The format string mustn't contain \\`${token}\\` and any other token at the same time`,\n        );\n      }\n\n      usedTokens.push({ token: firstCharacter, fullToken: token });\n\n      const parseResult = parser.run(\n        dateStr,\n        token,\n        locale.match,\n        subFnOptions,\n      );\n\n      if (!parseResult) {\n        return invalidDate();\n      }\n\n      setters.push(parseResult.setter);\n\n      dateStr = parseResult.rest;\n    } else {\n      if (firstCharacter.match(unescapedLatinCharacterRegExp)) {\n        throw new RangeError(\n          \"Format string contains an unescaped latin alphabet character `\" +\n            firstCharacter +\n            \"`\",\n        );\n      }\n\n      // Replace two single quote characters with one single quote character\n      if (token === \"''\") {\n        token = \"'\";\n      } else if (firstCharacter === \"'\") {\n        token = cleanEscapedString(token);\n      }\n\n      // Cut token from string, or, if string doesn't match the token, return Invalid Date\n      if (dateStr.indexOf(token) === 0) {\n        dateStr = dateStr.slice(token.length);\n      } else {\n        return invalidDate();\n      }\n    }\n  }\n\n  // Check if the remaining input contains something other than whitespace\n  if (dateStr.length > 0 && notWhitespaceRegExp.test(dateStr)) {\n    return invalidDate();\n  }\n\n  const uniquePrioritySetters = setters\n    .map((setter) => setter.priority)\n    .sort((a, b) => b - a)\n    .filter((priority, index, array) => array.indexOf(priority) === index)\n    .map((priority) =>\n      setters\n        .filter((setter) => setter.priority === priority)\n        .sort((a, b) => b.subPriority - a.subPriority),\n    )\n    .map((setterArray) => setterArray[0]);\n\n  let date = toDate(referenceDate, options?.in);\n\n  if (isNaN(+date)) return invalidDate();\n\n  const flags = {};\n  for (const setter of uniquePrioritySetters) {\n    if (!setter.validate(date, subFnOptions)) {\n      return invalidDate();\n    }\n\n    const result = setter.set(date, flags, subFnOptions);\n    // Result is tuple (date, flags)\n    if (Array.isArray(result)) {\n      date = result[0];\n      Object.assign(flags, result[1]);\n      // Result is date\n    } else {\n      date = result;\n    }\n  }\n\n  return date;\n}\n\nfunction cleanEscapedString(input) {\n  return input.match(escapedStringRegExp)[1].replace(doubleQuoteRegExp, \"'\");\n}\n\n// Fallback for modularized imports:\nexport default parse;\n", "import { toDate } from \"./toDate.js\";\n\n/**\n * The {@link startOfHour} function options.\n */\n\n/**\n * @name startOfHour\n * @category Hour Helpers\n * @summary Return the start of an hour for the given date.\n *\n * @description\n * Return the start of an hour for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The start of an hour\n *\n * @example\n * // The start of an hour for 2 September 2014 11:55:00:\n * const result = startOfHour(new Date(2014, 8, 2, 11, 55))\n * //=> Tue Sep 02 2014 11:00:00\n */\nexport function startOfHour(date, options) {\n  const _date = toDate(date, options?.in);\n  _date.setMinutes(0, 0, 0);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfHour;\n", "import { toDate } from \"./toDate.js\";\n\n/**\n * The {@link startOfMinute} function options.\n */\n\n/**\n * @name startOfMinute\n * @category Minute Helpers\n * @summary Return the start of a minute for the given date.\n *\n * @description\n * Return the start of a minute for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The start of a minute\n *\n * @example\n * // The start of a minute for 1 December 2014 22:15:45.400:\n * const result = startOfMinute(new Date(2014, 11, 1, 22, 15, 45, 400))\n * //=> Mon Dec 01 2014 22:15:00\n */\nexport function startOfMinute(date, options) {\n  const date_ = toDate(date, options?.in);\n  date_.setSeconds(0, 0);\n  return date_;\n}\n\n// Fallback for modularized imports:\nexport default startOfMinute;\n", "import { toDate } from \"./toDate.js\";\n\n/**\n * The {@link startOfSecond} function options.\n */\n\n/**\n * @name startOfSecond\n * @category Second Helpers\n * @summary Return the start of a second for the given date.\n *\n * @description\n * Return the start of a second for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - The options\n *\n * @returns The start of a second\n *\n * @example\n * // The start of a second for 1 December 2014 22:15:45.400:\n * const result = startOfSecond(new Date(2014, 11, 1, 22, 15, 45, 400))\n * //=> Mon Dec 01 2014 22:15:45.000\n */\nexport function startOfSecond(date, options) {\n  const date_ = toDate(date, options?.in);\n  date_.setMilliseconds(0);\n  return date_;\n}\n\n// Fallback for modularized imports:\nexport default startOfSecond;\n", "import {\n  millisecondsInHour,\n  millisecondsInMinute,\n} from \"./constants.js\";\nimport { constructFrom } from \"./constructFrom.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link parseISO} function options.\n */\n\n/**\n * @name parseISO\n * @category Common Helpers\n * @summary Parse ISO string\n *\n * @description\n * Parse the given string in ISO 8601 format and return an instance of Date.\n *\n * Function accepts complete ISO 8601 formats as well as partial implementations.\n * ISO 8601: http://en.wikipedia.org/wiki/ISO_8601\n *\n * If the argument isn't a string, the function cannot parse the string or\n * the values are invalid, it returns Invalid Date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param argument - The value to convert\n * @param options - An object with options\n *\n * @returns The parsed date in the local time zone\n *\n * @example\n * // Convert string '2014-02-11T11:30:30' to date:\n * const result = parseISO('2014-02-11T11:30:30')\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert string '+02014101' to date,\n * // if the additional number of digits in the extended year format is 1:\n * const result = parseISO('+02014101', { additionalDigits: 1 })\n * //=> Fri Apr 11 2014 00:00:00\n */\nexport function parseISO(argument, options) {\n  const invalidDate = () => constructFrom(options?.in, NaN);\n\n  const additionalDigits = options?.additionalDigits ?? 2;\n  const dateStrings = splitDateString(argument);\n\n  let date;\n  if (dateStrings.date) {\n    const parseYearResult = parseYear(dateStrings.date, additionalDigits);\n    date = parseDate(parseYearResult.restDateString, parseYearResult.year);\n  }\n\n  if (!date || isNaN(+date)) return invalidDate();\n\n  const timestamp = +date;\n  let time = 0;\n  let offset;\n\n  if (dateStrings.time) {\n    time = parseTime(dateStrings.time);\n    if (isNaN(time)) return invalidDate();\n  }\n\n  if (dateStrings.timezone) {\n    offset = parseTimezone(dateStrings.timezone);\n    if (isNaN(offset)) return invalidDate();\n  } else {\n    const tmpDate = new Date(timestamp + time);\n    const result = toDate(0, options?.in);\n    result.setFullYear(\n      tmpDate.getUTCFullYear(),\n      tmpDate.getUTCMonth(),\n      tmpDate.getUTCDate(),\n    );\n    result.setHours(\n      tmpDate.getUTCHours(),\n      tmpDate.getUTCMinutes(),\n      tmpDate.getUTCSeconds(),\n      tmpDate.getUTCMilliseconds(),\n    );\n    return result;\n  }\n\n  return toDate(timestamp + time + offset, options?.in);\n}\n\nconst patterns = {\n  dateTimeDelimiter: /[T ]/,\n  timeZoneDelimiter: /[Z ]/i,\n  timezone: /([Z+-].*)$/,\n};\n\nconst dateRegex =\n  /^-?(?:(\\d{3})|(\\d{2})(?:-?(\\d{2}))?|W(\\d{2})(?:-?(\\d{1}))?|)$/;\nconst timeRegex =\n  /^(\\d{2}(?:[.,]\\d*)?)(?::?(\\d{2}(?:[.,]\\d*)?))?(?::?(\\d{2}(?:[.,]\\d*)?))?$/;\nconst timezoneRegex = /^([+-])(\\d{2})(?::?(\\d{2}))?$/;\n\nfunction splitDateString(dateString) {\n  const dateStrings = {};\n  const array = dateString.split(patterns.dateTimeDelimiter);\n  let timeString;\n\n  // The regex match should only return at maximum two array elements.\n  // [date], [time], or [date, time].\n  if (array.length > 2) {\n    return dateStrings;\n  }\n\n  if (/:/.test(array[0])) {\n    timeString = array[0];\n  } else {\n    dateStrings.date = array[0];\n    timeString = array[1];\n    if (patterns.timeZoneDelimiter.test(dateStrings.date)) {\n      dateStrings.date = dateString.split(patterns.timeZoneDelimiter)[0];\n      timeString = dateString.substr(\n        dateStrings.date.length,\n        dateString.length,\n      );\n    }\n  }\n\n  if (timeString) {\n    const token = patterns.timezone.exec(timeString);\n    if (token) {\n      dateStrings.time = timeString.replace(token[1], \"\");\n      dateStrings.timezone = token[1];\n    } else {\n      dateStrings.time = timeString;\n    }\n  }\n\n  return dateStrings;\n}\n\nfunction parseYear(dateString, additionalDigits) {\n  const regex = new RegExp(\n    \"^(?:(\\\\d{4}|[+-]\\\\d{\" +\n      (4 + additionalDigits) +\n      \"})|(\\\\d{2}|[+-]\\\\d{\" +\n      (2 + additionalDigits) +\n      \"})$)\",\n  );\n\n  const captures = dateString.match(regex);\n  // Invalid ISO-formatted year\n  if (!captures) return { year: NaN, restDateString: \"\" };\n\n  const year = captures[1] ? parseInt(captures[1]) : null;\n  const century = captures[2] ? parseInt(captures[2]) : null;\n\n  // either year or century is null, not both\n  return {\n    year: century === null ? year : century * 100,\n    restDateString: dateString.slice((captures[1] || captures[2]).length),\n  };\n}\n\nfunction parseDate(dateString, year) {\n  // Invalid ISO-formatted year\n  if (year === null) return new Date(NaN);\n\n  const captures = dateString.match(dateRegex);\n  // Invalid ISO-formatted string\n  if (!captures) return new Date(NaN);\n\n  const isWeekDate = !!captures[4];\n  const dayOfYear = parseDateUnit(captures[1]);\n  const month = parseDateUnit(captures[2]) - 1;\n  const day = parseDateUnit(captures[3]);\n  const week = parseDateUnit(captures[4]);\n  const dayOfWeek = parseDateUnit(captures[5]) - 1;\n\n  if (isWeekDate) {\n    if (!validateWeekDate(year, week, dayOfWeek)) {\n      return new Date(NaN);\n    }\n    return dayOfISOWeekYear(year, week, dayOfWeek);\n  } else {\n    const date = new Date(0);\n    if (\n      !validateDate(year, month, day) ||\n      !validateDayOfYearDate(year, dayOfYear)\n    ) {\n      return new Date(NaN);\n    }\n    date.setUTCFullYear(year, month, Math.max(dayOfYear, day));\n    return date;\n  }\n}\n\nfunction parseDateUnit(value) {\n  return value ? parseInt(value) : 1;\n}\n\nfunction parseTime(timeString) {\n  const captures = timeString.match(timeRegex);\n  if (!captures) return NaN; // Invalid ISO-formatted time\n\n  const hours = parseTimeUnit(captures[1]);\n  const minutes = parseTimeUnit(captures[2]);\n  const seconds = parseTimeUnit(captures[3]);\n\n  if (!validateTime(hours, minutes, seconds)) {\n    return NaN;\n  }\n\n  return (\n    hours * millisecondsInHour + minutes * millisecondsInMinute + seconds * 1000\n  );\n}\n\nfunction parseTimeUnit(value) {\n  return (value && parseFloat(value.replace(\",\", \".\"))) || 0;\n}\n\nfunction parseTimezone(timezoneString) {\n  if (timezoneString === \"Z\") return 0;\n\n  const captures = timezoneString.match(timezoneRegex);\n  if (!captures) return 0;\n\n  const sign = captures[1] === \"+\" ? -1 : 1;\n  const hours = parseInt(captures[2]);\n  const minutes = (captures[3] && parseInt(captures[3])) || 0;\n\n  if (!validateTimezone(hours, minutes)) {\n    return NaN;\n  }\n\n  return sign * (hours * millisecondsInHour + minutes * millisecondsInMinute);\n}\n\nfunction dayOfISOWeekYear(isoWeekYear, week, day) {\n  const date = new Date(0);\n  date.setUTCFullYear(isoWeekYear, 0, 4);\n  const fourthOfJanuaryDay = date.getUTCDay() || 7;\n  const diff = (week - 1) * 7 + day + 1 - fourthOfJanuaryDay;\n  date.setUTCDate(date.getUTCDate() + diff);\n  return date;\n}\n\n// Validation functions\n\n// February is null to handle the leap year (using ||)\nconst daysInMonths = [31, null, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\nfunction isLeapYearIndex(year) {\n  return year % 400 === 0 || (year % 4 === 0 && year % 100 !== 0);\n}\n\nfunction validateDate(year, month, date) {\n  return (\n    month >= 0 &&\n    month <= 11 &&\n    date >= 1 &&\n    date <= (daysInMonths[month] || (isLeapYearIndex(year) ? 29 : 28))\n  );\n}\n\nfunction validateDayOfYearDate(year, dayOfYear) {\n  return dayOfYear >= 1 && dayOfYear <= (isLeapYearIndex(year) ? 366 : 365);\n}\n\nfunction validateWeekDate(_year, week, day) {\n  return week >= 1 && week <= 53 && day >= 0 && day <= 6;\n}\n\nfunction validateTime(hours, minutes, seconds) {\n  if (hours === 24) {\n    return minutes === 0 && seconds === 0;\n  }\n\n  return (\n    seconds >= 0 &&\n    seconds < 60 &&\n    minutes >= 0 &&\n    minutes < 60 &&\n    hours >= 0 &&\n    hours < 25\n  );\n}\n\nfunction validateTimezone(_hours, minutes) {\n  return minutes >= 0 && minutes <= 59;\n}\n\n// Fallback for modularized imports:\nexport default parseISO;\n", "/*!\n * chartjs-adapter-date-fns v3.0.0\n * https://www.chartjs.org\n * (c) 2022 chartjs-adapter-date-fns Contributors\n * Released under the MIT license\n */\nimport { _adapters } from 'chart.js';\nimport { toDate, parse, parseISO, isValid, format, addYears, addQuarters, addMonths, addWeeks, addDays, addHours, addMinutes, addSeconds, addMilliseconds, differenceInYears, differenceInQuarters, differenceInMonths, differenceInWeeks, differenceInDays, differenceInHours, differenceInMinutes, differenceInSeconds, differenceInMilliseconds, startOfYear, startOfQuarter, startOfMonth, startOfWeek, startOfDay, startOfHour, startOfMinute, startOfSecond, endOfYear, endOfQuarter, endOfMonth, endOfWeek, endOfDay, endOfHour, endOfMinute, endOfSecond } from 'date-fns';\n\nconst FORMATS = {\n  datetime: 'MMM d, yyyy, h:mm:ss aaaa',\n  millisecond: 'h:mm:ss.SSS aaaa',\n  second: 'h:mm:ss aaaa',\n  minute: 'h:mm aaaa',\n  hour: 'ha',\n  day: 'MMM d',\n  week: 'PP',\n  month: 'MMM yyyy',\n  quarter: 'qqq - yyyy',\n  year: 'yyyy'\n};\n\n_adapters._date.override({\n  _id: 'date-fns', // DEBUG\n\n  formats: function() {\n    return FORMATS;\n  },\n\n  parse: function(value, fmt) {\n    if (value === null || typeof value === 'undefined') {\n      return null;\n    }\n    const type = typeof value;\n    if (type === 'number' || value instanceof Date) {\n      value = toDate(value);\n    } else if (type === 'string') {\n      if (typeof fmt === 'string') {\n        value = parse(value, fmt, new Date(), this.options);\n      } else {\n        value = parseISO(value, this.options);\n      }\n    }\n    return isValid(value) ? value.getTime() : null;\n  },\n\n  format: function(time, fmt) {\n    return format(time, fmt, this.options);\n  },\n\n  add: function(time, amount, unit) {\n    switch (unit) {\n    case 'millisecond': return addMilliseconds(time, amount);\n    case 'second': return addSeconds(time, amount);\n    case 'minute': return addMinutes(time, amount);\n    case 'hour': return addHours(time, amount);\n    case 'day': return addDays(time, amount);\n    case 'week': return addWeeks(time, amount);\n    case 'month': return addMonths(time, amount);\n    case 'quarter': return addQuarters(time, amount);\n    case 'year': return addYears(time, amount);\n    default: return time;\n    }\n  },\n\n  diff: function(max, min, unit) {\n    switch (unit) {\n    case 'millisecond': return differenceInMilliseconds(max, min);\n    case 'second': return differenceInSeconds(max, min);\n    case 'minute': return differenceInMinutes(max, min);\n    case 'hour': return differenceInHours(max, min);\n    case 'day': return differenceInDays(max, min);\n    case 'week': return differenceInWeeks(max, min);\n    case 'month': return differenceInMonths(max, min);\n    case 'quarter': return differenceInQuarters(max, min);\n    case 'year': return differenceInYears(max, min);\n    default: return 0;\n    }\n  },\n\n  startOf: function(time, unit, weekday) {\n    switch (unit) {\n    case 'second': return startOfSecond(time);\n    case 'minute': return startOfMinute(time);\n    case 'hour': return startOfHour(time);\n    case 'day': return startOfDay(time);\n    case 'week': return startOfWeek(time);\n    case 'isoWeek': return startOfWeek(time, {weekStartsOn: +weekday});\n    case 'month': return startOfMonth(time);\n    case 'quarter': return startOfQuarter(time);\n    case 'year': return startOfYear(time);\n    default: return time;\n    }\n  },\n\n  endOf: function(time, unit) {\n    switch (unit) {\n    case 'second': return endOfSecond(time);\n    case 'minute': return endOfMinute(time);\n    case 'hour': return endOfHour(time);\n    case 'day': return endOfDay(time);\n    case 'week': return endOfWeek(time);\n    case 'month': return endOfMonth(time);\n    case 'quarter': return endOfQuarter(time);\n    case 'year': return endOfYear(time);\n    default: return time;\n    }\n  }\n});\n"],
  "mappings": "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",
  "names": ["max", "min", "color", "noop", "isNullOrUndef", "value", "undefined", "isArray", "Array", "type", "Object", "prototype", "toString", "call", "slice", "isObject", "isNumberFinite", "Number", "isFinite", "finiteOrDefault", "defaultValue", "valueOrDefault", "toPercentage", "dimension", "endsWith", "parseFloat", "toDimension", "callback", "fn", "args", "thisArg", "apply", "each", "loopable", "reverse", "i", "len", "keys", "length", "_elementsEqual", "a0", "a1", "ilen", "v0", "v1", "datasetIndex", "index", "clone", "source", "map", "target", "create", "klen", "k", "isValidKey", "key", "indexOf", "_merger", "options", "tval", "sval", "merge", "sources", "merger", "current", "mergeIf", "_mergerIf", "hasOwnProperty", "keyResolvers", "v", "x", "o", "y", "_splitKey", "key", "parts", "split", "keys", "tmp", "part", "endsWith", "slice", "push", "_getKeyResolver", "obj", "k", "resolveObjectKey", "resolver", "_capitalize", "str", "charAt", "toUpperCase", "defined", "value", "PI", "Math", "TAU", "PITAU", "INFINITY", "Number", "POSITIVE_INFINITY", "RAD_PER_DEG", "HALF_PI", "QUARTER_PI", "TWO_THIRDS_PI", "log10", "sign", "almostEquals", "x", "y", "epsilon", "abs", "niceNum", "range", "roundedRange", "round", "niceRange", "pow", "floor", "fraction", "niceFraction", "_factorize", "value", "result", "sqrt", "i", "push", "sort", "a", "b", "pop", "isNonPrimitive", "n", "Symbol", "toPrimitive", "isNumber", "isNaN", "parseFloat", "isFinite", "almostWhole", "rounded", "_setMinAndMaxByKey", "array", "target", "property", "ilen", "length", "min", "max", "toRadians", "degrees", "toDegrees", "radians", "_decimalPlaces", "isFiniteNumber", "e", "p", "getAngleFromPoint", "centrePoint", "anglePoint", "distanceFromXCenter", "distanceFromYCenter", "radialDistanceFromCenter", "angle", "atan2", "distance", "distanceBetweenPoints", "pt1", "pt2", "_angleDiff", "_normalizeAngle", "_angleBetween", "start", "end", "sameAngleIsFullCircle", "s", "angleToStart", "angleToEnd", "startToAngle", "endToAngle", "_limitValue", "_int16Range", "_isBetween", "_lookup", "table", "cmp", "index", "hi", "lo", "mid", "_lookupByKey", "key", "last", "ti", "_filterBetween", "values", "min", "max", "start", "end", "length", "slice", "arrayEvents", "listenArrayEvents", "array", "listener", "_chartjs", "listeners", "push", "Object", "defineProperty", "configurable", "enumerable", "value", "forEach", "key", "method", "_capitalize", "base", "args", "res", "apply", "object", "unlistenArrayEvents", "stub", "index", "indexOf", "splice", "_arrayUnique", "items", "set", "Set", "size", "Array", "from", "requestAnimFrame", "window", "callback", "requestAnimationFrame", "_toLeftRightCenter", "align", "_alignStartEnd", "start", "end", "_textX", "left", "right", "rtl", "check", "_getStartAndCountOfVisiblePoints", "meta", "points", "animationsDisabled", "pointCount", "length", "count", "_sorted", "iScale", "vScale", "_parsed", "spanGaps", "dataset", "options", "axis", "min", "max", "minDefined", "maxDefined", "getUserBounds", "Math", "_lookupByKey", "lo", "getPixelForValue", "distanceToDefinedLo", "slice", "reverse", "findIndex", "point", "isNullOrUndef", "_limitValue", "hi", "distanceToDefinedHi", "_scaleRangesChanged", "xScale", "yScale", "_scaleRanges", "newRanges", "xmin", "xmax", "ymin", "ymax", "changed", "Object", "assign", "atEdge", "t", "elasticIn", "s", "p", "pow", "sin", "TAU", "elasticOut", "effects", "linear", "easeInQuad", "easeOutQuad", "easeInOutQuad", "easeInCubic", "easeOutCubic", "easeInOutCubic", "easeInQuart", "easeOutQuart", "easeInOutQuart", "easeInQuint", "easeOutQuint", "easeInOutQuint", "easeInSine", "cos", "HALF_PI", "easeOutSine", "easeInOutSine", "PI", "easeInExpo", "easeOutExpo", "easeInOutExpo", "easeInCirc", "sqrt", "easeOutCirc", "easeInOutCirc", "easeInElastic", "easeOutElastic", "easeInOutElastic", "easeInBack", "easeOutBack", "easeInOutBack", "easeInBounce", "easeOutBounce", "m", "d", "easeInOutBounce", "isPatternOrGradient", "value", "type", "toString", "color", "Color", "getHoverColor", "saturate", "darken", "hexString", "numbers", "colors", "applyAnimationsDefaults", "defaults", "set", "delay", "undefined", "duration", "easing", "fn", "from", "loop", "to", "describe", "_fallback", "_indexable", "_scriptable", "name", "properties", "active", "animation", "resize", "show", "animations", "visible", "hide", "v", "applyLayoutsDefaults", "autoPadding", "padding", "top", "bottom", "intlCache", "Map", "getNumberFormat", "locale", "cacheKey", "JSON", "stringify", "formatter", "get", "Intl", "NumberFormat", "formatNumber", "num", "format", "formatters", "values", "isArray", "numeric", "tickValue", "index", "ticks", "chart", "notation", "delta", "maxTick", "abs", "calculateDelta", "logDelta", "log10", "numDecimal", "isNaN", "floor", "minimumFractionDigits", "maximumFractionDigits", "logarithmic", "remain", "significand", "includes", "call", "applyScaleDefaults", "display", "offset", "beginAtZero", "bounds", "clip", "grace", "grid", "lineWidth", "drawOnChartArea", "drawTicks", "tickLength", "tickWidth", "_ctx", "tickColor", "border", "dash", "dashOffset", "width", "title", "text", "minRotation", "maxRotation", "mirror", "textStrokeWidth", "textStrokeColor", "autoSkip", "autoSkipPadding", "labelOffset", "callback", "Ticks", "minor", "major", "crossAlign", "showLabelBackdrop", "backdropColor", "backdropPadding", "route", "startsWith", "overrides", "create", "descriptors", "getScope", "node", "key", "keys", "split", "i", "n", "k", "root", "scope", "merge", "Defaults", "constructor", "_descriptors", "_appliers", "backgroundColor", "borderColor", "datasets", "devicePixelRatio", "context", "platform", "getDevicePixelRatio", "elements", "events", "font", "family", "size", "style", "lineHeight", "weight", "hover", "hoverBackgroundColor", "ctx", "hoverBorderColor", "hoverColor", "indexAxis", "interaction", "mode", "intersect", "includeInvisible", "maintainAspectRatio", "onHover", "onClick", "parsing", "plugins", "responsive", "scale", "scales", "showLine", "drawActiveElementsOnTop", "apply", "override", "targetScope", "targetName", "scopeObject", "targetScopeObject", "privateName", "defineProperties", "writable", "enumerable", "local", "target", "isObject", "valueOrDefault", "appliers", "forEach", "toFontString", "_measureText", "data", "gc", "longest", "string", "textWidth", "measureText", "push", "_longestText", "arrayOfThings", "cache", "garbageCollect", "save", "ilen", "j", "jlen", "thing", "nestedThing", "restore", "gcLen", "splice", "_alignPixel", "pixel", "currentDevicePixelRatio", "halfWidth", "round", "drawPoint", "ctx", "options", "x", "y", "drawPointLegend", "w", "type", "xOffset", "yOffset", "size", "cornerRadius", "width", "xOffsetW", "yOffsetW", "style", "pointStyle", "rotation", "radius", "rad", "RAD_PER_DEG", "toString", "save", "translate", "rotate", "drawImage", "height", "restore", "isNaN", "beginPath", "ellipse", "TAU", "arc", "closePath", "moveTo", "Math", "sin", "cos", "TWO_THIRDS_PI", "lineTo", "QUARTER_PI", "PI", "HALF_PI", "SQRT1_2", "rect", "fill", "borderWidth", "stroke", "_isPointInArea", "point", "area", "margin", "left", "right", "top", "bottom", "clipArea", "clip", "unclipArea", "_steppedLineTo", "previous", "target", "flip", "mode", "midpoint", "_bezierCurveTo", "bezierCurveTo", "cp1x", "cp2x", "cp1y", "cp2y", "setRenderOpts", "opts", "translation", "isNullOrUndef", "color", "fillStyle", "textAlign", "textBaseline", "decorateText", "line", "strikethrough", "underline", "metrics", "measureText", "actualBoundingBoxLeft", "actualBoundingBoxRight", "actualBoundingBoxAscent", "actualBoundingBoxDescent", "yDecoration", "strokeStyle", "lineWidth", "decorationWidth", "drawBackdrop", "oldColor", "fillRect", "renderText", "text", "font", "lines", "isArray", "strokeWidth", "strokeColor", "i", "string", "length", "backdrop", "strokeText", "maxWidth", "fillText", "Number", "lineHeight", "addRoundedRectPath", "h", "topLeft", "bottomLeft", "bottomRight", "topRight", "LINE_HEIGHT", "FONT_STYLE", "toLineHeight", "value", "matches", "match", "numberOrZero", "v", "_readValueToProps", "props", "ret", "objProps", "isObject", "keys", "Object", "read", "prop", "valueOrDefault", "toTRBL", "toTRBLCorners", "toPadding", "obj", "toFont", "fallback", "defaults", "parseInt", "console", "warn", "undefined", "family", "weight", "toFontString", "resolve", "inputs", "context", "index", "info", "cacheable", "ilen", "_addGrace", "minmax", "grace", "beginAtZero", "min", "max", "change", "toDimension", "keepZero", "add", "abs", "createContext", "parentContext", "assign", "create", "_parseObjectDataRadialScale", "meta", "data", "start", "count", "iScale", "key", "_parsing", "parsed", "Array", "i", "ilen", "index", "item", "r", "parse", "resolveObjectKey", "EPSILON", "Number", "getPoint", "points", "length", "skip", "getValueAxis", "indexAxis", "splineCurve", "firstPoint", "middlePoint", "afterPoint", "t", "previous", "current", "next", "d01", "distanceBetweenPoints", "d12", "s01", "s12", "isNaN", "fa", "fb", "x", "y", "monotoneAdjust", "deltaK", "mK", "pointsLen", "alphaK", "betaK", "tauK", "squaredMagnitude", "pointCurrent", "pointAfter", "almostEquals", "Math", "pow", "sqrt", "monotoneCompute", "valueAxis", "delta", "pointBefore", "iPixel", "vPixel", "splineCurveMonotone", "fill", "slopeDelta", "sign", "capControlPoint", "pt", "min", "max", "capBezierPoints", "area", "point", "inArea", "inAreaPrev", "inAreaNext", "_isPointInArea", "cp1x", "left", "right", "cp1y", "top", "bottom", "cp2x", "cp2y", "_updateBezierControlPoints", "options", "loop", "controlPoints", "spanGaps", "filter", "cubicInterpolationMode", "prev", "tension", "_isDomSupported", "window", "document", "supportsEventListenerOptions", "passiveSupported", "options", "passive", "_isDomSupported", "window", "addEventListener", "removeEventListener", "e", "_pointInLine", "p1", "p2", "t", "mode", "x", "y", "_steppedInterpolation", "_bezierInterpolation", "cp1", "cp2x", "cp2y", "cp2", "cp1x", "cp1y", "a", "b", "c", "d", "e", "getRightToLeftAdapter", "rectX", "width", "setWidth", "w", "textAlign", "align", "xPlus", "value", "leftForLtr", "itemWidth", "getLeftToRightAdapter", "_itemWidth", "getRtlAdapter", "rtl", "overrideTextDirection", "ctx", "direction", "style", "original", "canvas", "getPropertyValue", "getPropertyPriority", "setProperty", "prevTextDirection", "restoreTextDirection", "undefined", "propertyFn", "property", "between", "_angleBetween", "compare", "_angleDiff", "normalize", "_normalizeAngle", "_isBetween", "normalizeSegment", "start", "end", "count", "loop", "getSegment", "segment", "points", "bounds", "startBound", "endBound", "length", "i", "ilen", "_boundSegment", "result", "inside", "subStart", "point", "prevValue", "startIsBefore", "endIsBefore", "shouldStart", "shouldStop", "prev", "skip", "push", "_boundSegments", "line", "segments", "sub", "findStartAndEnd", "spanGaps", "solidSegments", "max", "last", "cur", "stop", "_computeSegments", "segmentOptions", "options", "_loop", "splitByStyles", "completeLoop", "_fullLoop", "setContext", "doSplitByStyles", "chartContext", "_chart", "getContext", "baseStyle", "readStyle", "_datasetIndex", "datasetIndex", "prevStyle", "addStyle", "s", "l", "st", "dir", "pt", "createContext", "type", "p0", "p0DataIndex", "p1DataIndex", "styleChanged", "backgroundColor", "borderCapStyle", "borderDash", "borderDashOffset", "borderJoinStyle", "borderWidth", "borderColor", "cache", "replacer", "key", "isPatternOrGradient", "includes", "indexOf", "JSON", "stringify", "getSizeForArea", "scale", "chartArea", "field", "clip", "getDatasetArea", "meta", "xScale", "yScale", "left", "right", "top", "bottom", "getDatasetClipArea", "chart", "_clip", "disabled", "area", "height", "Animator", "constructor", "_request", "_charts", "Map", "_running", "_lastDate", "undefined", "_notify", "chart", "anims", "date", "type", "callbacks", "listeners", "numSteps", "duration", "forEach", "fn", "initial", "currentStep", "Math", "min", "start", "_refresh", "requestAnimFrame", "call", "window", "_update", "Date", "now", "remaining", "running", "items", "length", "i", "draw", "item", "_active", "_total", "tick", "pop", "_getAnims", "charts", "get", "complete", "progress", "set", "listen", "event", "cb", "push", "add", "has", "reduce", "acc", "cur", "max", "_duration", "stop", "cancel", "remove", "delete", "transparent", "interpolators", "boolean", "from", "to", "factor", "color", "c0", "helpersColor", "c1", "valid", "mix", "hexString", "number", "Animation", "cfg", "target", "prop", "currentValue", "resolve", "_fn", "_easing", "effects", "easing", "linear", "_start", "floor", "delay", "_loop", "loop", "_target", "_prop", "_from", "_to", "_promises", "active", "update", "elapsed", "remain", "wait", "promises", "Promise", "res", "rej", "resolved", "method", "Animations", "config", "_chart", "_properties", "configure", "isObject", "animationOptions", "Object", "keys", "defaults", "animation", "animatedProps", "getOwnPropertyNames", "key", "option", "isArray", "properties", "_animateOptions", "values", "newOptions", "options", "resolveTargetOptions", "animations", "_createAnimations", "$shared", "awaitAll", "$animations", "then", "props", "charAt", "value", "size", "assign", "animator", "anim", "all", "scaleClip", "scale", "allowedOverflow", "opts", "reverse", "end", "defaultClip", "xScale", "yScale", "x", "y", "top", "right", "bottom", "left", "toClip", "t", "r", "b", "l", "disabled", "getSortedDatasetIndices", "filterVisible", "metasets", "_getSortedDatasetMetas", "ilen", "index", "applyStack", "stack", "dsIndex", "singleMode", "mode", "datasetIndex", "otherValue", "found", "isFinite", "sign", "convertObjectDataToArray", "data", "meta", "iScale", "vScale", "iAxisKey", "axis", "vAxisKey", "adata", "Array", "isStacked", "stacked", "getStackKey", "indexScale", "valueScale", "id", "getUserBounds", "minDefined", "maxDefined", "Number", "NEGATIVE_INFINITY", "POSITIVE_INFINITY", "getOrCreateStack", "stacks", "stackKey", "indexValue", "subStack", "getLastIndexInStack", "positive", "getMatchingVisibleMetas", "updateStacks", "controller", "parsed", "_cachedMeta", "_stacks", "iAxis", "vAxis", "itemStacks", "_top", "_bottom", "visualValues", "_visualValues", "getFirstScaleId", "scales", "filter", "shift", "createDatasetContext", "parent", "createContext", "dataset", "createDataContext", "element", "dataIndex", "raw", "clearStacks", "_parsed", "isDirectUpdateMode", "cloneIfNotShared", "cached", "shared", "createStack", "canStack", "hidden", "_stacked", "DatasetController", "_ctx", "ctx", "_cachedDataOpts", "getMeta", "_type", "_parsing", "_data", "_objectData", "_sharedOptions", "_drawStart", "_drawCount", "enableOptionSharing", "supportsDecimation", "$context", "_syncList", "datasetElementType", "dataElementType", "initialize", "linkScales", "addElements", "fill", "isPluginEnabled", "console", "warn", "updateIndex", "getDataset", "chooseId", "xid", "xAxisID", "valueOrDefault", "yid", "yAxisID", "rid", "rAxisID", "indexAxis", "iid", "iAxisID", "vid", "vAxisID", "getScaleForId", "rScale", "datasets", "getDatasetMeta", "scaleID", "_getOtherScale", "reset", "_destroy", "unlistenArrayEvents", "_dataCheck", "isExtensible", "listenArrayEvents", "buildOrUpdateElements", "resetNewElements", "stackChanged", "oldStacked", "_resyncElements", "scopeKeys", "datasetScopeKeys", "scopes", "getOptionScopes", "createResolver", "getContext", "parsing", "parse", "count", "sorted", "_sorted", "prev", "parseArrayData", "parseObjectData", "parsePrimitiveData", "isNotInOrderComparedToPrev", "labels", "getLabels", "singleScale", "xAxisKey", "yAxisKey", "resolveObjectKey", "getParsed", "getDataElement", "updateRangeFromParsed", "range", "parsedValue", "NaN", "getMinMax", "otherScale", "otherMin", "otherMax", "_skip", "getAllParsedValues", "getMaxOverflow", "getLabelAndValue", "label", "getLabelForValue", "_clip", "clip", "elements", "area", "chartArea", "drawActiveElementsOnTop", "getStyle", "resolveDatasetElementOptions", "resolveDataElementOptions", "context", "_resolveElementOptions", "elementType", "cache", "cacheKey", "sharing", "defined", "datasetElementScopeKeys", "prefixes", "names", "resolveNamedOptions", "freeze", "_resolveAnimations", "transition", "datasetAnimationScopeKeys", "_cacheable", "getSharedOptions", "includeOptions", "sharedOptions", "_animationsDisabled", "_getSharedOptions", "firstOpts", "previouslySharedOptions", "updateSharedOptions", "updateElement", "_setStyle", "removeHoverStyle", "setHoverStyle", "_removeDatasetHoverStyle", "_setDatasetHoverStyle", "arg1", "arg2", "numMeta", "numData", "_insertElements", "_removeElements", "move", "arr", "updateElements", "removed", "splice", "_sync", "args", "_dataChanges", "_onDataPush", "arguments", "_onDataPop", "_onDataShift", "_onDataSplice", "newCount", "_onDataUnshift", "getAllScaleValues", "_cache", "$bar", "visibleMetas", "concat", "_arrayUnique", "sort", "a", "computeMinSampleSize", "_length", "curr", "updateMinAndPrev", "abs", "getPixelForValue", "ticks", "getPixelForTick", "computeFitCategoryTraits", "ruler", "stackCount", "thickness", "barThickness", "ratio", "isNullOrUndef", "categoryPercentage", "barPercentage", "chunk", "pixels", "computeFlexCategoryTraits", "next", "percent", "parseFloatBar", "entry", "startValue", "endValue", "barStart", "barEnd", "_custom", "parseValue", "parseArrayOrPrimitive", "isFloatBar", "custom", "barSign", "actualBase", "isHorizontal", "borderProps", "horizontal", "base", "setBorderSkipped", "edge", "borderSkipped", "enableBorderRadius", "parseEdge", "swap", "startEnd", "orig", "v1", "v2", "v", "setInflateAmount", "inflateAmount", "BarController", "obj", "bars", "getBasePixel", "_getRuler", "vpixels", "head", "_calculateBarValuePixels", "ipixels", "_calculateBarIndexPixels", "center", "height", "width", "_getStacks", "last", "grouped", "currentParsed", "iScaleValue", "skipNull", "find", "val", "isNaN", "indexOf", "_getStackCount", "_getAxisCount", "_getAxis", "getFirstScaleIdForIndexAxis", "indexScaleId", "firstScaleAxisId", "_getStackIndex", "name", "_startPixel", "_endPixel", "baseValue", "minBarLength", "floating", "getDataVisibility", "startPixel", "getPixelForDecimal", "endPixel", "getValueForPixel", "halfGrid", "getLineWidthForValue", "maxBarThickness", "Infinity", "axisCount", "axisID", "axisNumber", "stackIndex", "rects", "numbers", "overrides", "_index_", "offset", "grid", "_value_", "beginAtZero", "BubbleController", "radius", "points", "point", "iPixel", "vPixel", "skip", "getRatioAndOffset", "rotation", "circumference", "cutout", "ratioX", "ratioY", "offsetX", "offsetY", "TAU", "startAngle", "endAngle", "startX", "cos", "startY", "sin", "endX", "endY", "calcMax", "angle", "_angleBetween", "calcMin", "maxX", "maxY", "HALF_PI", "minX", "PI", "minY", "DoughnutController", "innerRadius", "outerRadius", "getter", "_getRotation", "toRadians", "_getCircumference", "_getRotationExtents", "isDatasetVisible", "arcs", "spacing", "getMaxBorderWidth", "getMaxOffset", "maxSize", "toPercentage", "chartWeight", "_getRingWeight", "maxWidth", "maxHeight", "maxRadius", "toDimension", "radiusLength", "_getVisibleDatasetWeightTotal", "total", "calculateTotal", "_getRingWeightOffset", "_circumference", "animateRotate", "calculateCircumference", "animationOpts", "centerX", "centerY", "animateScale", "arc", "metaData", "formatNumber", "locale", "borderAlign", "borderWidth", "hoverBorderWidth", "hoverOffset", "ringWeightOffset", "weight", "descriptors", "_scriptable", "_indexable", "startsWith", "aspectRatio", "plugins", "legend", "generateLabels", "pointStyle", "map", "style", "text", "fillStyle", "backgroundColor", "strokeStyle", "borderColor", "fontColor", "lineWidth", "onClick", "e", "legendItem", "toggleDataVisibility", "LineController", "line", "_dataset", "animationsDisabled", "_getStartAndCountOfVisiblePoints", "_scaleRangesChanged", "_datasetIndex", "_decimated", "showLine", "segment", "animated", "spanGaps", "maxGapLength", "isNumber", "directUpdate", "pointsCount", "prevParsed", "nullData", "border", "firstPoint", "lastPoint", "updateControlPoints", "PolarAreaController", "_parseObjectDataRadialScale", "bind", "_updateRadius", "minSize", "cutoutPercentage", "getVisibleDatasetCount", "xCenter", "yCenter", "datasetStartAngle", "getIndexAngle", "defaultAngle", "countVisibleElements", "_computeAngle", "getDistanceFromCenterForValue", "angleLines", "display", "circular", "pointLabels", "PieController", "RadarController", "_fullLoop", "pointPosition", "getPointPositionForValue", "ScatterController", "registry", "getElement", "interaction", "abstract", "Error", "DateAdapterBase", "override", "members", "prototype", "init", "formats", "format", "diff", "startOf", "endOf", "_date", "STATIC_POSITIONS", "filterByPosition", "array", "position", "filter", "v", "pos", "filterDynamicPositionByAxis", "axis", "indexOf", "box", "sortByWeight", "reverse", "sort", "a", "b", "v0", "v1", "weight", "index", "wrapBoxes", "boxes", "layoutBoxes", "i", "ilen", "stack", "stackWeight", "length", "options", "push", "horizontal", "isHorizontal", "buildStacks", "layouts", "stacks", "wrap", "includes", "_stack", "count", "placed", "size", "setLayoutDims", "params", "vBoxMaxWidth", "hBoxMaxHeight", "layout", "fullSize", "factor", "width", "availableWidth", "height", "availableHeight", "buildLayoutBoxes", "left", "right", "top", "bottom", "centerHorizontal", "centerVertical", "leftAndTop", "concat", "rightAndBottom", "chartArea", "vertical", "getCombinedMax", "maxPadding", "Math", "max", "updateMaxPadding", "boxPadding", "updateDims", "isObject", "getPadding", "newWidth", "outerWidth", "newHeight", "outerHeight", "widthChanged", "w", "heightChanged", "h", "same", "other", "handleMaxPadding", "updatePos", "change", "y", "x", "getMargins", "marginForPositions", "positions", "margin", "forEach", "fitBoxes", "refitBoxes", "refit", "changed", "update", "setBoxDims", "placeBoxes", "userPadding", "padding", "defined", "start", "addBox", "chart", "item", "_layers", "z", "draw", "removeBox", "layoutItem", "splice", "configure", "minPadding", "toPadding", "verticalBoxes", "horizontalBoxes", "each", "beforeLayout", "visibleVerticalBoxCount", "reduce", "total", "display", "Object", "freeze", "assign", "Element", "x", "y", "active", "options", "$animations", "tooltipPosition", "useFinalPosition", "getProps", "hasValue", "isNumber", "props", "final", "anims", "ret", "forEach", "prop", "_to", "defaults", "defaultRoutes", "autoSkip", "scale", "ticks", "tickOpts", "determinedMaxTicks", "determineMaxTicks", "ticksLimit", "Math", "min", "maxTicksLimit", "majorIndices", "major", "enabled", "getMajorIndices", "numMajorIndices", "length", "first", "last", "newTicks", "skipMajors", "spacing", "calculateSpacing", "i", "ilen", "avgMajorSpacing", "round", "skip", "isNullOrUndef", "offset", "tickLength", "_tickSize", "maxScale", "_length", "maxChart", "_maxLength", "floor", "evenMajorSpacing", "getEvenSpacing", "max", "factors", "_factorize", "factor", "result", "push", "count", "next", "ceil", "majorStart", "majorEnd", "start", "valueOrDefault", "end", "arr", "len", "diff", "reverseAlign", "align", "offsetFromEdge", "edge", "getTicksLimit", "ticksLength", "sample", "numItems", "increment", "getPixelForGridLine", "index", "offsetGridLines", "validIndex", "_startPixel", "_endPixel", "epsilon", "lineValue", "getPixelForTick", "garbageCollect", "caches", "each", "cache", "gc", "gcLen", "data", "splice", "getTickMarkLength", "drawTicks", "getTitleHeight", "fallback", "display", "font", "toFont", "padding", "toPadding", "lines", "isArray", "text", "lineHeight", "height", "createScaleContext", "parent", "createContext", "type", "createTickContext", "tick", "titleAlign", "position", "reverse", "_toLeftRightCenter", "titleArgs", "top", "left", "bottom", "right", "chart", "chartArea", "scales", "rotation", "maxWidth", "titleX", "titleY", "width", "isHorizontal", "_alignStartEnd", "isObject", "positionAxisID", "Object", "keys", "value", "getPixelForValue", "HALF_PI", "Scale", "constructor", "cfg", "id", "undefined", "ctx", "_margins", "maxHeight", "paddingTop", "paddingBottom", "paddingLeft", "paddingRight", "axis", "labelRotation", "_range", "_gridLineItems", "_labelItems", "_labelSizes", "_longestTextCache", "_reversePixels", "_userMax", "_userMin", "_suggestedMax", "_suggestedMin", "_ticksLength", "_borderValue", "_cache", "_dataLimitsCached", "$context", "init", "setContext", "getContext", "parse", "suggestedMin", "suggestedMax", "raw", "getUserBounds", "finiteOrDefault", "Number", "POSITIVE_INFINITY", "NEGATIVE_INFINITY", "minDefined", "isFinite", "maxDefined", "getMinMax", "canStack", "range", "metas", "getMatchingVisibleMetas", "controller", "getPadding", "getTicks", "getLabels", "labels", "xLabels", "yLabels", "getLabelItems", "items", "_computeLabelItems", "beforeLayout", "beforeUpdate", "call", "update", "margins", "beginAtZero", "grace", "sampleSize", "assign", "beforeSetDimensions", "setDimensions", "afterSetDimensions", "beforeDataLimits", "determineDataLimits", "afterDataLimits", "_addGrace", "beforeBuildTicks", "buildTicks", "afterBuildTicks", "samplingEnabled", "_convertTicksToLabels", "configure", "beforeCalculateLabelRotation", "calculateLabelRotation", "afterCalculateLabelRotation", "source", "afterAutoSkip", "beforeFit", "fit", "afterFit", "afterUpdate", "reversePixels", "startPixel", "endPixel", "_alignToPixels", "alignToPixels", "_callHooks", "name", "notifyPlugins", "beforeTickToLabelConversion", "generateTickLabels", "label", "callback", "afterTickToLabelConversion", "numTicks", "minRotation", "maxRotation", "tickWidth", "maxLabelDiagonal", "_isVisible", "labelSizes", "_getLabelSizes", "maxLabelWidth", "widest", "maxLabelHeight", "highest", "_limitValue", "grid", "title", "sqrt", "toDegrees", "asin", "minSize", "titleOpts", "gridOpts", "titleHeight", "tickPadding", "angleRadians", "toRadians", "cos", "sin", "labelHeight", "mirror", "labelWidth", "_calculatePadding", "_handleMargins", "isRotated", "labelsBelowTicks", "offsetLeft", "offsetRight", "isFullSize", "fullSize", "_computeLabelSizes", "widths", "heights", "widestLabelSize", "highestLabelSize", "j", "jlen", "tickFont", "fontString", "nestedLabel", "_resolveTickFontOptions", "string", "_measureText", "indexOf", "valueAt", "idx", "getLabelForValue", "NaN", "getValueForPixel", "pixel", "getPixelForDecimal", "decimal", "_int16Range", "_alignPixel", "getDecimalForPixel", "getBasePixel", "getBaseValue", "optionTicks", "rot", "abs", "autoSkipPadding", "w", "h", "_computeGridLineItems", "border", "tl", "borderOpts", "axisWidth", "axisHalfWidth", "alignBorderValue", "borderValue", "alignedLineValue", "tx1", "ty1", "tx2", "ty2", "x1", "y1", "x2", "y2", "limit", "step", "context", "optsAtIndex", "optsAtIndexBorder", "lineWidth", "lineColor", "color", "borderDash", "dash", "borderDashOffset", "dashOffset", "tickColor", "tickBorderDash", "tickBorderDashOffset", "crossAlign", "tickAndPadding", "hTickAndPadding", "textAlign", "lineCount", "textOffset", "textBaseline", "_getXAxisLabelAlignment", "_getYAxisLabelAlignment", "labelOffset", "halfCount", "strokeColor", "textStrokeColor", "strokeWidth", "textStrokeWidth", "tickTextAlign", "showLabelBackdrop", "backdrop", "labelPadding", "backdropPadding", "backdropColor", "translation", "_computeLabelArea", "drawBackground", "backgroundColor", "save", "fillStyle", "fillRect", "restore", "getLineWidthForValue", "findIndex", "t", "opts", "drawGrid", "drawLine", "p1", "p2", "style", "strokeStyle", "setLineDash", "lineDashOffset", "beginPath", "moveTo", "lineTo", "stroke", "item", "drawOnChartArea", "drawBorder", "lastLineWidth", "drawLabels", "area", "clipArea", "renderTextOptions", "renderText", "unclipArea", "drawTitle", "draw", "_layers", "tz", "z", "gz", "bz", "prototype", "getSortedVisibleDatasetMetas", "axisID", "meta", "_maxDigits", "fontSize", "TypedRegistry", "scope", "override", "create", "isForType", "isPrototypeOf", "register", "proto", "getPrototypeOf", "parentScope", "isIChartComponent", "Error", "registerDefaults", "overrides", "get", "unregister", "itemDefaults", "merge", "set", "routeDefaults", "descriptors", "describe", "routes", "property", "propertyParts", "split", "sourceName", "pop", "sourceScope", "concat", "join", "parts", "targetName", "targetScope", "route", "Registry", "controllers", "DatasetController", "elements", "plugins", "_typedRegistries", "add", "args", "_each", "remove", "addControllers", "addElements", "addPlugins", "addScales", "getController", "_get", "getElement", "getPlugin", "getScale", "removeControllers", "removeElements", "removePlugins", "removeScales", "method", "typedRegistry", "arg", "reg", "_getRegistryForType", "_exec", "itemReg", "registry", "component", "camelMethod", "_capitalize", "clipSelf", "ctx", "element", "endAngle", "startAngle", "x", "y", "outerRadius", "innerRadius", "options", "borderWidth", "borderJoinStyle", "outerAngleClip", "Math", "min", "_normalizeAngle", "beginPath", "arc", "innerAngleClip", "clipWidth", "PI", "r", "endX", "cos", "endY", "sin", "startX", "startY", "lineTo", "closePath", "moveTo", "rect", "canvas", "width", "height", "clip", "clipArc", "pixelMargin", "angleMargin", "HALF_PI", "toRadiusCorners", "value", "_readValueToProps", "parseBorderRadius", "angleDelta", "o", "borderRadius", "halfThickness", "innerLimit", "computeOuterLimit", "val", "outerArcLimit", "_limitValue", "outerStart", "outerEnd", "innerStart", "innerEnd", "rThetaToXY", "theta", "pathArc", "offset", "spacing", "end", "circular", "start", "innerR", "max", "spacingOffset", "alpha", "noSpacingInnerRadius", "noSpacingOuterRadius", "avNogSpacingRadius", "adjustedAngle", "beta", "angleOffset", "outerStartAdjustedRadius", "outerEndAdjustedRadius", "outerStartAdjustedAngle", "outerEndAdjustedAngle", "innerStartAdjustedRadius", "innerEndAdjustedRadius", "innerStartAdjustedAngle", "innerEndAdjustedAngle", "outerMidAdjustedAngle", "pCenter", "p4", "innerMidAdjustedAngle", "p8", "outerStartX", "outerStartY", "outerEndX", "outerEndY", "drawArc", "fullCircles", "circumference", "i", "fill", "isNaN", "TAU", "drawBorder", "borderDash", "borderDashOffset", "inner", "borderAlign", "setLineDash", "lineDashOffset", "lineWidth", "lineJoin", "stroke", "selfJoin", "ArcElement", "Element", "constructor", "cfg", "undefined", "Object", "assign", "inRange", "chartX", "chartY", "useFinalPosition", "point", "getProps", "angle", "distance", "getAngleFromPoint", "rAdjust", "_circumference", "valueOrDefault", "nonZeroBetween", "_angleBetween", "betweenAngles", "withinRadius", "_isBetween", "getCenterPoint", "halfAngle", "halfRadius", "tooltipPosition", "draw", "floor", "save", "translate", "fix", "radiusOffset", "fillStyle", "backgroundColor", "strokeStyle", "borderColor", "restore", "id", "defaults", "defaultRoutes", "descriptors", "_scriptable", "_indexable", "name", "setStyle", "style", "lineCap", "borderCapStyle", "previous", "target", "getLineMethod", "stepped", "_steppedLineTo", "tension", "cubicInterpolationMode", "_bezierCurveTo", "pathVars", "points", "segment", "params", "count", "length", "paramsStart", "paramsEnd", "segmentStart", "segmentEnd", "outside", "loop", "ilen", "pathSegment", "line", "lineMethod", "move", "reverse", "prev", "skip", "fastPathSegment", "avgX", "countX", "prevX", "minY", "maxY", "lastY", "pointIndex", "index", "drawX", "truncX", "_getSegmentMethod", "opts", "useFastPath", "_decimated", "_loop", "_getInterpolationMethod", "_steppedInterpolation", "_bezierInterpolation", "_pointInLine", "strokePathWithCache", "path", "_path", "Path2D", "strokePathDirect", "segments", "segmentMethod", "usePath2D", "LineElement", "animated", "_chart", "_fullLoop", "_points", "_segments", "_pointsUpdated", "_datasetIndex", "updateControlPoints", "chartArea", "indexAxis", "spanGaps", "_updateBezierControlPoints", "_computeSegments", "first", "last", "interpolate", "property", "_boundSegments", "result", "_interpolate", "p1", "p2", "push", "t", "abs", "interpolated", "capBezierPoints", "el", "pos", "axis", "radius", "hitRadius", "PointElement", "parsed", "stop", "mouseX", "mouseY", "pow", "inXRange", "inYRange", "size", "hoverRadius", "area", "_isPointInArea", "drawPoint", "getRange", "hoverBorderWidth", "pointStyle", "rotation", "getBarBounds", "bar", "base", "left", "right", "top", "bottom", "half", "horizontal", "skipOrLimit", "parseBorderWidth", "maxW", "maxH", "borderSkipped", "toTRBL", "b", "l", "enableBorderRadius", "toTRBLCorners", "maxR", "enableBorder", "isObject", "topLeft", "topRight", "bottomLeft", "bottomRight", "boundingRects", "bounds", "border", "outer", "w", "h", "skipX", "skipY", "skipBoth", "hasRadius", "addNormalRectPath", "inflateRect", "amount", "refRect", "BarElement", "inflateAmount", "addRectPath", "addRoundedRectPath", "BORDER_COLORS", "BACKGROUND_COLORS", "map", "color", "replace", "getBorderColor", "getBackgroundColor", "colorizeDefaultDataset", "dataset", "colorizeDoughnutDataset", "data", "colorizePolarAreaDataset", "getColorizer", "chart", "datasetIndex", "controller", "getDatasetMeta", "DoughnutController", "PolarAreaController", "containsColorsDefinitions", "k", "containsColorsDefinition", "descriptor", "containsDefaultColorsDefenitions", "enabled", "forceOverride", "beforeLayout", "_args", "datasets", "chartOptions", "config", "elements", "containsColorDefenition", "colorizer", "forEach", "lttbDecimation", "availableWidth", "samples", "slice", "decimated", "bucketWidth", "sampledIndex", "endIndex", "a", "maxAreaPoint", "maxArea", "nextA", "avgY", "j", "avgRangeStart", "avgRangeEnd", "avgRangeLength", "rangeOffs", "rangeTo", "pointAx", "pointAy", "minMaxDecimation", "minIndex", "maxIndex", "startIndex", "xMin", "xMax", "dx", "lastIndex", "isNullOrUndef", "intermediateIndex1", "intermediateIndex2", "cleanDecimatedDataset", "_data", "defineProperty", "configurable", "enumerable", "writable", "cleanDecimatedData", "getStartAndCountOfVisiblePointsSimplified", "meta", "pointCount", "iScale", "minDefined", "maxDefined", "getUserBounds", "_lookupByKey", "lo", "hi", "algorithm", "beforeElementsUpdate", "args", "resolve", "supportsDecimation", "xAxis", "scales", "xAxisID", "type", "parsing", "threshold", "get", "set", "d", "Error", "destroy", "tpoints", "parts", "_findSegmentEnd", "_getBounds", "source", "targetSegments", "tgt", "subBounds", "fillSources", "_boundSegment", "fillSource", "_getEdge", "_pointsFromSegments", "boundary", "linePoints", "prop", "fn", "_createBoundaryLine", "isArray", "_shouldApplyFill", "_resolveTarget", "sources", "propagate", "visited", "indexOf", "isFinite", "visible", "_decodeFill", "parseFillOption", "parseFloat", "decodeTargetIndex", "firstCh", "_getTargetPixel", "scale", "pixel", "getPixelForValue", "getBasePixel", "_getTargetValue", "startValue", "getBaseValue", "fillOption", "_buildStackLine", "sourcePoints", "linesBelow", "getLinesBelow", "addPointsBelow", "below", "metas", "getMatchingVisibleMetas", "hidden", "unshift", "sourcePoint", "postponed", "findPoint", "pointValue", "firstValue", "lastValue", "simpleArc", "_getTarget", "getLineByIndex", "computeBoundary", "isDatasetVisible", "getPointPositionForValue", "computeCircularBoundary", "computeLinearBoundary", "isHorizontal", "getLabels", "grid", "center", "getDistanceFromCenterForValue", "_drawfill", "lineOpts", "above", "getDatasetClipArea", "clipArea", "doFill", "unclipArea", "fillColor", "clipVertical", "clipHorizontal", "clipY", "lineLoop", "firstPoint", "lastPoint", "clipX", "src", "notShape", "clipBounds", "interpolatedLineTo", "targetLoop", "interpolatedPoint", "afterDatasetsUpdate", "vScale", "$filler", "beforeDraw", "drawTime", "metasets", "getSortedVisibleDatasetMetas", "beforeDatasetsDraw", "beforeDatasetDraw", "getBoxSize", "labelOpts", "fontSize", "boxHeight", "boxWidth", "usePointStyle", "pointStyleWidth", "itemHeight", "itemsEqual", "Legend", "_added", "legendHitBoxes", "_hoveredItem", "doughnutMode", "legendItems", "columnSizes", "lineWidths", "maxHeight", "maxWidth", "_margins", "position", "weight", "fullSize", "update", "margins", "setDimensions", "buildLabels", "fit", "labels", "call", "generateLabels", "filter", "item", "sort", "display", "labelFont", "toFont", "font", "titleHeight", "_computeTitleHeight", "string", "_fitRows", "_fitCols", "padding", "hitboxes", "lineHeight", "totalHeight", "textAlign", "textBaseline", "row", "legendItem", "itemWidth", "measureText", "text", "_itemHeight", "heightLimit", "totalWidth", "currentColWidth", "currentColHeight", "col", "calculateItemSize", "adjustHitBoxes", "align", "rtl", "rtlHelper", "getRtlAdapter", "_alignStartEnd", "hitbox", "leftForLtr", "_draw", "defaultColor", "halfFontSize", "cursor", "drawTitle", "drawLegendBox", "lineDash", "drawOptions", "SQRT2", "centerX", "xPlus", "centerY", "drawPointLegend", "yBoxTop", "xBoxLeft", "values", "some", "v", "fillText", "renderText", "strikethrough", "overrideTextDirection", "textDirection", "fontColor", "textWidth", "setWidth", "realX", "_textX", "fontLineHeight", "calculateLegendItemHeight", "restoreTextDirection", "titleOpts", "title", "titleFont", "titlePadding", "toPadding", "topPaddingPlusHalfFontSize", "reduce", "acc", "_toLeftRightCenter", "_getLegendItemAt", "hitBox", "lh", "handleEvent", "e", "isListened", "hoveredItem", "sameItem", "onLeave", "onHover", "onClick", "calculateItemWidth", "calculateItemHeight", "legendItemText", "labelHeight", "_element", "legend", "layouts", "configure", "addBox", "removeBox", "beforeUpdate", "afterUpdate", "afterEvent", "replay", "event", "ci", "hide", "show", "useBorderRadius", "_getSortedDatasetMetas", "getStyle", "label", "startsWith", "includes", "Title", "_padding", "lineCount", "textSize", "_drawArgs", "titleX", "titleY", "fontOpts", "translation", "createTitle", "titleBlock", "WeakMap", "delete", "positioners", "average", "items", "len", "xSet", "Set", "hasValue", "add", "xAverage", "nearest", "eventPosition", "minDistance", "Number", "POSITIVE_INFINITY", "nearestElement", "distanceBetweenPoints", "tp", "pushOrConcat", "toPush", "Array", "prototype", "apply", "splitNewlines", "str", "String", "split", "createTooltipItem", "getLabelAndValue", "getParsed", "raw", "formattedValue", "getDataset", "dataIndex", "getTooltipSize", "tooltip", "body", "footer", "bodyFont", "footerFont", "titleLineCount", "footerLineCount", "bodyLineItemCount", "combinedBodyLength", "bodyItem", "before", "lines", "after", "beforeBody", "afterBody", "titleSpacing", "titleMarginBottom", "bodyLineHeight", "displayColors", "bodySpacing", "footerMarginTop", "footerSpacing", "widthPadding", "maxLineWidth", "each", "concat", "boxPadding", "determineYAlign", "doesNotFitWithAlign", "xAlign", "caret", "caretSize", "caretPadding", "determineXAlign", "yAlign", "chartWidth", "determineAlignment", "alignX", "alignY", "paddingAndSize", "getBackgroundPoint", "alignment", "cornerRadius", "getAlignedX", "getBeforeAfterBodyLines", "callback", "createTooltipContext", "parent", "tooltipItems", "createContext", "overrideCallbacks", "callbacks", "context", "override", "defaultCallbacks", "beforeTitle", "noop", "labelCount", "mode", "afterTitle", "beforeLabel", "tooltipItem", "labelColor", "labelTextColor", "bodyColor", "labelPointStyle", "afterLabel", "beforeFooter", "afterFooter", "invokeCallbackWithFallback", "arg", "Tooltip", "opacity", "_active", "_eventPosition", "_size", "_cachedAnimations", "_tooltipItems", "$animations", "$context", "dataPoints", "caretX", "caretY", "labelColors", "labelPointStyles", "labelTextColors", "initialize", "_resolveAnimations", "cached", "setContext", "getContext", "animation", "animations", "Animations", "_cacheable", "freeze", "getTitle", "getBeforeBody", "getBody", "bodyItems", "scoped", "getAfterBody", "getFooter", "_createItems", "active", "array", "itemSort", "changed", "properties", "positionAndSize", "backgroundPoint", "external", "drawCaret", "tooltipPoint", "caretPosition", "getCaretPosition", "x1", "y1", "x2", "y2", "x3", "y3", "ptX", "ptY", "pt", "titleAlign", "titleColor", "_drawColorBox", "colorX", "rtlColorX", "yOffSet", "colorY", "multiKeyBackground", "outerX", "innerX", "fillRect", "strokeRect", "drawBody", "bodyAlign", "xLinePadding", "fillLineOfText", "bodyAlignForCalculation", "textColor", "jlen", "drawFooter", "footerAlign", "footerColor", "drawBackground", "tooltipSize", "quadraticCurveTo", "_updateAnimationTarget", "anims", "animX", "animY", "_to", "_willRender", "hasTooltipContent", "globalAlpha", "getActiveElements", "setActiveElements", "activeElements", "lastActive", "_elementsEqual", "positionChanged", "_positionChanged", "_ignoreReplayEvents", "inChartArea", "_getActiveElements", "getElementsAtEventForMode", "afterInit", "reset", "afterDraw", "notifyPlugins", "cancelable", "duration", "easing", "numbers", "_fallback", "additionalOptionScopes", "addIfString", "addedLabels", "findOrAddLabel", "lastIndexOf", "validIndex", "round", "_getLabelForValue", "CategoryScale", "Scale", "_startValue", "_valueRange", "_addedLabels", "init", "scaleOptions", "added", "splice", "parse", "determineDataLimits", "getMinMax", "buildTicks", "ticks", "getLabelForValue", "_reversePixels", "NaN", "getPixelForDecimal", "getPixelForTick", "getValueForPixel", "getDecimalForPixel", "generateTicks", "generationOptions", "dataRange", "MIN_SPACING", "step", "precision", "maxTicks", "maxDigits", "includeBounds", "unit", "maxSpaces", "rmin", "rmax", "countDefined", "minSpacing", "niceNum", "factor", "niceMin", "niceMax", "numSpaces", "ceil", "almostWhole", "almostEquals", "decimalPlaces", "_decimalPlaces", "relativeLabelSize", "tickValue", "minRotation", "rad", "toRadians", "ratio", "LinearScaleBase", "_endValue", "handleTickRangeOptions", "beginAtZero", "setMin", "setMax", "minSign", "sign", "maxSign", "getTickLimit", "tickOpts", "maxTicksLimit", "stepSize", "console", "warn", "computeTickLimit", "numericGeneratorOptions", "_maxDigits", "_range", "_setMinAndMaxByKey", "formatNumber", "locale", "format", "LinearScale", "tickFont", "_resolveTickFontOptions", "Ticks", "formatters", "numeric", "log10Floor", "log10", "changeExponent", "m", "isMajor", "tickVal", "remain", "steps", "rangeExp", "rangeStep", "startExp", "range", "finiteOrDefault", "minExp", "exp", "significand", "major", "lastTick", "LogarithmicScale", "_zero", "_suggestedMin", "_userMin", "_userMax", "decimal", "logarithmic", "getTickBackdropHeight", "backdropPadding", "measureLabelSize", "_longestText", "determineLimits", "fitWithPointLabels", "orig", "limits", "labelSizes", "valueCount", "_pointLabels", "pointLabelOpts", "pointLabels", "additionalAngle", "centerPointLabels", "getPointLabelContext", "pointPosition", "getPointPosition", "drawingArea", "plFont", "angleRadians", "getIndexAngle", "toDegrees", "hLimits", "vLimits", "updateLimits", "setCenterPoint", "_pointLabelItems", "buildPointLabelItems", "createPointLabelItem", "itemOpts", "outerDistance", "extra", "pointLabelPosition", "yForAngle", "getTextAlignForAngle", "leftForTextAlign", "isNotOverlapped", "apexesInArea", "drawPointLabelBox", "backdropColor", "backdropLeft", "backdropTop", "backdropWidth", "backdropHeight", "drawPointLabels", "optsAtIndex", "pathRadiusLine", "xCenter", "yCenter", "drawRadiusLine", "gridLineOpts", "borderOpts", "dash", "dashOffset", "createPointLabelContext", "RadialLinearScale", "generateTickLabels", "callCallback", "getDataVisibility", "leftMovement", "rightMovement", "topMovement", "bottomMovement", "angleMultiplier", "scalingFactor", "getValueForDistanceFromCenter", "scaledDistance", "pointLabel", "distanceFromCenter", "getBasePosition", "getPointLabelPosition", "drawGrid", "angleLines", "tick", "optsAtIndexBorder", "drawLabels", "rotate", "showLabelBackdrop", "strokeColor", "textStrokeColor", "strokeWidth", "textStrokeWidth", "animate", "INTERVALS", "millisecond", "common", "second", "minute", "hour", "day", "week", "month", "quarter", "year", "UNITS", "keys", "sorter", "input", "adapter", "_adapter", "parser", "isoWeekday", "_parseOpts", "isNumber", "startOf", "determineUnitForAutoTicks", "minUnit", "capacity", "interval", "MAX_SAFE_INTEGER", "determineUnitForFormatting", "numTicks", "diff", "determineMajorUnit", "addTick", "time", "timestamps", "_lookup", "timestamp", "setMajorTicks", "majorUnit", "ticksFromTimestamps", "TimeScale", "props", "_cache", "all", "_unit", "_majorUnit", "_offsets", "_normalized", "scaleOpts", "adapters", "_date", "date", "mergeIf", "displayFormats", "formats", "normalized", "_applyBounds", "_getLabelBounds", "Date", "now", "endOf", "arr", "getLabelTimestamps", "NEGATIVE_INFINITY", "timeOpts", "_generate", "_filterBetween", "autoSkip", "_getLabelCapacity", "initOffsets", "afterAutoSkip", "offsetAfterAutoskip", "getDecimalForValue", "limit", "minor", "weekday", "hasWeekday", "getDataTimestamps", "tooltipFormat", "datetime", "fmt", "_tickFormatFunction", "formatter", "minorFormat", "majorFormat", "offsets", "_getLabelSize", "ticksOpts", "tickLabelWidth", "maxRotation", "cosRotation", "sinRotation", "tickFontSize", "exampleTime", "exampleLabel", "getAllParsedValues", "normalize", "_arrayUnique", "table", "prevSource", "nextSource", "prevTarget", "nextTarget", "span", "TimeSeriesScale", "_table", "_minPos", "_tableRange", "_getTimestampsForTable", "buildLookupTable", "curr", "next", "defaultOptions", "sign", "round", "sign", "sign", "defaultOptions", "format", "index", "index", "defaultOptions", "defaultOptions", "sign", "formatters", "localize", "sign", "formatLong", "format", "defaultOptions", "formatters", "getDefaultOptions", "match", "match", "sign", "match", "match", "match", "match", "match", "match", "match", "match", "match", "isLeapYear", "match", "isLeapYear", "defaultOptions", "match", "match", "match", "match", "match", "match", "match", "match", "match", "match", "match", "match", "match", "formattingTokensRegExp", "longFormattingTokensRegExp", "escapedStringRegExp", "doubleQuoteRegExp", "unescapedLatinCharacterRegExp", "parse", "defaultOptions", "getDefaultOptions", "cleanEscapedString", "index", "sign", "isLeapYearIndex", "parse", "max", "min"]
}
